08:40:55.999,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d: startup date [Thu Feb 01 08:40:55 CST 2018]; root of context hierarchy
08:40:56.664,HV000001: Hibernate Validator 5.4.1.Final
08:40:56.715,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:40:56.774,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75905a9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:40:57.954,No active profile set, falling back to default profiles: default
08:40:58.015,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@736ac09a: startup date [Thu Feb 01 08:40:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
08:41:01.143,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
08:41:01.188,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:41:01.295,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:41:01.930,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8ba2fddf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:41:01.963,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75905a9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:41:03.436,Tomcat initialized with port(s): 9091 (http)
08:41:03.455,Starting service [Tomcat]
08:41:03.458,Starting Servlet Engine: Apache Tomcat/8.5.16
08:41:03.752,Initializing Spring embedded WebApplicationContext
08:41:03.754,Root WebApplicationContext: initialization completed in 5738 ms
08:41:04.473,Mapping servlet: 'dispatcherServlet' to [/]
08:41:04.487,Mapping filter: 'metricsFilter' to: [/*]
08:41:04.488,Mapping filter: 'characterEncodingFilter' to: [/*]
08:41:04.488,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
08:41:04.488,Mapping filter: 'httpPutFormContentFilter' to: [/*]
08:41:04.488,Mapping filter: 'requestContextFilter' to: [/*]
08:41:04.488,Mapping filter: 'webRequestLoggingFilter' to: [/*]
08:41:06.247,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
08:41:06.247,Adding discovered server 192.168.1.90:17000 to client view of cluster
08:41:06.432,Opened connection [connectionId{localValue:1, serverValue:557}] to 192.168.1.90:17000
08:41:06.436,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1513065}
08:41:06.438,Discovered cluster type of STANDALONE
08:41:07.031,Opened connection [connectionId{localValue:2, serverValue:558}] to 192.168.1.90:17000
08:41:07.779,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@433b1597: startup date [Thu Feb 01 08:41:07 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@736ac09a
08:41:07.813,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:41:09.834,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
08:41:09.837,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
08:41:09.837,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
08:41:09.837,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
08:41:09.838,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
08:41:09.840,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
08:41:09.841,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
08:41:09.843,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
08:41:09.843,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
08:41:09.844,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
08:41:09.844,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
08:41:09.844,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
08:41:09.848,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
08:41:09.848,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
08:41:09.849,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
08:41:09.849,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
08:41:09.849,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
08:41:09.855,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
08:41:09.856,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
08:41:09.859,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
08:41:09.866,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
08:41:09.867,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
08:41:09.977,No URLs will be polled as dynamic configuration sources.
08:41:09.977,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
08:41:09.991,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2979c6ef
08:41:13.179,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
08:41:13.181,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.182,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.183,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
08:41:13.184,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
08:41:13.185,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
08:41:13.187,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
08:41:13.188,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.190,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.192,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
08:41:13.193,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.194,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
08:41:13.194,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
08:41:13.195,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.198,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
08:41:13.199,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
08:41:13.200,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.202,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
08:41:13.203,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.204,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
08:41:13.205,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.206,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.207,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.208,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:41:13.209,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
08:41:13.695,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
08:41:14.552,No URLs will be polled as dynamic configuration sources.
08:41:14.552,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
08:41:15.063,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@736ac09a: startup date [Thu Feb 01 08:40:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
08:41:15.284,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:41:15.285,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:41:15.406,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:41:16.807,Registering beans for JMX exposure on startup
08:41:16.826,Bean with name 'environmentManager' has been autodetected for JMX exposure
08:41:16.828,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
08:41:16.829,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
08:41:16.831,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
08:41:16.832,Bean with name 'refreshScope' has been autodetected for JMX exposure
08:41:16.838,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
08:41:16.914,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
08:41:16.929,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
08:41:16.961,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=736ac09a,type=ConfigurationPropertiesRebinder]
08:41:16.977,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
08:41:16.989,Registering beans for JMX exposure on startup
08:41:17.250,Starting beans in phase 0
08:41:17.265,Setting initial instance status as: STARTING
08:41:17.463,Initializing Eureka in region us-east-1
08:41:17.594,Using JSON encoding codec LegacyJacksonJson
08:41:17.594,Using JSON decoding codec LegacyJacksonJson
08:41:17.817,Using XML encoding codec XStreamXml
08:41:17.818,Using XML decoding codec XStreamXml
08:41:18.250,Resolving eureka endpoints via configuration
08:41:18.691,Disable delta property : false
08:41:18.691,Single vip registry refresh property : null
08:41:18.691,Force full registry fetch : false
08:41:18.691,Application is null : false
08:41:18.691,Registered Applications size is zero : true
08:41:18.692,Application version is -1: true
08:41:18.692,Getting all instance registry info from the eureka server
08:41:19.177,The response status is 200
08:41:19.178,Starting heartbeat executor: renew interval is: 30
08:41:19.183,InstanceInfoReplicator onDemand update allowed rate per min is 4
08:41:19.193,Discovery Client initialized at timestamp 1517445679188 with initial instances count: 3
08:41:19.302,Registering application nhb-nbiot with eureka with status UP
08:41:19.304,Saw local status change event StatusChangeEvent [timestamp=1517445679304, current=UP, previous=STARTING]
08:41:19.318,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
08:41:19.334,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
08:41:19.348,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
08:41:19.357,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
08:41:19.362,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
08:41:19.368,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
08:41:19.373,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
08:41:19.378,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
08:41:19.382,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
08:41:19.388,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
08:41:19.408,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
08:41:19.414,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
08:41:19.423,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
08:41:19.428,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
08:41:19.433,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
08:41:19.443,Starting beans in phase 2147483647
08:41:19.443,Context refreshed
08:41:19.490,Found 1 custom documentation plugin(s)
08:41:19.515,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
08:41:19.691,Scanning for api listing references
08:41:19.967,Generating unique operation named: addUsingPOST_1
08:41:19.975,Generating unique operation named: deleteUsingPOST_1
08:41:19.983,Generating unique operation named: findByIdUsingPOST_1
08:41:19.992,Generating unique operation named: listUsingPOST_1
08:41:20.001,Generating unique operation named: modifyUsingPOST_1
08:41:20.017,Generating unique operation named: deleteUsingPOST_2
08:41:20.027,Generating unique operation named: findByIdUsingPOST_2
08:41:20.073,Starting poller
08:41:20.121,Initializing ProtocolHandler ["http-nio-9091"]
08:41:20.151,Starting ProtocolHandler ["http-nio-9091"]
08:41:20.176,Using a shared selector for servlet write/read
08:41:20.233,Tomcat started on port(s): 9091 (http)
08:41:20.235,Updating port to 9091
08:41:20.242,Started NhbNbApplication in 25.981 seconds (JVM running for 26.906)
08:46:18.699,Resolving eureka endpoints via configuration
08:51:18.704,Resolving eureka endpoints via configuration
08:56:45.824,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56: startup date [Thu Feb 01 08:56:45 CST 2018]; root of context hierarchy
08:56:46.568,HV000001: Hibernate Validator 5.4.1.Final
08:56:46.582,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:56:46.679,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c3541110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:56:47.923,No active profile set, falling back to default profiles: default
08:56:47.969,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cdd2c73: startup date [Thu Feb 01 08:56:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56
08:56:51.044,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
08:56:51.091,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:56:51.265,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:56:51.936,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d966b454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:56:51.979,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c3541110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
08:56:53.803,Tomcat initialized with port(s): 9091 (http)
08:56:53.827,Starting service [Tomcat]
08:56:53.829,Starting Servlet Engine: Apache Tomcat/8.5.16
08:56:54.093,Initializing Spring embedded WebApplicationContext
08:56:54.094,Root WebApplicationContext: initialization completed in 6125 ms
08:56:54.768,Mapping servlet: 'dispatcherServlet' to [/]
08:56:54.779,Mapping filter: 'metricsFilter' to: [/*]
08:56:54.780,Mapping filter: 'characterEncodingFilter' to: [/*]
08:56:54.781,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
08:56:54.781,Mapping filter: 'httpPutFormContentFilter' to: [/*]
08:56:54.781,Mapping filter: 'requestContextFilter' to: [/*]
08:56:54.781,Mapping filter: 'webRequestLoggingFilter' to: [/*]
08:56:56.622,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
08:56:56.623,Adding discovered server 192.168.1.90:17000 to client view of cluster
08:56:56.741,Opened connection [connectionId{localValue:1, serverValue:561}] to 192.168.1.90:17000
08:56:56.753,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=9106476}
08:56:56.756,Discovered cluster type of STANDALONE
08:56:57.333,Opened connection [connectionId{localValue:2, serverValue:562}] to 192.168.1.90:17000
08:56:58.377,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19d76106: startup date [Thu Feb 01 08:56:58 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cdd2c73
08:56:58.419,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:57:00.547,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
08:57:00.550,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
08:57:00.551,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
08:57:00.551,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
08:57:00.552,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
08:57:00.556,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
08:57:00.556,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
08:57:00.559,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
08:57:00.560,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
08:57:00.560,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
08:57:00.561,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
08:57:00.561,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
08:57:00.569,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
08:57:00.570,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
08:57:00.570,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
08:57:00.570,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
08:57:00.571,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
08:57:00.576,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
08:57:00.578,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
08:57:00.580,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
08:57:00.589,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
08:57:00.591,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
08:57:00.840,No URLs will be polled as dynamic configuration sources.
08:57:00.840,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
08:57:00.860,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5c81ddab
08:57:04.955,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.957,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.959,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.960,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
08:57:04.961,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.964,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
08:57:04.964,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.965,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
08:57:04.967,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
08:57:04.971,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
08:57:04.975,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
08:57:04.976,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
08:57:04.976,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.978,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.979,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.980,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.981,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
08:57:04.982,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.984,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.986,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
08:57:04.989,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
08:57:04.990,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
08:57:04.991,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
08:57:04.994,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
08:57:04.995,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
08:57:05.547,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
08:57:06.346,No URLs will be polled as dynamic configuration sources.
08:57:06.346,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
08:57:06.831,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cdd2c73: startup date [Thu Feb 01 08:56:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56
08:57:07.085,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:57:07.086,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:57:07.585,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
08:57:09.346,Registering beans for JMX exposure on startup
08:57:09.366,Bean with name 'environmentManager' has been autodetected for JMX exposure
08:57:09.370,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
08:57:09.371,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
08:57:09.372,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
08:57:09.374,Bean with name 'refreshScope' has been autodetected for JMX exposure
08:57:09.381,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
08:57:09.406,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
08:57:09.423,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
08:57:09.457,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cdd2c73,type=ConfigurationPropertiesRebinder]
08:57:09.472,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
08:57:09.483,Registering beans for JMX exposure on startup
08:57:09.828,Starting beans in phase 0
08:57:09.844,Setting initial instance status as: STARTING
08:57:09.950,Initializing Eureka in region us-east-1
08:57:10.106,Using JSON encoding codec LegacyJacksonJson
08:57:10.107,Using JSON decoding codec LegacyJacksonJson
08:57:10.381,Using XML encoding codec XStreamXml
08:57:10.381,Using XML decoding codec XStreamXml
08:57:10.842,Resolving eureka endpoints via configuration
08:57:11.238,Disable delta property : false
08:57:11.238,Single vip registry refresh property : null
08:57:11.238,Force full registry fetch : false
08:57:11.238,Application is null : false
08:57:11.238,Registered Applications size is zero : true
08:57:11.238,Application version is -1: true
08:57:11.238,Getting all instance registry info from the eureka server
08:57:11.529,The response status is 200
08:57:11.533,Starting heartbeat executor: renew interval is: 30
08:57:11.538,InstanceInfoReplicator onDemand update allowed rate per min is 4
08:57:11.544,Discovery Client initialized at timestamp 1517446631543 with initial instances count: 4
08:57:11.697,Registering application nhb-nbiot with eureka with status UP
08:57:11.697,Saw local status change event StatusChangeEvent [timestamp=1517446631697, current=UP, previous=STARTING]
08:57:11.712,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
08:57:11.738,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
08:57:11.756,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
08:57:11.798,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
08:57:11.803,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
08:57:11.815,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
08:57:11.847,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
08:57:11.872,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
08:57:11.880,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
08:57:11.885,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
08:57:11.893,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
08:57:11.910,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
08:57:11.916,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
08:57:11.929,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
08:57:11.935,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
08:57:11.941,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
08:57:11.943,Starting beans in phase 2147483647
08:57:11.944,Context refreshed
08:57:11.978,Found 1 custom documentation plugin(s)
08:57:12.092,Scanning for api listing references
08:57:12.383,Generating unique operation named: addUsingPOST_1
08:57:12.392,Generating unique operation named: deleteUsingPOST_1
08:57:12.402,Generating unique operation named: findByIdUsingPOST_1
08:57:12.412,Generating unique operation named: listUsingPOST_1
08:57:12.420,Generating unique operation named: modifyUsingPOST_1
08:57:12.440,Generating unique operation named: deleteUsingPOST_2
08:57:12.455,Generating unique operation named: findByIdUsingPOST_2
08:57:12.521,Starting poller
08:57:12.576,Initializing ProtocolHandler ["http-nio-9091"]
08:57:12.604,Starting ProtocolHandler ["http-nio-9091"]
08:57:12.630,Using a shared selector for servlet write/read
08:57:12.693,Tomcat started on port(s): 9091 (http)
08:57:12.695,Updating port to 9091
08:57:12.705,Started NhbNbApplication in 28.533 seconds (JVM running for 29.331)
09:00:48.683,Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:683)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
09:00:48.683,Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:683)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
09:00:58.003,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:00:58.004,FrameworkServlet 'dispatcherServlet': initialization started
09:00:58.066,FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
09:02:01.710,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@75d17bf0: startup date [Thu Feb 01 09:02:01 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cdd2c73
09:02:01.873,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:02:02.333,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:02:02.369,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:02:02.378,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:02:02.389,Using serverListUpdater PollingServerListUpdater
09:02:02.479,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:02:02.482,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2d931537
09:02:03.394,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:02:11.245,Resolving eureka endpoints via configuration
09:07:11.252,Resolving eureka endpoints via configuration
09:09:26.671,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a12c404: startup date [Thu Feb 01 09:09:26 CST 2018]; root of context hierarchy
09:09:27.321,HV000001: Hibernate Validator 5.4.1.Final
09:09:27.347,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:27.428,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ccdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:28.582,No active profile set, falling back to default profiles: default
09:09:28.633,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cd7ea5: startup date [Thu Feb 01 09:09:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a12c404
09:09:31.918,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
09:09:31.965,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:32.065,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:32.759,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fcdf8323] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:32.791,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ccdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:34.198,Tomcat initialized with port(s): 9091 (http)
09:09:34.217,Starting service [Tomcat]
09:09:34.219,Starting Servlet Engine: Apache Tomcat/8.5.16
09:09:34.452,Initializing Spring embedded WebApplicationContext
09:09:34.453,Root WebApplicationContext: initialization completed in 5821 ms
09:09:35.226,Mapping servlet: 'dispatcherServlet' to [/]
09:09:35.244,Mapping filter: 'metricsFilter' to: [/*]
09:09:35.245,Mapping filter: 'characterEncodingFilter' to: [/*]
09:09:35.246,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:09:35.246,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:09:35.246,Mapping filter: 'requestContextFilter' to: [/*]
09:09:35.246,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:09:37.041,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:09:37.041,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:09:37.179,Opened connection [connectionId{localValue:1, serverValue:565}] to 192.168.1.90:17000
09:09:37.193,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=9354423}
09:09:37.196,Discovered cluster type of STANDALONE
09:09:37.825,Opened connection [connectionId{localValue:2, serverValue:566}] to 192.168.1.90:17000
09:09:38.707,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2066e897: startup date [Thu Feb 01 09:09:38 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cd7ea5
09:09:38.738,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:40.700,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:09:40.702,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:09:40.702,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:09:40.702,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:09:40.703,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:09:40.704,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:09:40.705,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:09:40.708,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:09:40.708,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:09:40.709,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:09:40.709,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:09:40.709,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:09:40.714,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:09:40.714,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:09:40.715,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:09:40.715,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:09:40.715,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:09:40.721,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:09:40.723,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:09:40.724,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:09:40.729,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:09:40.731,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:09:40.835,No URLs will be polled as dynamic configuration sources.
09:09:40.836,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:09:40.854,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@185b7cc6
09:09:44.130,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.131,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:09:44.132,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.133,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:09:44.133,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:09:44.134,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.137,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:09:44.137,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:09:44.138,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.140,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:09:44.141,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.142,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.143,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.145,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:09:44.146,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:09:44.146,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.147,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.148,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:09:44.149,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.150,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:09:44.150,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:09:44.152,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:09:44.152,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.153,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:09:44.156,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:09:44.564,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:09:45.322,No URLs will be polled as dynamic configuration sources.
09:09:45.322,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:09:45.762,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cd7ea5: startup date [Thu Feb 01 09:09:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a12c404
09:09:45.941,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:09:45.941,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:09:46.080,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:09:47.514,Registering beans for JMX exposure on startup
09:09:47.529,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:09:47.531,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:09:47.532,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:09:47.533,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:09:47.534,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:09:47.539,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:09:47.567,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:09:47.582,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:09:47.608,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=13cd7ea5,type=ConfigurationPropertiesRebinder]
09:09:47.621,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:09:47.628,Registering beans for JMX exposure on startup
09:09:47.948,Starting beans in phase 0
09:09:47.962,Setting initial instance status as: STARTING
09:09:48.047,Initializing Eureka in region us-east-1
09:09:48.196,Using JSON encoding codec LegacyJacksonJson
09:09:48.196,Using JSON decoding codec LegacyJacksonJson
09:09:48.419,Using XML encoding codec XStreamXml
09:09:48.420,Using XML decoding codec XStreamXml
09:09:48.861,Resolving eureka endpoints via configuration
09:09:49.226,Disable delta property : false
09:09:49.227,Single vip registry refresh property : null
09:09:49.227,Force full registry fetch : false
09:09:49.227,Application is null : false
09:09:49.227,Registered Applications size is zero : true
09:09:49.227,Application version is -1: true
09:09:49.227,Getting all instance registry info from the eureka server
09:09:49.473,The response status is 200
09:09:49.475,Starting heartbeat executor: renew interval is: 30
09:09:49.480,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:09:49.485,Discovery Client initialized at timestamp 1517447389485 with initial instances count: 3
09:09:49.614,Registering application nhb-nbiot with eureka with status UP
09:09:49.614,Saw local status change event StatusChangeEvent [timestamp=1517447389614, current=UP, previous=STARTING]
09:09:49.622,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:09:49.626,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:09:49.646,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:09:49.683,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:09:49.688,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:09:49.693,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:09:49.698,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:09:49.705,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:09:49.716,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:09:49.725,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:09:49.736,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:09:49.755,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:09:49.762,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:09:49.773,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:09:49.785,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:09:49.815,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:09:49.821,Starting beans in phase 2147483647
09:09:49.821,Context refreshed
09:09:49.863,Found 1 custom documentation plugin(s)
09:09:49.983,Scanning for api listing references
09:09:50.256,Generating unique operation named: addUsingPOST_1
09:09:50.264,Generating unique operation named: deleteUsingPOST_1
09:09:50.273,Generating unique operation named: findByIdUsingPOST_1
09:09:50.281,Generating unique operation named: listUsingPOST_1
09:09:50.290,Generating unique operation named: modifyUsingPOST_1
09:09:50.317,Generating unique operation named: deleteUsingPOST_2
09:09:50.333,Generating unique operation named: findByIdUsingPOST_2
09:09:50.384,Starting poller
09:09:50.428,Initializing ProtocolHandler ["http-nio-9091"]
09:09:50.451,Starting ProtocolHandler ["http-nio-9091"]
09:09:50.476,Using a shared selector for servlet write/read
09:09:50.540,Tomcat started on port(s): 9091 (http)
09:09:50.542,Updating port to 9091
09:09:50.556,Started NhbNbApplication in 25.518 seconds (JVM running for 26.545)
09:10:14.621,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:10:14.621,FrameworkServlet 'dispatcherServlet': initialization started
09:10:14.686,FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
09:10:24.317,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@227fdc45: startup date [Thu Feb 01 09:10:24 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cd7ea5
09:10:24.462,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:10:25.028,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:10:25.072,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:10:25.083,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:10:25.095,Using serverListUpdater PollingServerListUpdater
09:10:25.130,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:10:25.133,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5bab9720
09:10:26.102,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:14:49.235,Resolving eureka endpoints via configuration
09:19:49.241,Resolving eureka endpoints via configuration
09:24:49.246,Resolving eureka endpoints via configuration
09:29:49.251,Resolving eureka endpoints via configuration
09:34:49.256,Resolving eureka endpoints via configuration
09:39:15.141,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1941a8ff: startup date [Thu Feb 01 09:39:15 CST 2018]; root of context hierarchy
09:39:15.818,HV000001: Hibernate Validator 5.4.1.Final
09:39:15.832,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:39:15.918,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3a2205f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:39:17.188,No active profile set, falling back to default profiles: default
09:39:17.233,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e4c3a38: startup date [Thu Feb 01 09:39:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1941a8ff
09:39:20.471,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
09:39:20.520,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:39:20.616,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:39:21.226,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5034a938] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:39:21.262,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3a2205f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:39:22.821,Tomcat initialized with port(s): 9091 (http)
09:39:22.838,Starting service [Tomcat]
09:39:22.840,Starting Servlet Engine: Apache Tomcat/8.5.16
09:39:23.102,Initializing Spring embedded WebApplicationContext
09:39:23.103,Root WebApplicationContext: initialization completed in 5870 ms
09:39:23.853,Mapping servlet: 'dispatcherServlet' to [/]
09:39:23.870,Mapping filter: 'metricsFilter' to: [/*]
09:39:23.870,Mapping filter: 'characterEncodingFilter' to: [/*]
09:39:23.871,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:39:23.871,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:39:23.871,Mapping filter: 'requestContextFilter' to: [/*]
09:39:23.871,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:39:25.736,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:39:25.737,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:39:25.954,Opened connection [connectionId{localValue:1, serverValue:571}] to 192.168.1.90:17000
09:39:25.958,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1448782}
09:39:25.960,Discovered cluster type of STANDALONE
09:39:26.446,Opened connection [connectionId{localValue:2, serverValue:572}] to 192.168.1.90:17000
09:39:27.301,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@696298ea: startup date [Thu Feb 01 09:39:27 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e4c3a38
09:39:27.341,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:39:29.298,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:39:29.300,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:39:29.301,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:39:29.302,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:39:29.302,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:39:29.303,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:39:29.304,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:39:29.307,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:39:29.307,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:39:29.308,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:39:29.308,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:39:29.308,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:39:29.312,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:39:29.313,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:39:29.313,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:39:29.314,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:39:29.314,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:39:29.320,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:39:29.321,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:39:29.322,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:39:29.328,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:39:29.329,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:39:29.510,No URLs will be polled as dynamic configuration sources.
09:39:29.510,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:39:29.527,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a9040f0
09:39:32.564,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.566,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.567,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.568,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.572,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:39:32.575,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:39:32.576,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:39:32.576,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.578,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:39:32.578,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.579,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.580,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:39:32.581,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:39:32.582,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:39:32.583,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:39:32.584,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.586,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.587,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.589,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:39:32.591,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:39:32.592,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:39:32.593,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:39:32.594,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.595,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:39:32.595,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:39:33.114,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:39:33.861,No URLs will be polled as dynamic configuration sources.
09:39:33.861,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:39:34.331,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e4c3a38: startup date [Thu Feb 01 09:39:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1941a8ff
09:39:34.547,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:39:34.548,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:39:35.045,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:39:36.578,Registering beans for JMX exposure on startup
09:39:36.592,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:39:36.594,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:39:36.595,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:39:36.596,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:39:36.598,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:39:36.602,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:39:36.631,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:39:36.647,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:39:36.673,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4e4c3a38,type=ConfigurationPropertiesRebinder]
09:39:36.687,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:39:36.695,Registering beans for JMX exposure on startup
09:39:37.054,Starting beans in phase 0
09:39:37.083,Setting initial instance status as: STARTING
09:39:37.217,Initializing Eureka in region us-east-1
09:39:37.494,Using JSON encoding codec LegacyJacksonJson
09:39:37.494,Using JSON decoding codec LegacyJacksonJson
09:39:37.834,Using XML encoding codec XStreamXml
09:39:37.834,Using XML decoding codec XStreamXml
09:39:38.426,Resolving eureka endpoints via configuration
09:39:38.770,Disable delta property : false
09:39:38.770,Single vip registry refresh property : null
09:39:38.770,Force full registry fetch : false
09:39:38.771,Application is null : false
09:39:38.771,Registered Applications size is zero : true
09:39:38.771,Application version is -1: true
09:39:38.771,Getting all instance registry info from the eureka server
09:39:39.040,The response status is 200
09:39:39.043,Starting heartbeat executor: renew interval is: 30
09:39:39.047,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:39:39.052,Discovery Client initialized at timestamp 1517449179052 with initial instances count: 4
09:39:39.196,Registering application nhb-nbiot with eureka with status UP
09:39:39.197,Saw local status change event StatusChangeEvent [timestamp=1517449179197, current=UP, previous=STARTING]
09:39:39.211,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:39:39.228,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:39:39.246,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:39:39.257,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:39:39.262,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:39:39.267,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:39:39.272,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:39:39.277,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:39:39.286,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:39:39.297,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:39:39.320,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:39:39.326,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:39:39.330,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:39:39.331,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:39:39.336,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:39:39.340,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:39:39.342,Starting beans in phase 2147483647
09:39:39.343,Context refreshed
09:39:39.370,Found 1 custom documentation plugin(s)
09:39:39.481,Scanning for api listing references
09:39:39.780,Generating unique operation named: addUsingPOST_1
09:39:39.787,Generating unique operation named: deleteUsingPOST_1
09:39:39.796,Generating unique operation named: findByIdUsingPOST_1
09:39:39.804,Generating unique operation named: listUsingPOST_1
09:39:39.813,Generating unique operation named: modifyUsingPOST_1
09:39:39.829,Generating unique operation named: deleteUsingPOST_2
09:39:39.838,Generating unique operation named: findByIdUsingPOST_2
09:39:39.887,Starting poller
09:39:39.953,Initializing ProtocolHandler ["http-nio-9091"]
09:39:39.981,Starting ProtocolHandler ["http-nio-9091"]
09:39:40.005,Using a shared selector for servlet write/read
09:39:40.064,Tomcat started on port(s): 9091 (http)
09:39:40.066,Updating port to 9091
09:39:40.077,Started NhbNbApplication in 26.686 seconds (JVM running for 27.636)
09:40:26.448,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:40:26.448,FrameworkServlet 'dispatcherServlet': initialization started
09:40:26.488,FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
09:40:37.521,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3283d0ae: startup date [Thu Feb 01 09:40:37 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e4c3a38
09:40:37.705,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:40:38.283,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:40:38.321,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:40:38.333,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:40:38.344,Using serverListUpdater PollingServerListUpdater
09:40:38.388,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:40:38.391,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@64d6be9e
09:40:39.352,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:44:38.778,Resolving eureka endpoints via configuration
09:49:38.784,Resolving eureka endpoints via configuration
09:51:04.767,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d: startup date [Thu Feb 01 09:51:04 CST 2018]; root of context hierarchy
09:51:05.324,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:51:05.470,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c252aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:51:05.545,HV000001: Hibernate Validator 5.4.1.Final
09:51:06.681,No active profile set, falling back to default profiles: default
09:51:06.727,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a50ae65: startup date [Thu Feb 01 09:51:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:51:09.695,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
09:51:09.743,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:51:09.834,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:51:10.624,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56d4f5ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:51:10.655,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c252aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:51:12.005,Tomcat initialized with port(s): 9091 (http)
09:51:12.027,Starting service [Tomcat]
09:51:12.028,Starting Servlet Engine: Apache Tomcat/8.5.16
09:51:12.280,Initializing Spring embedded WebApplicationContext
09:51:12.280,Root WebApplicationContext: initialization completed in 5553 ms
09:51:13.002,Mapping servlet: 'dispatcherServlet' to [/]
09:51:13.012,Mapping filter: 'metricsFilter' to: [/*]
09:51:13.013,Mapping filter: 'characterEncodingFilter' to: [/*]
09:51:13.013,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:51:13.013,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:51:13.013,Mapping filter: 'requestContextFilter' to: [/*]
09:51:13.014,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:51:14.762,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:51:14.763,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:51:14.947,Opened connection [connectionId{localValue:1, serverValue:573}] to 192.168.1.90:17000
09:51:14.962,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1811248}
09:51:14.965,Discovered cluster type of STANDALONE
09:51:15.602,Opened connection [connectionId{localValue:2, serverValue:574}] to 192.168.1.90:17000
09:51:16.402,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ace1cd3: startup date [Thu Feb 01 09:51:16 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a50ae65
09:51:16.443,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:51:18.309,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:51:18.311,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:51:18.312,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:51:18.312,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:51:18.313,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:51:18.314,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:51:18.315,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:51:18.318,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:51:18.318,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:51:18.319,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:51:18.319,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:51:18.319,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:51:18.323,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:51:18.324,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:51:18.324,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:51:18.324,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:51:18.325,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:51:18.330,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:51:18.331,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:51:18.333,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:51:18.338,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:51:18.339,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:51:18.444,No URLs will be polled as dynamic configuration sources.
09:51:18.445,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:51:18.461,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17063c32
09:51:21.397,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:51:21.397,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:51:21.398,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.400,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:51:21.400,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.401,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:51:21.401,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:51:21.402,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.403,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:51:21.405,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:51:21.406,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.408,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:51:21.408,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:51:21.411,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:51:21.412,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:51:21.413,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.415,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:51:21.415,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.417,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:51:21.418,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.419,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.420,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.421,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.422,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.423,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:51:21.827,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:51:22.927,No URLs will be polled as dynamic configuration sources.
09:51:22.928,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:51:23.801,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a50ae65: startup date [Thu Feb 01 09:51:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:51:24.036,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:51:24.037,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:51:24.162,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:51:25.629,Registering beans for JMX exposure on startup
09:51:25.647,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:51:25.649,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:51:25.650,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:51:25.652,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:51:25.653,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:51:25.657,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:51:25.689,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:51:25.704,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:51:25.747,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=a50ae65,type=ConfigurationPropertiesRebinder]
09:51:25.756,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:51:25.762,Registering beans for JMX exposure on startup
09:51:26.127,Starting beans in phase 0
09:51:26.146,Setting initial instance status as: STARTING
09:51:26.228,Initializing Eureka in region us-east-1
09:51:26.362,Using JSON encoding codec LegacyJacksonJson
09:51:26.363,Using JSON decoding codec LegacyJacksonJson
09:51:26.577,Using XML encoding codec XStreamXml
09:51:26.577,Using XML decoding codec XStreamXml
09:51:27.028,Resolving eureka endpoints via configuration
09:51:27.354,Disable delta property : false
09:51:27.355,Single vip registry refresh property : null
09:51:27.355,Force full registry fetch : false
09:51:27.355,Application is null : false
09:51:27.355,Registered Applications size is zero : true
09:51:27.355,Application version is -1: true
09:51:27.355,Getting all instance registry info from the eureka server
09:51:27.681,The response status is 200
09:51:27.685,Starting heartbeat executor: renew interval is: 30
09:51:27.690,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:51:27.695,Discovery Client initialized at timestamp 1517449887694 with initial instances count: 4
09:51:27.819,Registering application nhb-nbiot with eureka with status UP
09:51:27.819,Saw local status change event StatusChangeEvent [timestamp=1517449887819, current=UP, previous=STARTING]
09:51:27.830,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:51:27.844,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:51:27.860,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:51:27.864,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:51:27.868,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:51:27.872,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:51:27.876,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:51:27.881,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:51:27.887,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:51:27.903,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:51:27.904,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:51:27.911,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:51:27.915,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:51:27.923,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:51:27.928,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:51:27.930,Starting beans in phase 2147483647
09:51:27.931,Context refreshed
09:51:27.969,Found 1 custom documentation plugin(s)
09:51:28.112,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:51:28.115,Scanning for api listing references
09:51:28.409,Generating unique operation named: addUsingPOST_1
09:51:28.421,Generating unique operation named: deleteUsingPOST_1
09:51:28.430,Generating unique operation named: findByIdUsingPOST_1
09:51:28.438,Generating unique operation named: listUsingPOST_1
09:51:28.447,Generating unique operation named: modifyUsingPOST_1
09:51:28.464,Generating unique operation named: deleteUsingPOST_2
09:51:28.475,Generating unique operation named: findByIdUsingPOST_2
09:51:28.523,Starting poller
09:51:28.573,Initializing ProtocolHandler ["http-nio-9091"]
09:51:28.598,Starting ProtocolHandler ["http-nio-9091"]
09:51:28.617,Using a shared selector for servlet write/read
09:51:28.698,Tomcat started on port(s): 9091 (http)
09:51:28.701,Updating port to 9091
09:51:28.711,Started NhbNbApplication in 25.579 seconds (JVM running for 26.524)
09:52:01.855,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:52:01.855,FrameworkServlet 'dispatcherServlet': initialization started
09:52:01.894,FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
09:52:32.130,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@78a19d16: startup date [Thu Feb 01 09:52:32 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a50ae65
09:52:32.261,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:52:32.748,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:52:32.801,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:52:32.817,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:52:32.841,Using serverListUpdater PollingServerListUpdater
09:52:32.877,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:52:32.880,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6e49f431
09:52:33.846,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:53:16.001,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56: startup date [Thu Feb 01 09:53:15 CST 2018]; root of context hierarchy
09:53:16.590,HV000001: Hibernate Validator 5.4.1.Final
09:53:16.658,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:53:16.736,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9a1790cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:53:17.892,No active profile set, falling back to default profiles: default
09:53:17.952,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c446b14: startup date [Thu Feb 01 09:53:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56
09:53:21.020,BeanFactory id=5636da16-411c-3597-846b-0adfb1d0469d
09:53:21.072,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:53:21.186,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:53:21.843,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b02a3410] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:53:21.873,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9a1790cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:53:23.277,Tomcat initialized with port(s): 9091 (http)
09:53:23.295,Starting service [Tomcat]
09:53:23.297,Starting Servlet Engine: Apache Tomcat/8.5.16
09:53:23.529,Initializing Spring embedded WebApplicationContext
09:53:23.530,Root WebApplicationContext: initialization completed in 5578 ms
09:53:24.260,Mapping servlet: 'dispatcherServlet' to [/]
09:53:24.272,Mapping filter: 'metricsFilter' to: [/*]
09:53:24.273,Mapping filter: 'characterEncodingFilter' to: [/*]
09:53:24.273,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:53:24.273,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:53:24.273,Mapping filter: 'requestContextFilter' to: [/*]
09:53:24.273,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:53:25.898,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:53:25.899,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:53:26.111,Opened connection [connectionId{localValue:1, serverValue:575}] to 192.168.1.90:17000
09:53:26.116,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2504849}
09:53:26.118,Discovered cluster type of STANDALONE
09:53:26.588,Opened connection [connectionId{localValue:2, serverValue:576}] to 192.168.1.90:17000
09:53:27.458,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5bc14211: startup date [Thu Feb 01 09:53:27 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c446b14
09:53:27.506,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:53:29.477,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:53:29.479,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:53:29.479,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:53:29.480,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:53:29.480,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:53:29.482,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:53:29.483,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:53:29.485,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:53:29.485,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:53:29.486,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:53:29.486,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:53:29.487,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:53:29.491,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:53:29.492,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:53:29.492,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:53:29.493,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:53:29.493,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:53:29.497,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:53:29.499,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:53:29.501,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:53:29.506,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:53:29.508,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:53:29.634,No URLs will be polled as dynamic configuration sources.
09:53:29.635,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:53:29.655,DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@37393dab
09:53:32.817,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.818,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.819,Mapped "{[/application/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:53:32.820,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:53:32.821,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:53:32.822,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:53:32.823,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.824,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.825,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:53:32.828,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:53:32.829,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:53:32.829,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.830,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.831,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.833,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:53:32.834,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.834,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:53:32.835,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:53:32.836,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.836,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:53:32.838,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:53:32.838,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.839,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:53:32.840,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:32.841,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:53:33.238,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:53:33.941,No URLs will be polled as dynamic configuration sources.
09:53:33.942,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:53:34.452,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c446b14: startup date [Thu Feb 01 09:53:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7862f56
09:53:34.696,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:53:34.696,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:53:34.783,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:53:36.296,Registering beans for JMX exposure on startup
09:53:36.315,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:53:36.318,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:53:36.319,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:53:36.320,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:53:36.322,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:53:36.327,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:53:36.357,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:53:36.372,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:53:36.404,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=c446b14,type=ConfigurationPropertiesRebinder]
09:53:36.415,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:53:36.424,Registering beans for JMX exposure on startup
09:53:36.722,Starting beans in phase 0
09:53:36.736,Setting initial instance status as: STARTING
09:53:36.814,Initializing Eureka in region us-east-1
09:53:36.959,Using JSON encoding codec LegacyJacksonJson
09:53:36.959,Using JSON decoding codec LegacyJacksonJson
09:53:37.173,Using XML encoding codec XStreamXml
09:53:37.173,Using XML decoding codec XStreamXml
09:53:37.630,Resolving eureka endpoints via configuration
09:53:38.071,Disable delta property : false
09:53:38.072,Single vip registry refresh property : null
09:53:38.072,Force full registry fetch : false
09:53:38.072,Application is null : false
09:53:38.072,Registered Applications size is zero : true
09:53:38.072,Application version is -1: true
09:53:38.072,Getting all instance registry info from the eureka server
09:53:38.776,The response status is 200
09:53:38.779,Starting heartbeat executor: renew interval is: 30
09:53:38.787,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:53:38.793,Discovery Client initialized at timestamp 1517450018792 with initial instances count: 4
09:53:38.952,Registering application nhb-nbiot with eureka with status UP
09:53:38.954,Saw local status change event StatusChangeEvent [timestamp=1517450018954, current=UP, previous=STARTING]
09:53:38.967,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:53:38.984,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:53:38.992,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:53:39.024,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:53:39.029,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:53:39.033,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:53:39.038,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:53:39.043,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:53:39.047,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:53:39.052,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:53:39.069,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:53:39.071,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:53:39.075,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:53:39.079,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:53:39.083,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:53:39.087,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:53:39.089,Starting beans in phase 2147483647
09:53:39.090,Context refreshed
09:53:39.120,Found 1 custom documentation plugin(s)
09:53:39.238,Scanning for api listing references
09:53:39.504,Generating unique operation named: addUsingPOST_1
09:53:39.512,Generating unique operation named: deleteUsingPOST_1
09:53:39.518,Generating unique operation named: findByIdUsingPOST_1
09:53:39.525,Generating unique operation named: listUsingPOST_1
09:53:39.532,Generating unique operation named: modifyUsingPOST_1
09:53:39.550,Generating unique operation named: deleteUsingPOST_2
09:53:39.561,Generating unique operation named: findByIdUsingPOST_2
09:53:39.611,Starting poller
09:53:39.663,Initializing ProtocolHandler ["http-nio-9091"]
09:53:39.685,Starting ProtocolHandler ["http-nio-9091"]
09:53:39.700,Using a shared selector for servlet write/read
09:53:39.770,Tomcat started on port(s): 9091 (http)
09:53:39.772,Updating port to 9091
09:53:39.790,Started NhbNbApplication in 25.426 seconds (JVM running for 26.207)
09:53:45.563,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:53:45.564,FrameworkServlet 'dispatcherServlet': initialization started
09:53:45.605,FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
09:53:57.056,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61fa4906: startup date [Thu Feb 01 09:53:57 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c446b14
09:53:57.179,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:53:57.587,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:53:57.631,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:53:57.640,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:53:57.649,Using serverListUpdater PollingServerListUpdater
09:53:57.679,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:53:57.682,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@42ef332
09:53:58.654,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:56:21.452,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d: startup date [Thu Feb 01 09:56:21 CST 2018]; root of context hierarchy
09:56:22.103,HV000001: Hibernate Validator 5.4.1.Final
09:56:22.108,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:56:22.181,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b400bee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:56:23.328,No active profile set, falling back to default profiles: default
09:56:23.370,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@153f66e7: startup date [Thu Feb 01 09:56:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:56:26.295,BeanFactory id=478f2253-0f75-3975-a5a6-93f910580141
09:56:26.342,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:56:26.440,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:56:26.563,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3152af32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:56:26.583,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b400bee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:56:27.654,Tomcat initialized with port(s): 9091 (http)
09:56:27.674,Starting service [Tomcat]
09:56:27.675,Starting Servlet Engine: Apache Tomcat/8.5.16
09:56:27.940,Initializing Spring embedded WebApplicationContext
09:56:27.941,Root WebApplicationContext: initialization completed in 4572 ms
09:56:28.828,Mapping servlet: 'dispatcherServlet' to [/]
09:56:28.837,Mapping filter: 'metricsFilter' to: [/*]
09:56:28.837,Mapping filter: 'characterEncodingFilter' to: [/*]
09:56:28.838,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:56:28.838,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:56:28.838,Mapping filter: 'requestContextFilter' to: [/*]
09:56:28.838,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:56:30.697,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:56:30.697,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:56:30.853,Opened connection [connectionId{localValue:1, serverValue:577}] to 192.168.1.90:17000
09:56:30.858,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2428142}
09:56:30.863,Discovered cluster type of STANDALONE
09:56:31.261,Opened connection [connectionId{localValue:2, serverValue:578}] to 192.168.1.90:17000
09:56:31.655,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5529522f: startup date [Thu Feb 01 09:56:31 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@153f66e7
09:56:31.695,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:56:33.150,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:56:33.152,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:56:33.152,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:56:33.153,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:56:33.154,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:56:33.156,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:56:33.156,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:56:33.162,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:56:33.162,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:56:33.163,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:56:33.163,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:56:33.164,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:56:33.169,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:56:33.170,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:56:33.170,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:56:33.171,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:56:33.171,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:56:33.179,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:56:33.181,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:56:33.183,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:56:33.192,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:56:33.194,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:56:35.760,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:56:35.761,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:56:35.763,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:56:35.764,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.767,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:56:35.768,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.769,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.770,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.771,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.773,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:56:35.775,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.776,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.777,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:56:35.778,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.781,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:56:35.782,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:56:35.783,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.783,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:56:35.784,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:56:35.785,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.787,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:56:35.787,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:35.788,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:56:35.789,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:56:36.075,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:56:36.348,No URLs will be polled as dynamic configuration sources.
09:56:36.349,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:56:36.365,No URLs will be polled as dynamic configuration sources.
09:56:36.366,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:56:36.670,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@153f66e7: startup date [Thu Feb 01 09:56:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:56:36.872,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:56:36.872,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:56:36.971,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:56:38.105,Registering beans for JMX exposure on startup
09:56:38.137,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:56:38.143,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:56:38.144,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:56:38.146,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:56:38.147,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:56:38.153,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:56:38.185,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:56:38.199,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:56:38.234,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=153f66e7,type=ConfigurationPropertiesRebinder]
09:56:38.246,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:56:38.253,Registering beans for JMX exposure on startup
09:56:38.566,Starting beans in phase 0
09:56:38.583,Setting initial instance status as: STARTING
09:56:38.667,Initializing Eureka in region us-east-1
09:56:38.809,Using JSON encoding codec LegacyJacksonJson
09:56:38.809,Using JSON decoding codec LegacyJacksonJson
09:56:39.043,Using XML encoding codec XStreamXml
09:56:39.044,Using XML decoding codec XStreamXml
09:56:39.541,Resolving eureka endpoints via configuration
09:56:39.973,Disable delta property : false
09:56:39.973,Single vip registry refresh property : null
09:56:39.973,Force full registry fetch : false
09:56:39.973,Application is null : false
09:56:39.973,Registered Applications size is zero : true
09:56:39.973,Application version is -1: true
09:56:39.973,Getting all instance registry info from the eureka server
09:56:40.269,The response status is 200
09:56:40.272,Starting heartbeat executor: renew interval is: 30
09:56:40.277,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:56:40.282,Discovery Client initialized at timestamp 1517450200282 with initial instances count: 4
09:56:40.359,Registering application nhb-nbiot with eureka with status UP
09:56:40.359,Saw local status change event StatusChangeEvent [timestamp=1517450200359, current=UP, previous=STARTING]
09:56:40.367,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:56:40.391,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:56:40.401,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:56:40.422,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:56:40.432,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:56:40.446,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:56:40.457,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:56:40.464,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:56:40.473,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:56:40.472,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:56:40.482,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:56:40.501,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:56:40.509,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:56:40.519,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:56:40.524,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:56:40.528,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:56:40.531,Starting beans in phase 2147483647
09:56:40.531,Context refreshed
09:56:40.561,Found 1 custom documentation plugin(s)
09:56:40.671,Scanning for api listing references
09:56:40.978,Generating unique operation named: addUsingPOST_1
09:56:40.987,Generating unique operation named: deleteUsingPOST_1
09:56:40.996,Generating unique operation named: findByIdUsingPOST_1
09:56:41.005,Generating unique operation named: listUsingPOST_1
09:56:41.012,Generating unique operation named: modifyUsingPOST_1
09:56:41.028,Generating unique operation named: deleteUsingPOST_2
09:56:41.037,Generating unique operation named: findByIdUsingPOST_2
09:56:41.120,Initializing ProtocolHandler ["http-nio-9091"]
09:56:41.141,Starting ProtocolHandler ["http-nio-9091"]
09:56:41.160,Using a shared selector for servlet write/read
09:56:41.246,Tomcat started on port(s): 9091 (http)
09:56:41.251,Updating port to 9091
09:56:41.280,Started NhbNbApplication in 21.425 seconds (JVM running for 22.358)
09:56:45.649,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:56:45.650,FrameworkServlet 'dispatcherServlet': initialization started
09:56:45.682,FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
09:57:00.609,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c5e6f9c: startup date [Thu Feb 01 09:57:00 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@153f66e7
09:57:00.732,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:57:01.195,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:57:01.227,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:57:01.235,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:57:01.249,Using serverListUpdater PollingServerListUpdater
09:57:01.283,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:57:01.286,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@387215c5
09:57:02.257,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:57:37.173,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d: startup date [Thu Feb 01 09:57:37 CST 2018]; root of context hierarchy
09:57:37.870,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:57:37.906,HV000001: Hibernate Validator 5.4.1.Final
09:57:37.953,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c273b3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:57:39.098,No active profile set, falling back to default profiles: default
09:57:39.129,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@512d4583: startup date [Thu Feb 01 09:57:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:57:41.909,BeanFactory id=478f2253-0f75-3975-a5a6-93f910580141
09:57:41.960,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:57:42.044,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:57:42.165,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d8865733] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:57:42.187,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c273b3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:57:43.248,Tomcat initialized with port(s): 9091 (http)
09:57:43.266,Starting service [Tomcat]
09:57:43.268,Starting Servlet Engine: Apache Tomcat/8.5.16
09:57:43.530,Initializing Spring embedded WebApplicationContext
09:57:43.531,Root WebApplicationContext: initialization completed in 4402 ms
09:57:44.222,Mapping servlet: 'dispatcherServlet' to [/]
09:57:44.232,Mapping filter: 'metricsFilter' to: [/*]
09:57:44.233,Mapping filter: 'characterEncodingFilter' to: [/*]
09:57:44.233,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:57:44.233,Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:57:44.234,Mapping filter: 'requestContextFilter' to: [/*]
09:57:44.234,Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:57:46.396,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
09:57:46.397,Adding discovered server 192.168.1.90:17000 to client view of cluster
09:57:46.600,Opened connection [connectionId{localValue:1, serverValue:579}] to 192.168.1.90:17000
09:57:46.606,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2998039}
09:57:46.609,Discovered cluster type of STANDALONE
09:57:46.998,Opened connection [connectionId{localValue:2, serverValue:580}] to 192.168.1.90:17000
09:57:47.383,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@534762ed: startup date [Thu Feb 01 09:57:47 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@512d4583
09:57:47.415,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:57:49.057,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
09:57:49.059,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
09:57:49.060,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
09:57:49.060,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
09:57:49.060,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
09:57:49.062,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
09:57:49.063,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
09:57:49.067,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
09:57:49.067,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
09:57:49.068,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
09:57:49.068,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
09:57:49.068,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
09:57:49.073,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
09:57:49.073,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
09:57:49.073,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
09:57:49.073,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
09:57:49.074,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
09:57:49.080,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
09:57:49.081,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
09:57:49.082,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
09:57:49.090,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:57:49.091,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:57:51.720,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.721,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.722,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.725,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:57:51.727,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:57:51.728,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:57:51.728,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:57:51.730,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:57:51.730,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.731,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:57:51.732,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.733,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.734,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.735,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:57:51.735,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:57:51.738,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:57:51.738,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.740,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:57:51.740,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.741,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.741,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:51.744,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:57:51.745,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:57:51.745,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:57:52.043,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
09:57:52.448,No URLs will be polled as dynamic configuration sources.
09:57:52.448,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:57:52.460,No URLs will be polled as dynamic configuration sources.
09:57:52.461,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:57:52.742,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@512d4583: startup date [Thu Feb 01 09:57:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@517d4a0d
09:57:52.876,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:57:52.877,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:57:52.972,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:57:54.012,Registering beans for JMX exposure on startup
09:57:54.027,Bean with name 'environmentManager' has been autodetected for JMX exposure
09:57:54.030,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:57:54.031,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:57:54.032,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:57:54.033,Bean with name 'refreshScope' has been autodetected for JMX exposure
09:57:54.038,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:57:54.057,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:57:54.071,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:57:54.092,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=512d4583,type=ConfigurationPropertiesRebinder]
09:57:54.104,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:57:54.110,Registering beans for JMX exposure on startup
09:57:54.447,Starting beans in phase 0
09:57:54.466,Setting initial instance status as: STARTING
09:57:54.556,Initializing Eureka in region us-east-1
09:57:54.707,Using JSON encoding codec LegacyJacksonJson
09:57:54.708,Using JSON decoding codec LegacyJacksonJson
09:57:54.945,Using XML encoding codec XStreamXml
09:57:54.946,Using XML decoding codec XStreamXml
09:57:55.438,Resolving eureka endpoints via configuration
09:57:55.829,Disable delta property : false
09:57:55.829,Single vip registry refresh property : null
09:57:55.829,Force full registry fetch : false
09:57:55.829,Application is null : false
09:57:55.829,Registered Applications size is zero : true
09:57:55.829,Application version is -1: true
09:57:55.829,Getting all instance registry info from the eureka server
09:57:56.095,The response status is 200
09:57:56.097,Starting heartbeat executor: renew interval is: 30
09:57:56.102,InstanceInfoReplicator onDemand update allowed rate per min is 4
09:57:56.107,Discovery Client initialized at timestamp 1517450276106 with initial instances count: 4
09:57:56.171,Registering application nhb-nbiot with eureka with status UP
09:57:56.171,Saw local status change event StatusChangeEvent [timestamp=1517450276171, current=UP, previous=STARTING]
09:57:56.180,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:57:56.199,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
09:57:56.198,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:57:56.234,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:57:56.241,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:57:56.252,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:57:56.260,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:57:56.267,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
09:57:56.274,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:57:56.278,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:57:56.282,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:57:56.294,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:57:56.298,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:57:56.301,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:57:56.304,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:57:56.308,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:57:56.310,Starting beans in phase 2147483647
09:57:56.310,Context refreshed
09:57:56.332,Found 1 custom documentation plugin(s)
09:57:56.435,Scanning for api listing references
09:57:56.740,Generating unique operation named: addUsingPOST_1
09:57:56.748,Generating unique operation named: deleteUsingPOST_1
09:57:56.757,Generating unique operation named: findByIdUsingPOST_1
09:57:56.764,Generating unique operation named: listUsingPOST_1
09:57:56.772,Generating unique operation named: modifyUsingPOST_1
09:57:56.788,Generating unique operation named: deleteUsingPOST_2
09:57:56.798,Generating unique operation named: findByIdUsingPOST_2
09:57:56.882,Initializing ProtocolHandler ["http-nio-9091"]
09:57:56.904,Starting ProtocolHandler ["http-nio-9091"]
09:57:56.922,Using a shared selector for servlet write/read
09:57:56.993,Tomcat started on port(s): 9091 (http)
09:57:56.997,Updating port to 9091
09:57:57.010,Started NhbNbApplication in 21.356 seconds (JVM running for 22.135)
09:58:02.964,Initializing Spring FrameworkServlet 'dispatcherServlet'
09:58:02.964,FrameworkServlet 'dispatcherServlet': initialization started
09:58:03.006,FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
09:58:08.175,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4bf6451: startup date [Thu Feb 01 09:58:08 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@512d4583
09:58:09.016,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:58:11.255,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:58:11.464,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
09:58:11.489,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:58:11.523,Using serverListUpdater PollingServerListUpdater
09:58:11.647,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:58:11.654,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@48ddce29
09:58:12.537,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10:50:06.244,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236: startup date [Thu Feb 01 10:50:06 CST 2018]; root of context hierarchy
10:50:06.897,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:50:06.966,HV000001: Hibernate Validator 5.4.1.Final
10:50:07.011,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$52ac98a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:50:08.304,No active profile set, falling back to default profiles: default
10:50:08.355,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17ca8b92: startup date [Thu Feb 01 10:50:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
10:50:12.272,BeanFactory id=478f2253-0f75-3975-a5a6-93f910580141
10:50:12.358,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:50:12.490,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:50:12.660,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$68bf3be4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:50:12.694,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$52ac98a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:50:14.191,Tomcat initialized with port(s): 9091 (https)
10:50:14.215,Starting service [Tomcat]
10:50:14.217,Starting Servlet Engine: Apache Tomcat/8.5.16
10:50:15.027,Initializing Spring embedded WebApplicationContext
10:50:15.028,Root WebApplicationContext: initialization completed in 6673 ms
10:50:15.672,Mapping servlet: 'dispatcherServlet' to [/]
10:50:15.680,Mapping filter: 'metricsFilter' to: [/*]
10:50:15.681,Mapping filter: 'characterEncodingFilter' to: [/*]
10:50:15.681,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:50:15.681,Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:50:15.681,Mapping filter: 'requestContextFilter' to: [/*]
10:50:15.682,Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:50:17.686,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
10:50:17.686,Adding discovered server 192.168.1.90:17000 to client view of cluster
10:50:17.861,Opened connection [connectionId{localValue:1, serverValue:581}] to 192.168.1.90:17000
10:50:17.864,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1500640}
10:50:17.866,Discovered cluster type of STANDALONE
10:50:18.316,Opened connection [connectionId{localValue:2, serverValue:582}] to 192.168.1.90:17000
10:50:18.808,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a4a2090: startup date [Thu Feb 01 10:50:18 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17ca8b92
10:50:18.905,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:50:20.387,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
10:50:20.389,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
10:50:20.390,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
10:50:20.390,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
10:50:20.391,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
10:50:20.396,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
10:50:20.397,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
10:50:20.402,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
10:50:20.403,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
10:50:20.403,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
10:50:20.403,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
10:50:20.404,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
10:50:20.408,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
10:50:20.409,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
10:50:20.410,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
10:50:20.410,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
10:50:20.411,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
10:50:20.418,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
10:50:20.419,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
10:50:20.420,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
10:50:20.428,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:50:20.430,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:50:23.189,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:50:23.190,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:50:23.191,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:50:23.193,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.196,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:50:23.197,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.198,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.201,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:50:23.202,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.203,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:50:23.204,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.205,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:50:23.205,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:50:23.206,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.207,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.208,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.209,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.210,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.212,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:50:23.213,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.215,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:50:23.220,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:50:23.222,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:50:23.222,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:50:23.537,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
10:50:23.868,No URLs will be polled as dynamic configuration sources.
10:50:23.868,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:50:23.885,No URLs will be polled as dynamic configuration sources.
10:50:23.885,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:50:24.214,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17ca8b92: startup date [Thu Feb 01 10:50:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
10:50:24.340,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:50:24.340,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:50:24.419,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:50:25.743,Registering beans for JMX exposure on startup
10:50:25.771,Bean with name 'environmentManager' has been autodetected for JMX exposure
10:50:25.774,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:50:25.775,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:50:25.776,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:50:25.777,Bean with name 'refreshScope' has been autodetected for JMX exposure
10:50:25.782,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:50:25.807,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:50:25.821,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:50:25.847,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=17ca8b92,type=ConfigurationPropertiesRebinder]
10:50:25.861,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:50:25.869,Registering beans for JMX exposure on startup
10:50:26.206,Starting beans in phase 0
10:50:26.218,Setting initial instance status as: STARTING
10:50:26.289,Initializing Eureka in region us-east-1
10:50:26.441,Using JSON encoding codec LegacyJacksonJson
10:50:26.441,Using JSON decoding codec LegacyJacksonJson
10:50:26.679,Using XML encoding codec XStreamXml
10:50:26.679,Using XML decoding codec XStreamXml
10:50:27.158,Resolving eureka endpoints via configuration
10:50:27.497,Disable delta property : false
10:50:27.497,Single vip registry refresh property : null
10:50:27.497,Force full registry fetch : false
10:50:27.497,Application is null : false
10:50:27.497,Registered Applications size is zero : true
10:50:27.497,Application version is -1: true
10:50:27.498,Getting all instance registry info from the eureka server
10:50:27.718,The response status is 200
10:50:27.720,Starting heartbeat executor: renew interval is: 30
10:50:27.724,InstanceInfoReplicator onDemand update allowed rate per min is 4
10:50:27.729,Discovery Client initialized at timestamp 1517453427729 with initial instances count: 3
10:50:27.781,Registering application nhb-nbiot with eureka with status UP
10:50:27.783,Saw local status change event StatusChangeEvent [timestamp=1517453427783, current=UP, previous=STARTING]
10:50:27.793,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:50:27.806,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:50:27.817,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
10:50:27.830,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:50:27.846,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:50:27.859,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:50:27.868,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:50:27.874,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:50:27.881,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:50:27.898,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:50:27.902,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
10:50:27.919,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:50:27.923,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:50:27.927,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:50:27.931,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:50:27.935,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:50:27.937,Starting beans in phase 2147483647
10:50:27.937,Context refreshed
10:50:27.963,Found 1 custom documentation plugin(s)
10:50:28.079,Scanning for api listing references
10:50:28.399,Generating unique operation named: addUsingPOST_1
10:50:28.408,Generating unique operation named: deleteUsingPOST_1
10:50:28.417,Generating unique operation named: findByIdUsingPOST_1
10:50:28.425,Generating unique operation named: listUsingPOST_1
10:50:28.433,Generating unique operation named: modifyUsingPOST_1
10:50:28.452,Generating unique operation named: deleteUsingPOST_2
10:50:28.463,Generating unique operation named: findByIdUsingPOST_2
10:50:28.552,Initializing ProtocolHandler ["https-jsse-nio-9091"]
10:50:28.577,Starting ProtocolHandler ["https-jsse-nio-9091"]
10:50:28.741,Using a shared selector for servlet write/read
10:50:29.355,Tomcat started on port(s): 9091 (https)
10:50:29.356,Updating port to 9091
10:50:29.365,Started NhbNbApplication in 24.721 seconds (JVM running for 25.664)
10:51:44.252,Initializing Spring FrameworkServlet 'dispatcherServlet'
10:51:44.252,FrameworkServlet 'dispatcherServlet': initialization started
10:51:44.305,FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
10:55:27.504,Resolving eureka endpoints via configuration
11:00:27.510,Resolving eureka endpoints via configuration
11:00:58.225,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c3820e7: startup date [Thu Feb 01 11:00:58 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17ca8b92
11:00:59.176,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:01:01.411,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:01:01.609,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
11:01:01.638,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:01:01.673,Using serverListUpdater PollingServerListUpdater
11:01:01.787,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:01:01.796,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@10d8a6b0
11:01:02.685,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:05:27.515,Resolving eureka endpoints via configuration
11:10:27.520,Resolving eureka endpoints via configuration
11:12:27.284,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236: startup date [Thu Feb 01 11:12:27 CST 2018]; root of context hierarchy
11:12:27.942,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:28.054,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1ed8925] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:28.117,HV000001: Hibernate Validator 5.4.1.Final
11:12:29.322,No active profile set, falling back to default profiles: default
11:12:29.351,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bb3131b: startup date [Thu Feb 01 11:12:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
11:12:32.201,BeanFactory id=986b4a64-128d-3ccf-9716-c0113f28fc3f
11:12:32.249,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:32.328,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:32.451,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e8002c69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:32.468,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1ed8925] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:33.523,Tomcat initialized with port(s): 9091 (https)
11:12:33.540,Starting service [Tomcat]
11:12:33.542,Starting Servlet Engine: Apache Tomcat/8.5.16
11:12:33.822,Initializing Spring embedded WebApplicationContext
11:12:33.823,Root WebApplicationContext: initialization completed in 4472 ms
11:12:34.629,Mapping servlet: 'dispatcherServlet' to [/]
11:12:34.638,Mapping filter: 'metricsFilter' to: [/*]
11:12:34.639,Mapping filter: 'characterEncodingFilter' to: [/*]
11:12:34.639,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:12:34.639,Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:12:34.639,Mapping filter: 'requestContextFilter' to: [/*]
11:12:34.639,Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:12:36.297,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
11:12:36.298,Adding discovered server 192.168.1.90:17000 to client view of cluster
11:12:36.458,Opened connection [connectionId{localValue:1, serverValue:585}] to 192.168.1.90:17000
11:12:36.462,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1508743}
11:12:36.464,Discovered cluster type of STANDALONE
11:12:36.846,Opened connection [connectionId{localValue:2, serverValue:586}] to 192.168.1.90:17000
11:12:37.275,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8ac512e: startup date [Thu Feb 01 11:12:37 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bb3131b
11:12:37.310,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:38.849,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
11:12:38.851,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
11:12:38.852,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
11:12:38.852,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
11:12:38.853,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
11:12:38.855,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
11:12:38.855,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
11:12:38.861,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
11:12:38.861,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
11:12:38.861,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
11:12:38.862,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
11:12:38.862,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
11:12:38.868,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
11:12:38.869,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
11:12:38.869,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
11:12:38.870,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
11:12:38.870,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
11:12:38.879,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
11:12:38.881,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
11:12:38.882,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
11:12:38.892,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:12:38.893,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:12:41.379,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.380,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.382,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.383,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.385,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:12:41.385,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.386,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.390,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:12:41.391,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:12:41.391,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.392,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:12:41.393,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:12:41.394,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:12:41.396,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:12:41.398,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.401,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:12:41.402,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:12:41.403,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:12:41.404,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.406,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:12:41.407,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.408,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.411,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:12:41.412,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:41.712,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
11:12:42.059,No URLs will be polled as dynamic configuration sources.
11:12:42.059,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:12:42.078,No URLs will be polled as dynamic configuration sources.
11:12:42.078,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:12:42.388,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bb3131b: startup date [Thu Feb 01 11:12:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
11:12:42.534,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:42.535,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:42.639,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:43.784,Registering beans for JMX exposure on startup
11:12:43.805,Bean with name 'environmentManager' has been autodetected for JMX exposure
11:12:43.810,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:12:43.811,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:12:43.813,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:12:43.814,Bean with name 'refreshScope' has been autodetected for JMX exposure
11:12:43.820,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:12:43.852,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:12:43.870,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:12:43.896,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5bb3131b,type=ConfigurationPropertiesRebinder]
11:12:43.908,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:12:43.914,Registering beans for JMX exposure on startup
11:12:44.260,Starting beans in phase 0
11:12:44.278,Setting initial instance status as: STARTING
11:12:44.364,Initializing Eureka in region us-east-1
11:12:44.527,Using JSON encoding codec LegacyJacksonJson
11:12:44.528,Using JSON decoding codec LegacyJacksonJson
11:12:44.789,Using XML encoding codec XStreamXml
11:12:44.790,Using XML decoding codec XStreamXml
11:12:45.312,Resolving eureka endpoints via configuration
11:12:45.776,Disable delta property : false
11:12:45.776,Single vip registry refresh property : null
11:12:45.776,Force full registry fetch : false
11:12:45.776,Application is null : false
11:12:45.776,Registered Applications size is zero : true
11:12:45.776,Application version is -1: true
11:12:45.776,Getting all instance registry info from the eureka server
11:12:46.025,The response status is 200
11:12:46.028,Starting heartbeat executor: renew interval is: 30
11:12:46.033,InstanceInfoReplicator onDemand update allowed rate per min is 4
11:12:46.039,Discovery Client initialized at timestamp 1517454766039 with initial instances count: 4
11:12:46.113,Registering application nhb-nbiot with eureka with status UP
11:12:46.114,Saw local status change event StatusChangeEvent [timestamp=1517454766114, current=UP, previous=STARTING]
11:12:46.125,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:12:46.143,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:12:46.177,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:12:46.184,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:12:46.199,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:12:46.210,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:12:46.217,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:12:46.224,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:12:46.234,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
11:12:46.236,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:12:46.284,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:12:46.289,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:12:46.294,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:12:46.305,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:12:46.314,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:12:46.317,Starting beans in phase 2147483647
11:12:46.330,Context refreshed
11:12:46.332,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
11:12:46.359,Found 1 custom documentation plugin(s)
11:12:46.456,Scanning for api listing references
11:12:46.736,Generating unique operation named: addUsingPOST_1
11:12:46.747,Generating unique operation named: deleteUsingPOST_1
11:12:46.758,Generating unique operation named: findByIdUsingPOST_1
11:12:46.765,Generating unique operation named: listUsingPOST_1
11:12:46.773,Generating unique operation named: modifyUsingPOST_1
11:12:46.791,Generating unique operation named: deleteUsingPOST_2
11:12:46.802,Generating unique operation named: findByIdUsingPOST_2
11:12:46.888,Initializing ProtocolHandler ["https-jsse-nio-9091"]
11:12:46.918,Starting ProtocolHandler ["https-jsse-nio-9091"]
11:12:47.034,Using a shared selector for servlet write/read
11:12:47.454,Tomcat started on port(s): 9091 (https)
11:12:47.457,Updating port to 9091
11:12:47.464,Started NhbNbApplication in 21.788 seconds (JVM running for 22.742)
11:12:52.257,Initializing Spring FrameworkServlet 'dispatcherServlet'
11:12:52.257,FrameworkServlet 'dispatcherServlet': initialization started
11:12:52.295,FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
11:13:06.799,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4621be00: startup date [Thu Feb 01 11:13:06 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bb3131b
11:13:07.658,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:13:09.831,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:10.025,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
11:13:10.052,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:13:10.084,Using serverListUpdater PollingServerListUpdater
11:13:10.198,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:10.205,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@38e0d4f1
11:13:11.101,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:45.787,Resolving eureka endpoints via configuration
11:22:45.798,Resolving eureka endpoints via configuration
11:24:37.016,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4fad9bb2: startup date [Thu Feb 01 11:24:36 CST 2018]; root of context hierarchy
11:24:37.772,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:24:37.839,HV000001: Hibernate Validator 5.4.1.Final
11:24:37.861,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c273b3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:24:39.031,No active profile set, falling back to default profiles: default
11:24:39.064,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3241713e: startup date [Thu Feb 01 11:24:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fad9bb2
11:24:42.233,BeanFactory id=f2c86691-8b1c-3cfe-b50e-552ba86701f8
11:24:42.323,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:24:42.436,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:24:42.565,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d8865733] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:24:42.583,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c273b3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:24:43.612,Tomcat initialized with port(s): 9091 (https)
11:24:43.630,Starting service [Tomcat]
11:24:43.632,Starting Servlet Engine: Apache Tomcat/8.5.16
11:24:43.889,Initializing Spring embedded WebApplicationContext
11:24:43.890,Root WebApplicationContext: initialization completed in 4826 ms
11:24:44.679,Mapping servlet: 'dispatcherServlet' to [/]
11:24:44.694,Mapping filter: 'metricsFilter' to: [/*]
11:24:44.695,Mapping filter: 'characterEncodingFilter' to: [/*]
11:24:44.695,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:24:44.695,Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:24:44.695,Mapping filter: 'requestContextFilter' to: [/*]
11:24:44.695,Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:24:46.447,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
11:24:46.447,Adding discovered server 192.168.1.90:17000 to client view of cluster
11:24:46.597,Opened connection [connectionId{localValue:1, serverValue:587}] to 192.168.1.90:17000
11:24:46.602,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1494698}
11:24:46.604,Discovered cluster type of STANDALONE
11:24:47.009,Opened connection [connectionId{localValue:2, serverValue:588}] to 192.168.1.90:17000
11:24:47.785,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@56f9de3b: startup date [Thu Feb 01 11:24:47 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3241713e
11:24:47.825,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:24:49.698,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
11:24:49.700,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
11:24:49.701,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
11:24:49.701,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
11:24:49.701,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
11:24:49.703,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
11:24:49.703,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
11:24:49.706,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
11:24:49.707,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
11:24:49.707,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
11:24:49.708,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
11:24:49.708,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
11:24:49.712,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
11:24:49.713,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
11:24:49.713,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
11:24:49.713,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
11:24:49.714,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
11:24:49.722,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
11:24:49.723,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
11:24:49.725,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
11:24:49.735,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:24:49.737,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:24:52.472,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.476,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.480,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:24:52.485,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.488,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.489,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.493,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:24:52.493,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.494,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:24:52.495,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:24:52.534,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:24:52.537,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.537,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:24:52.540,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:24:52.541,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.543,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.544,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:24:52.545,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:24:52.553,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:24:52.555,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:24:52.556,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.557,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.560,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:24:52.562,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:24:52.929,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
11:24:53.242,No URLs will be polled as dynamic configuration sources.
11:24:53.243,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:24:53.253,No URLs will be polled as dynamic configuration sources.
11:24:53.254,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:24:53.666,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3241713e: startup date [Thu Feb 01 11:24:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fad9bb2
11:24:53.797,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:24:53.797,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:24:53.887,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:24:55.218,Registering beans for JMX exposure on startup
11:24:55.235,Bean with name 'environmentManager' has been autodetected for JMX exposure
11:24:55.239,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:24:55.241,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:24:55.242,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:24:55.244,Bean with name 'refreshScope' has been autodetected for JMX exposure
11:24:55.248,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:24:55.271,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:24:55.286,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:24:55.315,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3241713e,type=ConfigurationPropertiesRebinder]
11:24:55.329,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:24:55.337,Registering beans for JMX exposure on startup
11:24:55.654,Starting beans in phase 0
11:24:55.669,Setting initial instance status as: STARTING
11:24:55.742,Initializing Eureka in region us-east-1
11:24:55.887,Using JSON encoding codec LegacyJacksonJson
11:24:55.887,Using JSON decoding codec LegacyJacksonJson
11:24:56.091,Using XML encoding codec XStreamXml
11:24:56.091,Using XML decoding codec XStreamXml
11:24:56.500,Resolving eureka endpoints via configuration
11:24:57.012,Disable delta property : false
11:24:57.013,Single vip registry refresh property : null
11:24:57.013,Force full registry fetch : false
11:24:57.013,Application is null : false
11:24:57.013,Registered Applications size is zero : true
11:24:57.013,Application version is -1: true
11:24:57.013,Getting all instance registry info from the eureka server
11:24:57.307,The response status is 200
11:24:57.310,Starting heartbeat executor: renew interval is: 30
11:24:57.313,InstanceInfoReplicator onDemand update allowed rate per min is 4
11:24:57.318,Discovery Client initialized at timestamp 1517455497317 with initial instances count: 4
11:24:57.376,Registering application nhb-nbiot with eureka with status UP
11:24:57.376,Saw local status change event StatusChangeEvent [timestamp=1517455497376, current=UP, previous=STARTING]
11:24:57.388,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:24:57.404,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:24:57.420,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
11:24:57.427,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:24:57.434,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:24:57.440,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:24:57.445,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:24:57.455,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:24:57.467,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:24:57.474,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:24:57.501,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:24:57.508,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:24:57.518,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:24:57.526,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:24:57.528,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
11:24:57.532,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:24:57.535,Starting beans in phase 2147483647
11:24:57.535,Context refreshed
11:24:57.566,Found 1 custom documentation plugin(s)
11:24:57.677,Scanning for api listing references
11:24:58.069,Generating unique operation named: addUsingPOST_1
11:24:58.077,Generating unique operation named: deleteUsingPOST_1
11:24:58.086,Generating unique operation named: findByIdUsingPOST_1
11:24:58.096,Generating unique operation named: listUsingPOST_1
11:24:58.109,Generating unique operation named: modifyUsingPOST_1
11:24:58.132,Generating unique operation named: deleteUsingPOST_2
11:24:58.147,Generating unique operation named: findByIdUsingPOST_2
11:24:58.237,Initializing ProtocolHandler ["https-jsse-nio-9091"]
11:24:58.273,Starting ProtocolHandler ["https-jsse-nio-9091"]
11:24:58.442,Using a shared selector for servlet write/read
11:24:58.924,Tomcat started on port(s): 9091 (https)
11:24:58.928,Updating port to 9091
11:24:58.936,Started NhbNbApplication in 23.526 seconds (JVM running for 24.463)
11:25:05.733,Initializing Spring FrameworkServlet 'dispatcherServlet'
11:25:05.733,FrameworkServlet 'dispatcherServlet': initialization started
11:25:05.777,FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
11:25:33.740,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1bd0a5f5: startup date [Thu Feb 01 11:25:33 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3241713e
11:25:33.873,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:34.438,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:25:34.478,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
11:25:34.486,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:25:34.501,Using serverListUpdater PollingServerListUpdater
11:25:34.535,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:25:34.538,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@134d40cc
11:25:35.506,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:29:57.023,Resolving eureka endpoints via configuration
11:33:31.206,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236: startup date [Thu Feb 01 11:33:31 CST 2018]; root of context hierarchy
11:33:31.894,HV000001: Hibernate Validator 5.4.1.Final
11:33:31.962,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:33:32.028,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d5c5a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:33.239,No active profile set, falling back to default profiles: default
11:33:33.278,Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55cff952: startup date [Thu Feb 01 11:33:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
11:33:36.301,BeanFactory id=986b4a64-128d-3ccf-9716-c0113f28fc3f
11:33:36.353,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:33:36.444,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:36.565,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$636efda2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:36.589,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d5c5a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:33:37.743,Tomcat initialized with port(s): 9091 (https)
11:33:37.761,Starting service [Tomcat]
11:33:37.763,Starting Servlet Engine: Apache Tomcat/8.5.16
11:33:38.092,Initializing Spring embedded WebApplicationContext
11:33:38.093,Root WebApplicationContext: initialization completed in 4815 ms
11:33:38.805,Mapping servlet: 'dispatcherServlet' to [/]
11:33:38.815,Mapping filter: 'metricsFilter' to: [/*]
11:33:38.816,Mapping filter: 'characterEncodingFilter' to: [/*]
11:33:38.816,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:33:38.816,Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:33:38.816,Mapping filter: 'requestContextFilter' to: [/*]
11:33:38.816,Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:33:41.316,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
11:33:41.317,Adding discovered server 192.168.1.90:17000 to client view of cluster
11:33:41.604,Opened connection [connectionId{localValue:1, serverValue:595}] to 192.168.1.90:17000
11:33:41.610,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=3699742}
11:33:41.613,Discovered cluster type of STANDALONE
11:33:42.115,Opened connection [connectionId{localValue:2, serverValue:596}] to 192.168.1.90:17000
11:33:42.648,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ec3d8e4: startup date [Thu Feb 01 11:33:42 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55cff952
11:33:42.703,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:33:44.422,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
11:33:44.424,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
11:33:44.424,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
11:33:44.425,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
11:33:44.425,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
11:33:44.427,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
11:33:44.428,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
11:33:44.441,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
11:33:44.442,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
11:33:44.443,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
11:33:44.444,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
11:33:44.444,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
11:33:44.451,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
11:33:44.452,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
11:33:44.453,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
11:33:44.453,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
11:33:44.454,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
11:33:44.465,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
11:33:44.467,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
11:33:44.470,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
11:33:44.485,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:33:44.487,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:33:47.062,Mapped "{[/application/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:33:47.062,Mapped "{[/application/env || /application/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.063,Mapped "{[/application/archaius || /application/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.065,Mapped "{[/application/heapdump || /application/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:33:47.067,Mapped "{[/application/configprops || /application/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.069,Mapped "{[/application/dump || /application/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.070,Mapped "{[/application/trace || /application/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.071,Mapped "{[/application/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:33:47.072,Mapped "{[/application/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:33:47.073,Mapped "{[/application/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:33:47.074,Mapped "{[/application/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:33:47.075,Mapped "{[/application/mappings || /application/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.078,Mapped "{[/application/auditevents || /application/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:33:47.079,Mapped "{[/application/features || /application/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.080,Mapped "{[/application/refresh || /application/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:33:47.083,Mapped "{[/application/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:33:47.083,Mapped "{[/application/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:33:47.084,Mapped "{[/application/loggers || /application/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.085,Mapped "{[/application/info || /application/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.086,Mapped "{[/application/health || /application/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:33:47.088,Mapped "{[/application/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:33:47.091,Mapped "{[/application/metrics || /application/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.092,Mapped "{[/application/beans || /application/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.093,Mapped "{[/application/autoconfig || /application/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:33:47.355,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
11:33:47.626,No URLs will be polled as dynamic configuration sources.
11:33:47.626,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:33:47.638,No URLs will be polled as dynamic configuration sources.
11:33:47.639,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:33:47.919,Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55cff952: startup date [Thu Feb 01 11:33:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31bcf236
11:33:48.085,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:33:48.085,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:33:48.183,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:33:49.415,Registering beans for JMX exposure on startup
11:33:49.441,Bean with name 'environmentManager' has been autodetected for JMX exposure
11:33:49.444,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:33:49.445,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:33:49.447,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:33:49.449,Bean with name 'refreshScope' has been autodetected for JMX exposure
11:33:49.454,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:33:49.482,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:33:49.497,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:33:49.528,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=55cff952,type=ConfigurationPropertiesRebinder]
11:33:49.537,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:33:49.544,Registering beans for JMX exposure on startup
11:33:49.864,Starting beans in phase 0
11:33:49.884,Setting initial instance status as: STARTING
11:33:49.966,Initializing Eureka in region us-east-1
11:33:50.126,Using JSON encoding codec LegacyJacksonJson
11:33:50.126,Using JSON decoding codec LegacyJacksonJson
11:33:50.402,Using XML encoding codec XStreamXml
11:33:50.403,Using XML decoding codec XStreamXml
11:33:50.915,Resolving eureka endpoints via configuration
11:33:51.308,Disable delta property : false
11:33:51.308,Single vip registry refresh property : null
11:33:51.308,Force full registry fetch : false
11:33:51.308,Application is null : false
11:33:51.308,Registered Applications size is zero : true
11:33:51.308,Application version is -1: true
11:33:51.308,Getting all instance registry info from the eureka server
11:33:51.540,The response status is 200
11:33:51.541,Starting heartbeat executor: renew interval is: 30
11:33:51.545,InstanceInfoReplicator onDemand update allowed rate per min is 4
11:33:51.551,Discovery Client initialized at timestamp 1517456031551 with initial instances count: 3
11:33:51.615,Registering application nhb-nbiot with eureka with status UP
11:33:51.617,Saw local status change event StatusChangeEvent [timestamp=1517456031617, current=UP, previous=STARTING]
11:33:51.630,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:33:51.647,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:33:51.651,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
11:33:51.694,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:33:51.706,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:33:51.716,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:33:51.724,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:33:51.729,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:33:51.733,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:33:51.739,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:33:51.757,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:33:51.762,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:33:51.767,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:33:51.771,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:33:51.776,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:33:51.778,Starting beans in phase 2147483647
11:33:51.779,Context refreshed
11:33:51.808,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
11:33:51.826,Found 1 custom documentation plugin(s)
11:33:51.960,Scanning for api listing references
11:33:52.407,Generating unique operation named: addUsingPOST_1
11:33:52.418,Generating unique operation named: deleteUsingPOST_1
11:33:52.435,Generating unique operation named: findByIdUsingPOST_1
11:33:52.453,Generating unique operation named: listUsingPOST_1
11:33:52.478,Generating unique operation named: modifyUsingPOST_1
11:33:52.513,Generating unique operation named: deleteUsingPOST_2
11:33:52.538,Generating unique operation named: findByIdUsingPOST_2
11:33:52.643,Initializing ProtocolHandler ["https-jsse-nio-9091"]
11:33:52.672,Starting ProtocolHandler ["https-jsse-nio-9091"]
11:33:52.786,Using a shared selector for servlet write/read
11:33:52.859,Tomcat started on port(s): 9091 (https)
11:33:52.866,Updating port to 9091
11:33:53.231,Started NhbNbApplication in 23.35 seconds (JVM running for 24.596)
11:34:12.535,Initializing Spring FrameworkServlet 'dispatcherServlet'
11:34:12.536,FrameworkServlet 'dispatcherServlet': initialization started
11:34:12.572,FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
11:34:19.306,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b356566: startup date [Thu Feb 01 11:34:19 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55cff952
11:34:20.174,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:34:22.528,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:34:22.725,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
11:34:22.751,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:34:22.785,Using serverListUpdater PollingServerListUpdater
11:34:22.906,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:34:22.920,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[gxs:36000, xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:gxs:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6a5f4ad1
11:34:23.801,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:38:51.315,Resolving eureka endpoints via configuration
11:43:51.321,Resolving eureka endpoints via configuration
11:48:51.326,Resolving eureka endpoints via configuration
11:53:51.331,Resolving eureka endpoints via configuration
11:58:51.337,Resolving eureka endpoints via configuration
12:03:51.342,Resolving eureka endpoints via configuration
12:08:51.347,Resolving eureka endpoints via configuration
12:13:51.352,Resolving eureka endpoints via configuration
12:18:51.357,Resolving eureka endpoints via configuration
12:23:51.362,Resolving eureka endpoints via configuration
12:28:51.368,Resolving eureka endpoints via configuration
12:33:51.373,Resolving eureka endpoints via configuration
12:38:51.378,Resolving eureka endpoints via configuration
12:44:18.064,Resolving eureka endpoints via configuration
12:44:18.100,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.108,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.129,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.129,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.141,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.141,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.484,Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.NoRouteToHostException: No route to host: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.NoRouteToHostException: No route to host: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
12:44:18.487,Request execution failed with message: java.net.NoRouteToHostException: No route to host: connect
12:44:18.488,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.488,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.489,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.490,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.491,I/O exception (java.net.NoRouteToHostException) caught when connecting to {}->http://192.168.1.90:8761: No route to host: connect
12:44:18.491,Retrying connect to {}->http://192.168.1.90:8761
12:44:18.503,Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.NoRouteToHostException: No route to host: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.NoRouteToHostException: No route to host: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
12:44:18.504,Request execution failed with message: java.net.NoRouteToHostException: No route to host: connect
12:44:18.513,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
12:49:18.072,Resolving eureka endpoints via configuration
12:54:18.077,Resolving eureka endpoints via configuration
12:59:18.082,Resolving eureka endpoints via configuration
13:04:18.087,Resolving eureka endpoints via configuration
13:09:18.092,Resolving eureka endpoints via configuration
13:14:18.098,Resolving eureka endpoints via configuration
13:19:18.105,Resolving eureka endpoints via configuration
13:24:18.110,Resolving eureka endpoints via configuration
13:29:18.115,Resolving eureka endpoints via configuration
13:34:18.120,Resolving eureka endpoints via configuration
13:39:18.125,Resolving eureka endpoints via configuration
14:13:21.036,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 14:13:21 CST 2018]; root of context hierarchy
14:13:21.741,HV000001: Hibernate Validator 5.3.6.Final
14:13:21.751,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:13:21.847,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ac264616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:13:23.110,No active profile set, falling back to default profiles: default
14:13:23.142,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@39ab59f8: startup date [Thu Feb 01 14:13:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:13:26.602,BeanFactory id=230e2883-23f2-3878-9034-324a7a7d1ebb
14:13:26.660,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:13:26.785,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:13:26.901,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c238e95a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:13:26.935,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ac264616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:13:28.132,Tomcat initialized with port(s): 9091 (https)
14:13:28.163,Starting service [Tomcat]
14:13:28.165,Starting Servlet Engine: Apache Tomcat/8.5.27
14:13:28.464,Initializing Spring embedded WebApplicationContext
14:13:28.465,Root WebApplicationContext: initialization completed in 5323 ms
14:13:29.052,Mapping servlet: 'dispatcherServlet' to [/]
14:13:29.086,Mapping filter: 'metricsFilter' to: [/*]
14:13:29.087,Mapping filter: 'characterEncodingFilter' to: [/*]
14:13:29.088,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:13:29.088,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:13:29.088,Mapping filter: 'requestContextFilter' to: [/*]
14:13:29.088,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:13:29.089,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:13:33.067,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:13:33.067,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:13:33.415,Opened connection [connectionId{localValue:1, serverValue:608}] to 192.168.1.90:17000
14:13:33.419,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1494157}
14:13:33.421,Discovered cluster type of STANDALONE
14:13:33.822,Opened connection [connectionId{localValue:2, serverValue:609}] to 192.168.1.90:17000
14:13:34.119,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@45bd4753: startup date [Thu Feb 01 14:13:34 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@39ab59f8
14:13:34.161,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:13:36.301,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:13:36.302,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:13:36.303,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:13:36.303,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:13:36.303,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:13:36.306,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:13:36.306,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:13:36.307,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:13:36.308,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:13:36.309,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:13:36.309,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:13:36.309,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:13:36.310,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:13:36.315,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:13:36.316,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:13:36.316,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:13:36.317,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:13:36.317,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:13:36.324,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:13:36.326,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:13:36.327,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:13:36.332,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:13:36.333,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:13:38.655,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.657,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.659,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.661,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.662,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.663,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.664,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.666,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.669,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:13:38.672,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:13:38.676,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:13:38.678,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:13:38.678,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.679,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.683,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:13:38.684,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:13:38.684,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.686,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:13:38.687,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:13:38.688,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:13:38.689,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:13:38.690,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:13:38.692,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:13:38.692,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:13:38.693,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:13:38.694,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:13:38.694,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:13:39.126,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:13:39.794,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@39ab59f8: startup date [Thu Feb 01 14:13:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:13:40.114,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:13:40.115,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:13:40.266,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:13:41.041,No URLs will be polled as dynamic configuration sources.
14:13:41.042,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:13:41.054,No URLs will be polled as dynamic configuration sources.
14:13:41.055,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:13:41.541,Registering beans for JMX exposure on startup
14:13:41.564,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:13:41.570,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:13:41.572,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:13:41.573,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:13:41.576,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:13:41.577,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:13:41.583,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:13:41.623,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:13:41.651,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:13:41.668,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:13:41.701,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=39ab59f8,type=ConfigurationPropertiesRebinder]
14:13:41.719,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:13:41.721,Registering beans for JMX exposure on startup
14:13:42.106,Starting beans in phase 0
14:13:42.121,Setting initial instance status as: STARTING
14:13:42.227,Initializing Eureka in region us-east-1
14:13:42.640,Using JSON encoding codec LegacyJacksonJson
14:13:42.640,Using JSON decoding codec LegacyJacksonJson
14:13:42.902,Using XML encoding codec XStreamXml
14:13:42.902,Using XML decoding codec XStreamXml
14:13:43.537,Resolving eureka endpoints via configuration
14:13:44.157,Disable delta property : false
14:13:44.158,Single vip registry refresh property : null
14:13:44.158,Force full registry fetch : false
14:13:44.158,Application is null : false
14:13:44.158,Registered Applications size is zero : true
14:13:44.158,Application version is -1: true
14:13:44.158,Getting all instance registry info from the eureka server
14:13:44.781,The response status is 200
14:13:44.784,Starting heartbeat executor: renew interval is: 30
14:13:44.789,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:13:44.797,Discovery Client initialized at timestamp 1517465624796 with initial instances count: 3
14:13:44.874,Registering application nhb-nbiot with eureka with status UP
14:13:44.876,Saw local status change event StatusChangeEvent [timestamp=1517465624876, current=UP, previous=STARTING]
14:13:44.884,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:13:44.899,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:13:44.916,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:13:44.921,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:13:44.926,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:13:44.931,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:13:44.936,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:13:44.941,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:13:44.955,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:13:44.961,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:13:44.966,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:13:44.970,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:13:44.983,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:13:45.018,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:13:45.020,Starting beans in phase 2147483647
14:13:45.021,Context refreshed
14:13:45.098,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:13:45.112,Found 1 custom documentation plugin(s)
14:13:45.210,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:13:45.310,Scanning for api listing references
14:13:45.780,Generating unique operation named: addUsingPOST_1
14:13:45.788,Generating unique operation named: deleteUsingPOST_1
14:13:45.797,Generating unique operation named: findByIdUsingPOST_1
14:13:45.805,Generating unique operation named: listUsingPOST_1
14:13:45.813,Generating unique operation named: modifyUsingPOST_1
14:13:45.830,Generating unique operation named: deleteUsingPOST_2
14:13:45.842,Generating unique operation named: findByIdUsingPOST_2
14:13:45.941,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:13:45.965,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:13:46.150,Using a shared selector for servlet write/read
14:13:46.238,Tomcat started on port(s): 9091 (https)
14:13:46.241,Updating port to 9091
14:13:46.253,Started NhbNbApplication in 27.077 seconds (JVM running for 27.941)
14:14:04.171,Initializing Spring FrameworkServlet 'dispatcherServlet'
14:14:04.172,FrameworkServlet 'dispatcherServlet': initialization started
14:14:04.310,FrameworkServlet 'dispatcherServlet': initialization completed in 138 ms
14:14:58.753,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@77b54c72: startup date [Thu Feb 01 14:14:58 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@39ab59f8
14:14:59.429,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:01.325,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:15:01.521,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
14:15:01.547,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:15:01.579,Using serverListUpdater PollingServerListUpdater
14:15:01.690,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:15:01.699,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@283dc433
14:15:02.592,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:18:44.166,Resolving eureka endpoints via configuration
14:23:36.577,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 14:23:36 CST 2018]; root of context hierarchy
14:23:37.327,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:23:37.324,HV000001: Hibernate Validator 5.3.6.Final
14:23:37.423,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$deefade5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:23:38.655,No active profile set, falling back to default profiles: default
14:23:38.689,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40147317: startup date [Thu Feb 01 14:23:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:23:40.938,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
14:23:40.981,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:23:41.082,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:23:41.203,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f5025129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:23:41.230,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$deefade5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:23:42.378,Tomcat initialized with port(s): 9091 (https)
14:23:42.395,Starting service [Tomcat]
14:23:42.397,Starting Servlet Engine: Apache Tomcat/8.5.27
14:23:42.679,Initializing Spring embedded WebApplicationContext
14:23:42.682,Root WebApplicationContext: initialization completed in 3993 ms
14:23:43.143,Mapping servlet: 'dispatcherServlet' to [/]
14:23:43.152,Mapping filter: 'metricsFilter' to: [/*]
14:23:43.152,Mapping filter: 'characterEncodingFilter' to: [/*]
14:23:43.153,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:23:43.153,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:23:43.153,Mapping filter: 'requestContextFilter' to: [/*]
14:23:43.153,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:23:43.153,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:23:44.738,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:23:44.739,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:23:45.068,Opened connection [connectionId{localValue:1, serverValue:610}] to 192.168.1.90:17000
14:23:45.073,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1753448}
14:23:45.075,Discovered cluster type of STANDALONE
14:23:45.387,Opened connection [connectionId{localValue:2, serverValue:611}] to 192.168.1.90:17000
14:23:45.651,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6003220a: startup date [Thu Feb 01 14:23:45 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40147317
14:23:45.692,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:23:47.235,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:23:47.237,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:23:47.238,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:23:47.238,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:23:47.238,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:23:47.240,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:23:47.242,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:23:47.242,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:23:47.245,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:23:47.246,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:23:47.246,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:23:47.247,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:23:47.247,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:23:47.252,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:23:47.253,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:23:47.253,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:23:47.254,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:23:47.254,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:23:47.261,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:23:47.263,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:23:47.265,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:23:47.274,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:23:47.275,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:23:49.315,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:23:49.317,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.320,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:23:49.320,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.321,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.324,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:23:49.325,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:23:49.326,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:23:49.327,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.329,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:23:49.330,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:23:49.331,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:23:49.332,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.332,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:23:49.333,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.334,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.335,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.336,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:23:49.337,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.339,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:23:49.340,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:23:49.341,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.342,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:23:49.343,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.345,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:23:49.346,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:23:49.347,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:23:49.650,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:23:50.153,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40147317: startup date [Thu Feb 01 14:23:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:23:50.292,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:23:50.293,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:23:50.387,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:23:51.756,No URLs will be polled as dynamic configuration sources.
14:23:51.756,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:23:51.768,No URLs will be polled as dynamic configuration sources.
14:23:51.769,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:23:52.142,Registering beans for JMX exposure on startup
14:23:52.162,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:23:52.167,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:23:52.168,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:23:52.169,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:23:52.170,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:23:52.172,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:23:52.177,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:23:52.205,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:23:52.228,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:23:52.239,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:23:52.263,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=40147317,type=ConfigurationPropertiesRebinder]
14:23:52.274,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:23:52.276,Registering beans for JMX exposure on startup
14:23:52.612,Starting beans in phase 0
14:23:52.629,Setting initial instance status as: STARTING
14:23:52.712,Initializing Eureka in region us-east-1
14:23:52.876,Using JSON encoding codec LegacyJacksonJson
14:23:52.877,Using JSON decoding codec LegacyJacksonJson
14:23:53.113,Using XML encoding codec XStreamXml
14:23:53.113,Using XML decoding codec XStreamXml
14:23:53.583,Resolving eureka endpoints via configuration
14:23:54.244,Disable delta property : false
14:23:54.244,Single vip registry refresh property : null
14:23:54.245,Force full registry fetch : false
14:23:54.245,Application is null : false
14:23:54.245,Registered Applications size is zero : true
14:23:54.245,Application version is -1: true
14:23:54.245,Getting all instance registry info from the eureka server
14:23:54.516,The response status is 200
14:23:54.520,Starting heartbeat executor: renew interval is: 30
14:23:54.526,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:23:54.536,Discovery Client initialized at timestamp 1517466234535 with initial instances count: 4
14:23:54.588,Registering application nhb-nbiot with eureka with status UP
14:23:54.589,Saw local status change event StatusChangeEvent [timestamp=1517466234589, current=UP, previous=STARTING]
14:23:54.600,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:23:54.626,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:23:54.628,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:23:54.651,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:23:54.657,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:23:54.663,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:23:54.667,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:23:54.674,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:23:54.678,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:23:54.697,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:23:54.701,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:23:54.709,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:23:54.710,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:23:54.724,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:23:54.727,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:23:54.732,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:23:54.734,Starting beans in phase 2147483647
14:23:54.734,Context refreshed
14:23:54.766,Found 1 custom documentation plugin(s)
14:23:54.871,Scanning for api listing references
14:23:55.197,Generating unique operation named: addUsingPOST_1
14:23:55.205,Generating unique operation named: deleteUsingPOST_1
14:23:55.214,Generating unique operation named: findByIdUsingPOST_1
14:23:55.222,Generating unique operation named: listUsingPOST_1
14:23:55.232,Generating unique operation named: modifyUsingPOST_1
14:23:55.249,Generating unique operation named: deleteUsingPOST_2
14:23:55.260,Generating unique operation named: findByIdUsingPOST_2
14:23:55.349,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:23:55.375,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:23:55.546,Using a shared selector for servlet write/read
14:23:55.642,Tomcat started on port(s): 9091 (https)
14:23:55.644,Updating port to 9091
14:23:55.651,Started NhbNbApplication in 20.829 seconds (JVM running for 21.7)
14:24:24.655,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 14:24:24 CST 2018]; root of context hierarchy
14:24:25.226,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:24:25.344,HV000001: Hibernate Validator 5.3.6.Final
14:24:25.350,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1831e4aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:24:26.642,No active profile set, falling back to default profiles: default
14:24:26.680,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32fdec40: startup date [Thu Feb 01 14:24:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:24:28.790,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
14:24:28.837,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:24:28.934,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:24:29.050,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2e4487ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:24:29.094,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1831e4aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:24:30.305,Tomcat initialized with port(s): 9091 (https)
14:24:30.347,Starting service [Tomcat]
14:24:30.349,Starting Servlet Engine: Apache Tomcat/8.5.27
14:24:30.755,Initializing Spring embedded WebApplicationContext
14:24:30.757,Root WebApplicationContext: initialization completed in 4077 ms
14:24:31.353,Mapping servlet: 'dispatcherServlet' to [/]
14:24:31.362,Mapping filter: 'metricsFilter' to: [/*]
14:24:31.363,Mapping filter: 'characterEncodingFilter' to: [/*]
14:24:31.363,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:24:31.363,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:24:31.363,Mapping filter: 'requestContextFilter' to: [/*]
14:24:31.363,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:24:31.363,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:24:33.366,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:24:33.367,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:24:33.548,Opened connection [connectionId{localValue:1, serverValue:612}] to 192.168.1.90:17000
14:24:33.554,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2040287}
14:24:33.557,Discovered cluster type of STANDALONE
14:24:33.871,Opened connection [connectionId{localValue:2, serverValue:613}] to 192.168.1.90:17000
14:24:34.124,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@156cfa20: startup date [Thu Feb 01 14:24:34 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32fdec40
14:24:34.153,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:24:35.630,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:24:35.633,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:24:35.634,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:24:35.636,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:24:35.637,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:24:35.642,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:24:35.643,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:24:35.644,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:24:35.646,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:24:35.646,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:24:35.647,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:24:35.647,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:24:35.647,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:24:35.652,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:24:35.653,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:24:35.654,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:24:35.656,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:24:35.657,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:24:35.665,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:24:35.667,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:24:35.669,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:24:35.678,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:24:35.679,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:24:37.523,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:24:37.524,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:24:37.525,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:24:37.526,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:24:37.528,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:24:37.528,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.529,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:24:37.530,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.530,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.534,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:24:37.535,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:24:37.535,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.537,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.538,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.540,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:24:37.541,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:24:37.543,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:24:37.543,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.544,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.545,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.546,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:24:37.546,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:24:37.547,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.548,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.549,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:24:37.551,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:24:37.552,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:24:37.855,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:24:38.299,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32fdec40: startup date [Thu Feb 01 14:24:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:24:38.428,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:24:38.428,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:24:38.530,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:24:39.368,No URLs will be polled as dynamic configuration sources.
14:24:39.368,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:24:39.381,No URLs will be polled as dynamic configuration sources.
14:24:39.381,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:24:39.770,Registering beans for JMX exposure on startup
14:24:39.786,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:24:39.790,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:24:39.791,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:24:39.792,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:24:39.794,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:24:39.795,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:24:39.800,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:24:39.824,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:24:39.848,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:24:39.860,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:24:39.881,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=32fdec40,type=ConfigurationPropertiesRebinder]
14:24:39.890,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:24:39.892,Registering beans for JMX exposure on startup
14:24:40.232,Starting beans in phase 0
14:24:40.248,Setting initial instance status as: STARTING
14:24:40.325,Initializing Eureka in region us-east-1
14:24:40.474,Using JSON encoding codec LegacyJacksonJson
14:24:40.474,Using JSON decoding codec LegacyJacksonJson
14:24:40.711,Using XML encoding codec XStreamXml
14:24:40.712,Using XML decoding codec XStreamXml
14:24:41.182,Resolving eureka endpoints via configuration
14:24:41.609,Disable delta property : false
14:24:41.610,Single vip registry refresh property : null
14:24:41.610,Force full registry fetch : false
14:24:41.610,Application is null : false
14:24:41.610,Registered Applications size is zero : true
14:24:41.610,Application version is -1: true
14:24:41.610,Getting all instance registry info from the eureka server
14:24:41.948,The response status is 200
14:24:41.952,Starting heartbeat executor: renew interval is: 30
14:24:41.960,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:24:41.965,Discovery Client initialized at timestamp 1517466281965 with initial instances count: 4
14:24:42.021,Registering application nhb-nbiot with eureka with status UP
14:24:42.022,Saw local status change event StatusChangeEvent [timestamp=1517466282022, current=UP, previous=STARTING]
14:24:42.025,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:24:42.037,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:24:42.059,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:24:42.073,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:24:42.079,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:24:42.083,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:24:42.087,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:24:42.091,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:24:42.096,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:24:42.107,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:24:42.112,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:24:42.118,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:24:42.122,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:24:42.128,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:24:42.132,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:24:42.134,Starting beans in phase 2147483647
14:24:42.135,Context refreshed
14:24:42.148,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:24:42.161,Found 1 custom documentation plugin(s)
14:24:42.273,Scanning for api listing references
14:24:42.645,Generating unique operation named: addUsingPOST_1
14:24:42.652,Generating unique operation named: deleteUsingPOST_1
14:24:42.660,Generating unique operation named: findByIdUsingPOST_1
14:24:42.666,Generating unique operation named: listUsingPOST_1
14:24:42.673,Generating unique operation named: modifyUsingPOST_1
14:24:42.689,Generating unique operation named: deleteUsingPOST_2
14:24:42.701,Generating unique operation named: findByIdUsingPOST_2
14:24:42.774,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:24:42.791,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:24:42.917,Using a shared selector for servlet write/read
14:24:42.967,Tomcat started on port(s): 9091 (https)
14:24:42.972,Updating port to 9091
14:24:42.982,Started NhbNbApplication in 20.05 seconds (JVM running for 20.815)
14:25:36.437,Initializing Spring FrameworkServlet 'dispatcherServlet'
14:25:36.438,FrameworkServlet 'dispatcherServlet': initialization started
14:25:36.474,FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
14:25:46.965,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1768210c: startup date [Thu Feb 01 14:25:46 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@32fdec40
14:25:47.084,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:25:47.404,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:25:47.459,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
14:25:47.468,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:25:47.480,Using serverListUpdater PollingServerListUpdater
14:25:47.511,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:25:47.514,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:36000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:36000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@59fabddb
14:25:48.485,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:29:41.617,Resolving eureka endpoints via configuration
14:39:29.968,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 14:39:29 CST 2018]; root of context hierarchy
14:39:30.600,HV000001: Hibernate Validator 5.3.6.Final
14:39:30.951,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:39:31.067,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5485b8c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:39:32.258,No active profile set, falling back to default profiles: default
14:39:32.292,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@261d8190: startup date [Thu Feb 01 14:39:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:39:34.558,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
14:39:34.600,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:39:34.685,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:39:34.812,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6a985c07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:39:34.845,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5485b8c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:39:36.184,Tomcat initialized with port(s): 9091 (https)
14:39:36.200,Starting service [Tomcat]
14:39:36.202,Starting Servlet Engine: Apache Tomcat/8.5.27
14:39:36.440,Initializing Spring embedded WebApplicationContext
14:39:36.443,Root WebApplicationContext: initialization completed in 4151 ms
14:39:36.958,Mapping servlet: 'dispatcherServlet' to [/]
14:39:36.965,Mapping filter: 'metricsFilter' to: [/*]
14:39:36.966,Mapping filter: 'characterEncodingFilter' to: [/*]
14:39:36.966,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:39:36.967,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:39:36.967,Mapping filter: 'requestContextFilter' to: [/*]
14:39:36.967,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:39:36.967,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:39:38.921,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:39:38.921,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:39:39.195,Opened connection [connectionId{localValue:1, serverValue:616}] to 192.168.1.90:17000
14:39:39.200,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2879198}
14:39:39.204,Discovered cluster type of STANDALONE
14:39:39.475,Opened connection [connectionId{localValue:2, serverValue:617}] to 192.168.1.90:17000
14:39:39.745,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7de5871d: startup date [Thu Feb 01 14:39:39 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@261d8190
14:39:39.787,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:39:41.252,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:39:41.254,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:39:41.254,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:39:41.255,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:39:41.255,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:39:41.259,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:39:41.262,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:39:41.263,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:39:41.270,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:39:41.271,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:39:41.271,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:39:41.272,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:39:41.273,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:39:41.278,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:39:41.279,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:39:41.280,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:39:41.281,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:39:41.282,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:39:41.292,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:39:41.293,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:39:41.295,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:39:41.302,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:39:41.303,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:39:43.438,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.439,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.440,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:39:43.442,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.449,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:39:43.450,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:39:43.450,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.451,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:39:43.452,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:39:43.453,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.454,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:39:43.455,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:39:43.456,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.458,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:39:43.463,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.464,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:39:43.466,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:39:43.467,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.468,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.470,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:39:43.472,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.474,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:39:43.475,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.477,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:39:43.478,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:39:43.479,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:39:43.480,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:39:43.753,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:39:44.215,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@261d8190: startup date [Thu Feb 01 14:39:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:39:44.345,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:39:44.345,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:39:44.448,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:39:45.292,No URLs will be polled as dynamic configuration sources.
14:39:45.292,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:39:45.306,No URLs will be polled as dynamic configuration sources.
14:39:45.306,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:39:45.738,Registering beans for JMX exposure on startup
14:39:45.754,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:39:45.760,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:39:45.762,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:39:45.765,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:39:45.767,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:39:45.768,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:39:45.774,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:39:45.803,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:39:45.833,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:39:45.845,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:39:45.872,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=261d8190,type=ConfigurationPropertiesRebinder]
14:39:45.881,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:39:45.883,Registering beans for JMX exposure on startup
14:39:46.285,Starting beans in phase 0
14:39:46.305,Setting initial instance status as: STARTING
14:39:46.404,Initializing Eureka in region us-east-1
14:39:46.581,Using JSON encoding codec LegacyJacksonJson
14:39:46.582,Using JSON decoding codec LegacyJacksonJson
14:39:46.840,Using XML encoding codec XStreamXml
14:39:46.841,Using XML decoding codec XStreamXml
14:39:47.348,Resolving eureka endpoints via configuration
14:39:47.838,Disable delta property : false
14:39:47.839,Single vip registry refresh property : null
14:39:47.839,Force full registry fetch : false
14:39:47.839,Application is null : false
14:39:47.839,Registered Applications size is zero : true
14:39:47.839,Application version is -1: true
14:39:47.839,Getting all instance registry info from the eureka server
14:39:48.206,The response status is 200
14:39:48.208,Starting heartbeat executor: renew interval is: 30
14:39:48.213,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:39:48.218,Discovery Client initialized at timestamp 1517467188217 with initial instances count: 3
14:39:48.277,Registering application nhb-nbiot with eureka with status UP
14:39:48.279,Saw local status change event StatusChangeEvent [timestamp=1517467188279, current=UP, previous=STARTING]
14:39:48.286,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:39:48.299,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:39:48.323,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:39:48.328,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:39:48.332,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:39:48.337,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:39:48.341,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:39:48.346,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:39:48.348,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:39:48.362,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:39:48.374,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:39:48.378,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:39:48.382,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:39:48.387,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:39:48.399,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:39:48.402,Starting beans in phase 2147483647
14:39:48.403,Context refreshed
14:39:48.444,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:39:48.475,Found 1 custom documentation plugin(s)
14:39:48.694,Scanning for api listing references
14:39:49.100,Generating unique operation named: addUsingPOST_1
14:39:49.120,Generating unique operation named: deleteUsingPOST_1
14:39:49.134,Generating unique operation named: findByIdUsingPOST_1
14:39:49.145,Generating unique operation named: listUsingPOST_1
14:39:49.155,Generating unique operation named: modifyUsingPOST_1
14:39:49.178,Generating unique operation named: deleteUsingPOST_2
14:39:49.213,Generating unique operation named: findByIdUsingPOST_2
14:39:49.396,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:39:49.419,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:39:49.581,Using a shared selector for servlet write/read
14:39:49.657,Tomcat started on port(s): 9091 (https)
14:39:49.660,Updating port to 9091
14:39:49.675,Started NhbNbApplication in 21.204 seconds (JVM running for 21.982)
14:40:05.837,Initializing Spring FrameworkServlet 'dispatcherServlet'
14:40:05.837,FrameworkServlet 'dispatcherServlet': initialization started
14:40:05.874,FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
14:40:29.410,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1cff4f57: startup date [Thu Feb 01 14:40:29 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@261d8190
14:40:29.531,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:40:29.865,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:40:29.904,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
14:40:29.913,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:40:29.925,Using serverListUpdater PollingServerListUpdater
14:40:29.969,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:40:29.973,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@dde5bde
14:40:31.090,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:44:47.846,Resolving eureka endpoints via configuration
14:50:25.478,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 14:50:25 CST 2018]; root of context hierarchy
14:50:26.076,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:50:26.087,HV000001: Hibernate Validator 5.3.6.Final
14:50:26.165,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b48da96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:50:27.461,No active profile set, falling back to default profiles: default
14:50:27.488,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14faa38c: startup date [Thu Feb 01 14:50:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:50:29.532,BeanFactory id=974dcaa1-a39b-3f69-91c1-ddc572109fe4
14:50:29.576,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:50:29.692,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:50:29.801,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$215b7dda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:50:29.832,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b48da96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:50:31.096,Tomcat initialized with port(s): 9091 (https)
14:50:31.111,Starting service [Tomcat]
14:50:31.113,Starting Servlet Engine: Apache Tomcat/8.5.27
14:50:31.355,Initializing Spring embedded WebApplicationContext
14:50:31.356,Root WebApplicationContext: initialization completed in 3868 ms
14:50:31.803,Mapping servlet: 'dispatcherServlet' to [/]
14:50:31.813,Mapping filter: 'metricsFilter' to: [/*]
14:50:31.814,Mapping filter: 'characterEncodingFilter' to: [/*]
14:50:31.814,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:50:31.814,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:50:31.815,Mapping filter: 'requestContextFilter' to: [/*]
14:50:31.815,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:50:31.815,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:50:33.624,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:50:33.624,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:50:34.158,Opened connection [connectionId{localValue:1, serverValue:620}] to 192.168.1.90:17000
14:50:34.162,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2204504}
14:50:34.164,Discovered cluster type of STANDALONE
14:50:34.480,Opened connection [connectionId{localValue:2, serverValue:621}] to 192.168.1.90:17000
14:50:34.735,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@74ce7fdf: startup date [Thu Feb 01 14:50:34 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14faa38c
14:50:34.773,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:50:36.166,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:50:36.168,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:50:36.168,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:50:36.169,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:50:36.170,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:50:36.171,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:50:36.172,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:50:36.173,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:50:36.176,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:50:36.177,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:50:36.178,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:50:36.179,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:50:36.181,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:50:36.187,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:50:36.188,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:50:36.190,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:50:36.192,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:50:36.193,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:50:36.204,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:50:36.207,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:50:36.211,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:50:36.220,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:50:36.221,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:50:38.012,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:50:38.013,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:50:38.014,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:50:38.017,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.019,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:50:38.023,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:50:38.024,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:50:38.025,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.028,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:50:38.030,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.032,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:50:38.033,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:50:38.035,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.037,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.038,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.040,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.041,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.045,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.048,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:50:38.049,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.051,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:50:38.052,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:50:38.053,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.054,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:50:38.055,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:50:38.055,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:50:38.056,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:50:38.378,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:50:38.900,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14faa38c: startup date [Thu Feb 01 14:50:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
14:50:39.042,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:50:39.043,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:50:39.162,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:50:40.397,No URLs will be polled as dynamic configuration sources.
14:50:40.397,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:50:40.410,No URLs will be polled as dynamic configuration sources.
14:50:40.410,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:50:40.912,Registering beans for JMX exposure on startup
14:50:40.932,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:50:40.936,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:50:40.937,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:50:40.938,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:50:40.939,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:50:40.941,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:50:40.946,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:50:40.976,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:50:41.007,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:50:41.020,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:50:41.044,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14faa38c,type=ConfigurationPropertiesRebinder]
14:50:41.062,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:50:41.065,Registering beans for JMX exposure on startup
14:50:41.490,Starting beans in phase 0
14:50:41.510,Setting initial instance status as: STARTING
14:50:41.585,Initializing Eureka in region us-east-1
14:50:41.755,Using JSON encoding codec LegacyJacksonJson
14:50:41.755,Using JSON decoding codec LegacyJacksonJson
14:50:41.998,Using XML encoding codec XStreamXml
14:50:41.998,Using XML decoding codec XStreamXml
14:50:42.509,Resolving eureka endpoints via configuration
14:50:43.098,Disable delta property : false
14:50:43.098,Single vip registry refresh property : null
14:50:43.098,Force full registry fetch : false
14:50:43.098,Application is null : false
14:50:43.099,Registered Applications size is zero : true
14:50:43.099,Application version is -1: true
14:50:43.099,Getting all instance registry info from the eureka server
14:50:43.486,The response status is 200
14:50:43.490,Starting heartbeat executor: renew interval is: 30
14:50:43.495,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:50:43.502,Discovery Client initialized at timestamp 1517467843502 with initial instances count: 3
14:50:43.575,Registering application nhb-nbiot with eureka with status UP
14:50:43.578,Saw local status change event StatusChangeEvent [timestamp=1517467843578, current=UP, previous=STARTING]
14:50:43.587,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:50:43.602,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:50:43.621,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:50:43.626,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:50:43.631,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:50:43.638,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:50:43.643,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:50:43.650,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:50:43.658,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:50:43.664,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:50:43.669,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:50:43.676,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:50:43.683,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:50:43.689,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:50:43.696,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:50:43.698,Starting beans in phase 2147483647
14:50:43.699,Context refreshed
14:50:43.767,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:50:43.770,Found 1 custom documentation plugin(s)
14:50:43.901,Scanning for api listing references
14:50:44.239,Generating unique operation named: addUsingPOST_1
14:50:44.247,Generating unique operation named: deleteUsingPOST_1
14:50:44.257,Generating unique operation named: findByIdUsingPOST_1
14:50:44.265,Generating unique operation named: listUsingPOST_1
14:50:44.273,Generating unique operation named: modifyUsingPOST_1
14:50:44.289,Generating unique operation named: deleteUsingPOST_2
14:50:44.299,Generating unique operation named: findByIdUsingPOST_2
14:50:44.390,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:50:44.408,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:50:44.558,Using a shared selector for servlet write/read
14:50:44.645,Tomcat started on port(s): 9091 (https)
14:50:44.649,Updating port to 9091
14:50:44.658,Started NhbNbApplication in 20.736 seconds (JVM running for 21.462)
14:51:33.856,Initializing Spring FrameworkServlet 'dispatcherServlet'
14:51:33.856,FrameworkServlet 'dispatcherServlet': initialization started
14:51:33.901,FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
14:51:42.784,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@64cbe7f: startup date [Thu Feb 01 14:51:42 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14faa38c
14:51:42.905,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:51:43.221,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:51:43.264,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
14:51:43.272,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:51:43.284,Using serverListUpdater PollingServerListUpdater
14:51:43.322,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:51:43.328,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@586e85b6
14:51:44.340,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:55:43.108,Resolving eureka endpoints via configuration
14:56:54.708,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31add175: startup date [Thu Feb 01 14:56:54 CST 2018]; root of context hierarchy
14:56:55.289,HV000001: Hibernate Validator 5.3.6.Final
14:56:55.340,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:56:55.426,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eba5caea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:56:56.624,No active profile set, falling back to default profiles: default
14:56:56.648,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@710b30ef: startup date [Thu Feb 01 14:56:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31add175
14:56:58.764,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
14:56:58.809,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:56:58.902,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:56:59.021,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1b86e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:56:59.055,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eba5caea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:57:00.078,Tomcat initialized with port(s): 9091 (https)
14:57:00.092,Starting service [Tomcat]
14:57:00.094,Starting Servlet Engine: Apache Tomcat/8.5.27
14:57:00.384,Initializing Spring embedded WebApplicationContext
14:57:00.384,Root WebApplicationContext: initialization completed in 3736 ms
14:57:00.954,Mapping servlet: 'dispatcherServlet' to [/]
14:57:00.963,Mapping filter: 'metricsFilter' to: [/*]
14:57:00.964,Mapping filter: 'characterEncodingFilter' to: [/*]
14:57:00.964,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:57:00.965,Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:57:00.965,Mapping filter: 'requestContextFilter' to: [/*]
14:57:00.965,Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:57:00.965,Mapping filter: 'applicationContextIdFilter' to: [/*]
14:57:03.039,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
14:57:03.039,Adding discovered server 192.168.1.90:17000 to client view of cluster
14:57:03.226,Opened connection [connectionId{localValue:1, serverValue:624}] to 192.168.1.90:17000
14:57:03.231,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1687005}
14:57:03.234,Discovered cluster type of STANDALONE
14:57:03.667,Opened connection [connectionId{localValue:2, serverValue:625}] to 192.168.1.90:17000
14:57:04.004,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a2b7a35: startup date [Thu Feb 01 14:57:04 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@710b30ef
14:57:04.046,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:57:05.556,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
14:57:05.557,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
14:57:05.558,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
14:57:05.558,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
14:57:05.559,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
14:57:05.561,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
14:57:05.563,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
14:57:05.563,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
14:57:05.566,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
14:57:05.567,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
14:57:05.568,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
14:57:05.569,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
14:57:05.569,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
14:57:05.576,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
14:57:05.576,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
14:57:05.577,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
14:57:05.577,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
14:57:05.578,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
14:57:05.587,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
14:57:05.589,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
14:57:05.591,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
14:57:05.599,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:57:05.601,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:57:07.506,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:57:07.508,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.510,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.512,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.513,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:57:07.514,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.516,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:57:07.519,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:57:07.519,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.521,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.523,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.524,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:57:07.524,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:57:07.526,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.527,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.528,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
14:57:07.530,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:57:07.533,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.535,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:57:07.535,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.539,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:57:07.540,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:57:07.540,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:57:07.543,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:57:07.544,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:57:07.545,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:57:07.546,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:57:07.856,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
14:57:08.481,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@710b30ef: startup date [Thu Feb 01 14:56:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31add175
14:57:08.607,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:57:08.608,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:57:08.720,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:57:09.509,No URLs will be polled as dynamic configuration sources.
14:57:09.509,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:57:09.521,No URLs will be polled as dynamic configuration sources.
14:57:09.522,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:57:09.889,Registering beans for JMX exposure on startup
14:57:09.909,Bean with name 'environmentManager' has been autodetected for JMX exposure
14:57:09.913,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:57:09.915,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:57:09.917,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
14:57:09.920,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:57:09.921,Bean with name 'refreshScope' has been autodetected for JMX exposure
14:57:09.927,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:57:09.953,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
14:57:09.981,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:57:09.995,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:57:10.016,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=710b30ef,type=ConfigurationPropertiesRebinder]
14:57:10.025,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:57:10.027,Registering beans for JMX exposure on startup
14:57:10.419,Starting beans in phase 0
14:57:10.438,Setting initial instance status as: STARTING
14:57:10.539,Initializing Eureka in region us-east-1
14:57:10.757,Using JSON encoding codec LegacyJacksonJson
14:57:10.757,Using JSON decoding codec LegacyJacksonJson
14:57:10.986,Using XML encoding codec XStreamXml
14:57:10.991,Using XML decoding codec XStreamXml
14:57:11.529,Resolving eureka endpoints via configuration
14:57:11.973,Disable delta property : false
14:57:11.973,Single vip registry refresh property : null
14:57:11.973,Force full registry fetch : false
14:57:11.973,Application is null : false
14:57:11.973,Registered Applications size is zero : true
14:57:11.973,Application version is -1: true
14:57:11.973,Getting all instance registry info from the eureka server
14:57:12.400,The response status is 200
14:57:12.404,Starting heartbeat executor: renew interval is: 30
14:57:12.408,InstanceInfoReplicator onDemand update allowed rate per min is 4
14:57:12.414,Discovery Client initialized at timestamp 1517468232414 with initial instances count: 5
14:57:12.502,Registering application nhb-nbiot with eureka with status UP
14:57:12.503,Saw local status change event StatusChangeEvent [timestamp=1517468232503, current=UP, previous=STARTING]
14:57:12.561,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:57:12.578,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:57:12.615,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:57:12.618,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
14:57:12.719,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
14:57:12.747,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:57:12.761,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:57:12.769,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:57:12.775,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:57:12.810,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:57:12.827,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:57:12.838,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:57:12.846,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:57:12.852,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:57:12.858,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:57:12.867,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:57:12.869,Starting beans in phase 2147483647
14:57:12.869,Context refreshed
14:57:12.903,Found 1 custom documentation plugin(s)
14:57:13.063,Scanning for api listing references
14:57:13.405,Generating unique operation named: addUsingPOST_1
14:57:13.413,Generating unique operation named: deleteUsingPOST_1
14:57:13.424,Generating unique operation named: findByIdUsingPOST_1
14:57:13.432,Generating unique operation named: listUsingPOST_1
14:57:13.440,Generating unique operation named: modifyUsingPOST_1
14:57:13.457,Generating unique operation named: deleteUsingPOST_2
14:57:13.468,Generating unique operation named: findByIdUsingPOST_2
14:57:13.553,Initializing ProtocolHandler ["https-jsse-nio-9091"]
14:57:13.572,Starting ProtocolHandler ["https-jsse-nio-9091"]
14:57:13.711,Using a shared selector for servlet write/read
14:57:13.763,Tomcat started on port(s): 9091 (https)
14:57:13.765,Updating port to 9091
14:57:13.774,Started NhbNbApplication in 20.558 seconds (JVM running for 21.269)
14:57:34.935,Initializing Spring FrameworkServlet 'dispatcherServlet'
14:57:34.936,FrameworkServlet 'dispatcherServlet': initialization started
14:57:34.974,FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
14:57:56.368,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5572be31: startup date [Thu Feb 01 14:57:56 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@710b30ef
14:57:56.488,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:57:56.820,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:57:56.866,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
14:57:56.874,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:57:56.887,Using serverListUpdater PollingServerListUpdater
14:57:57.318,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:57:57.321,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000, xuyahui:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:xuyahui:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f58fb38
14:57:57.897,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:02:04.691,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@488d1cd7: startup date [Thu Feb 01 15:02:04 CST 2018]; root of context hierarchy
15:02:05.303,HV000001: Hibernate Validator 5.3.6.Final
15:02:05.343,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:05.433,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59e182e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:02:06.731,No active profile set, falling back to default profiles: default
15:02:06.758,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24e8de5c: startup date [Thu Feb 01 15:02:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@488d1cd7
15:02:08.974,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
15:02:09.015,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:09.097,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:02:09.207,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6ff42627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:02:09.244,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59e182e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:02:10.264,Tomcat initialized with port(s): 9091 (https)
15:02:10.276,Starting service [Tomcat]
15:02:10.277,Starting Servlet Engine: Apache Tomcat/8.5.27
15:02:10.503,Initializing Spring embedded WebApplicationContext
15:02:10.505,Root WebApplicationContext: initialization completed in 3747 ms
15:02:10.986,Mapping servlet: 'dispatcherServlet' to [/]
15:02:10.998,Mapping filter: 'metricsFilter' to: [/*]
15:02:10.999,Mapping filter: 'characterEncodingFilter' to: [/*]
15:02:10.999,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:02:10.999,Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:02:10.999,Mapping filter: 'requestContextFilter' to: [/*]
15:02:10.999,Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:02:11.000,Mapping filter: 'applicationContextIdFilter' to: [/*]
15:02:12.974,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
15:02:12.975,Adding discovered server 192.168.1.90:17000 to client view of cluster
15:02:13.127,Opened connection [connectionId{localValue:1, serverValue:630}] to 192.168.1.90:17000
15:02:13.135,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=3358884}
15:02:13.151,Discovered cluster type of STANDALONE
15:02:13.581,Opened connection [connectionId{localValue:2, serverValue:631}] to 192.168.1.90:17000
15:02:13.932,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@30c01c37: startup date [Thu Feb 01 15:02:13 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24e8de5c
15:02:13.978,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:15.468,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
15:02:15.470,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
15:02:15.471,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
15:02:15.471,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
15:02:15.471,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
15:02:15.473,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
15:02:15.474,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
15:02:15.475,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
15:02:15.477,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
15:02:15.478,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
15:02:15.478,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
15:02:15.479,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
15:02:15.479,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
15:02:15.484,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
15:02:15.484,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
15:02:15.485,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
15:02:15.485,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
15:02:15.486,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
15:02:15.494,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
15:02:15.496,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
15:02:15.497,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
15:02:15.504,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:02:15.505,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:02:18.243,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.245,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.246,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:02:18.247,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:02:18.248,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.249,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.250,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:02:18.253,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:02:18.254,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:02:18.256,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.257,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.258,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.259,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
15:02:18.259,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:02:18.260,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:02:18.261,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:02:18.262,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.264,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:02:18.264,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.267,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:02:18.270,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:02:18.270,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.272,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:02:18.274,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:02:18.274,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.275,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:02:18.275,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:02:18.532,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15:02:19.035,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24e8de5c: startup date [Thu Feb 01 15:02:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@488d1cd7
15:02:19.173,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:02:19.173,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:02:19.288,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:02:20.084,No URLs will be polled as dynamic configuration sources.
15:02:20.085,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:02:20.099,No URLs will be polled as dynamic configuration sources.
15:02:20.100,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:02:21.032,Registering beans for JMX exposure on startup
15:02:21.056,Bean with name 'environmentManager' has been autodetected for JMX exposure
15:02:21.062,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:02:21.063,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:02:21.065,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
15:02:21.067,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:02:21.069,Bean with name 'refreshScope' has been autodetected for JMX exposure
15:02:21.074,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:02:21.102,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
15:02:21.127,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:02:21.140,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:02:21.165,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=24e8de5c,type=ConfigurationPropertiesRebinder]
15:02:21.174,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:02:21.180,Registering beans for JMX exposure on startup
15:02:21.544,Starting beans in phase 0
15:02:21.561,Setting initial instance status as: STARTING
15:02:21.662,Initializing Eureka in region us-east-1
15:02:21.885,Using JSON encoding codec LegacyJacksonJson
15:02:21.885,Using JSON decoding codec LegacyJacksonJson
15:02:22.139,Using XML encoding codec XStreamXml
15:02:22.139,Using XML decoding codec XStreamXml
15:02:22.607,Resolving eureka endpoints via configuration
15:02:23.051,Disable delta property : false
15:02:23.052,Single vip registry refresh property : null
15:02:23.052,Force full registry fetch : false
15:02:23.052,Application is null : false
15:02:23.052,Registered Applications size is zero : true
15:02:23.052,Application version is -1: true
15:02:23.053,Getting all instance registry info from the eureka server
15:02:23.373,The response status is 200
15:02:23.376,Starting heartbeat executor: renew interval is: 30
15:02:23.381,InstanceInfoReplicator onDemand update allowed rate per min is 4
15:02:23.386,Discovery Client initialized at timestamp 1517468543385 with initial instances count: 4
15:02:23.456,Registering application nhb-nbiot with eureka with status UP
15:02:23.457,Saw local status change event StatusChangeEvent [timestamp=1517468543457, current=UP, previous=STARTING]
15:02:23.470,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:02:23.519,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:02:23.533,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:02:23.537,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:02:23.542,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:02:23.550,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
15:02:23.552,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:02:23.561,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:02:23.566,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:02:23.607,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:02:23.618,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:02:23.622,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:02:23.626,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:02:23.630,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:02:23.634,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:02:23.636,Starting beans in phase 2147483647
15:02:23.636,Context refreshed
15:02:23.638,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
15:02:23.665,Found 1 custom documentation plugin(s)
15:02:23.784,Scanning for api listing references
15:02:24.142,Generating unique operation named: addUsingPOST_1
15:02:24.156,Generating unique operation named: deleteUsingPOST_1
15:02:24.169,Generating unique operation named: findByIdUsingPOST_1
15:02:24.181,Generating unique operation named: listUsingPOST_1
15:02:24.194,Generating unique operation named: modifyUsingPOST_1
15:02:24.227,Generating unique operation named: deleteUsingPOST_2
15:02:24.240,Generating unique operation named: findByIdUsingPOST_2
15:02:24.337,Initializing ProtocolHandler ["https-jsse-nio-9091"]
15:02:24.361,Starting ProtocolHandler ["https-jsse-nio-9091"]
15:02:24.550,Using a shared selector for servlet write/read
15:02:24.609,Tomcat started on port(s): 9091 (https)
15:02:24.611,Updating port to 9091
15:02:24.619,Started NhbNbApplication in 21.953 seconds (JVM running for 22.695)
15:02:41.643,Initializing Spring FrameworkServlet 'dispatcherServlet'
15:02:41.643,FrameworkServlet 'dispatcherServlet': initialization started
15:02:41.690,FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
15:02:48.820,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b5a997d: startup date [Thu Feb 01 15:02:48 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24e8de5c
15:02:49.016,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:49.321,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:02:49.366,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
15:02:49.381,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:02:49.392,Using serverListUpdater PollingServerListUpdater
15:02:49.423,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:02:49.426,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@362a8029
15:02:50.397,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:07:23.063,Resolving eureka endpoints via configuration
15:11:44.769,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@63f259c3: startup date [Thu Feb 01 15:11:44 CST 2018]; root of context hierarchy
15:11:45.443,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:11:45.548,HV000001: Hibernate Validator 5.3.6.Final
15:11:45.563,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4535f7b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:11:46.846,No active profile set, falling back to default profiles: default
15:11:46.879,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@695a69a1: startup date [Thu Feb 01 15:11:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@63f259c3
15:11:48.990,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
15:11:49.033,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:11:49.122,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:11:49.219,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5b489af4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:11:49.262,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4535f7b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:11:50.347,Tomcat initialized with port(s): 9091 (https)
15:11:50.362,Starting service [Tomcat]
15:11:50.365,Starting Servlet Engine: Apache Tomcat/8.5.27
15:11:50.593,Initializing Spring embedded WebApplicationContext
15:11:50.594,Root WebApplicationContext: initialization completed in 3715 ms
15:11:51.092,Mapping servlet: 'dispatcherServlet' to [/]
15:11:51.106,Mapping filter: 'metricsFilter' to: [/*]
15:11:51.106,Mapping filter: 'characterEncodingFilter' to: [/*]
15:11:51.107,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:11:51.107,Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:11:51.107,Mapping filter: 'requestContextFilter' to: [/*]
15:11:51.107,Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:11:51.107,Mapping filter: 'applicationContextIdFilter' to: [/*]
15:11:53.044,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
15:11:53.044,Adding discovered server 192.168.1.90:17000 to client view of cluster
15:11:53.218,Opened connection [connectionId{localValue:1, serverValue:634}] to 192.168.1.90:17000
15:11:53.222,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2532938}
15:11:53.225,Discovered cluster type of STANDALONE
15:11:53.578,Opened connection [connectionId{localValue:2, serverValue:635}] to 192.168.1.90:17000
15:11:53.877,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@145a821d: startup date [Thu Feb 01 15:11:53 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@695a69a1
15:11:53.916,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:11:55.706,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
15:11:55.708,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
15:11:55.708,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
15:11:55.709,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
15:11:55.710,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
15:11:55.711,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
15:11:55.713,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
15:11:55.714,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
15:11:55.718,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
15:11:55.719,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
15:11:55.719,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
15:11:55.719,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
15:11:55.720,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
15:11:55.725,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
15:11:55.726,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
15:11:55.726,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
15:11:55.727,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
15:11:55.727,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
15:11:55.734,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
15:11:55.735,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
15:11:55.737,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
15:11:55.743,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:11:55.745,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:11:57.558,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.559,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:11:57.560,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:11:57.561,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.563,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.565,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:11:57.569,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:11:57.570,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:11:57.570,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.572,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.573,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.574,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
15:11:57.576,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.577,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:11:57.578,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.580,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:11:57.581,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.583,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:11:57.584,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:11:57.586,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:11:57.586,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:11:57.588,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.589,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.592,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:11:57.592,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:11:57.593,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:11:57.594,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:11:57.879,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15:11:58.486,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@695a69a1: startup date [Thu Feb 01 15:11:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@63f259c3
15:11:58.599,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:11:58.599,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:11:58.702,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:11:59.343,No URLs will be polled as dynamic configuration sources.
15:11:59.343,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:11:59.355,No URLs will be polled as dynamic configuration sources.
15:11:59.356,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:11:59.692,Registering beans for JMX exposure on startup
15:11:59.713,Bean with name 'environmentManager' has been autodetected for JMX exposure
15:11:59.718,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:11:59.719,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:11:59.721,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
15:11:59.722,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:11:59.724,Bean with name 'refreshScope' has been autodetected for JMX exposure
15:11:59.729,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:11:59.757,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
15:11:59.781,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:11:59.796,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:11:59.822,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=695a69a1,type=ConfigurationPropertiesRebinder]
15:11:59.830,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:11:59.831,Registering beans for JMX exposure on startup
15:12:00.576,Starting beans in phase 0
15:12:00.589,Setting initial instance status as: STARTING
15:12:00.661,Initializing Eureka in region us-east-1
15:12:00.817,Using JSON encoding codec LegacyJacksonJson
15:12:00.817,Using JSON decoding codec LegacyJacksonJson
15:12:01.022,Using XML encoding codec XStreamXml
15:12:01.022,Using XML decoding codec XStreamXml
15:12:01.452,Resolving eureka endpoints via configuration
15:12:01.791,Disable delta property : false
15:12:01.791,Single vip registry refresh property : null
15:12:01.791,Force full registry fetch : false
15:12:01.792,Application is null : false
15:12:01.792,Registered Applications size is zero : true
15:12:01.792,Application version is -1: true
15:12:01.792,Getting all instance registry info from the eureka server
15:12:02.059,The response status is 200
15:12:02.062,Starting heartbeat executor: renew interval is: 30
15:12:02.068,InstanceInfoReplicator onDemand update allowed rate per min is 4
15:12:02.077,Discovery Client initialized at timestamp 1517469122076 with initial instances count: 4
15:12:02.135,Registering application nhb-nbiot with eureka with status UP
15:12:02.136,Saw local status change event StatusChangeEvent [timestamp=1517469122136, current=UP, previous=STARTING]
15:12:02.143,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:12:02.156,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:12:02.179,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:12:02.184,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:12:02.188,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:12:02.192,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:12:02.197,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:12:02.201,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:12:02.206,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
15:12:02.216,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:12:02.220,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:12:02.224,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:12:02.228,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:12:02.232,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:12:02.236,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:12:02.239,Starting beans in phase 2147483647
15:12:02.239,Context refreshed
15:12:02.275,Found 1 custom documentation plugin(s)
15:12:02.299,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
15:12:02.404,Scanning for api listing references
15:12:02.696,Generating unique operation named: addUsingPOST_1
15:12:02.704,Generating unique operation named: deleteUsingPOST_1
15:12:02.712,Generating unique operation named: findByIdUsingPOST_1
15:12:02.720,Generating unique operation named: listUsingPOST_1
15:12:02.728,Generating unique operation named: modifyUsingPOST_1
15:12:02.744,Generating unique operation named: deleteUsingPOST_2
15:12:02.754,Generating unique operation named: findByIdUsingPOST_2
15:12:02.828,Initializing ProtocolHandler ["https-jsse-nio-9091"]
15:12:02.851,Starting ProtocolHandler ["https-jsse-nio-9091"]
15:12:02.974,Using a shared selector for servlet write/read
15:12:03.052,Tomcat started on port(s): 9091 (https)
15:12:03.056,Updating port to 9091
15:12:03.065,Started NhbNbApplication in 19.852 seconds (JVM running for 20.734)
15:12:58.723,Initializing Spring FrameworkServlet 'dispatcherServlet'
15:12:58.724,FrameworkServlet 'dispatcherServlet': initialization started
15:12:58.831,FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
15:13:10.204,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce664b7: startup date [Thu Feb 01 15:13:10 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@695a69a1
15:13:10.580,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:13:11.296,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:13:11.376,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
15:13:11.391,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:13:11.416,Using serverListUpdater PollingServerListUpdater
15:13:11.460,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:13:11.473,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1c7b9112
15:13:12.837,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:17:01.799,Resolving eureka endpoints via configuration
15:21:37.769,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc: startup date [Thu Feb 01 15:21:37 CST 2018]; root of context hierarchy
15:21:38.399,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:21:38.460,HV000001: Hibernate Validator 5.3.6.Final
15:21:38.495,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a985533a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:21:40.013,No active profile set, falling back to default profiles: default
15:21:40.044,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1c0397: startup date [Thu Feb 01 15:21:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc
15:21:42.394,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
15:21:42.435,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:21:42.519,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:21:42.645,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$bf97f67e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:21:42.682,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a985533a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:21:43.653,Tomcat initialized with port(s): 9091 (https)
15:21:43.667,Starting service [Tomcat]
15:21:43.669,Starting Servlet Engine: Apache Tomcat/8.5.27
15:21:43.975,Initializing Spring embedded WebApplicationContext
15:21:43.992,Root WebApplicationContext: initialization completed in 3949 ms
15:21:44.478,Mapping servlet: 'dispatcherServlet' to [/]
15:21:44.488,Mapping filter: 'metricsFilter' to: [/*]
15:21:44.489,Mapping filter: 'characterEncodingFilter' to: [/*]
15:21:44.489,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:21:44.489,Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:21:44.489,Mapping filter: 'requestContextFilter' to: [/*]
15:21:44.489,Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:21:44.490,Mapping filter: 'applicationContextIdFilter' to: [/*]
15:21:46.453,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
15:21:46.453,Adding discovered server 192.168.1.90:17000 to client view of cluster
15:21:46.602,Opened connection [connectionId{localValue:1, serverValue:638}] to 192.168.1.90:17000
15:21:46.606,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1512525}
15:21:46.614,Discovered cluster type of STANDALONE
15:21:46.967,Opened connection [connectionId{localValue:2, serverValue:639}] to 192.168.1.90:17000
15:21:47.255,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@79b63325: startup date [Thu Feb 01 15:21:47 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1c0397
15:21:47.291,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:21:48.669,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
15:21:48.671,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
15:21:48.671,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
15:21:48.672,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
15:21:48.672,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
15:21:48.675,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
15:21:48.676,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
15:21:48.677,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
15:21:48.680,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
15:21:48.680,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
15:21:48.680,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
15:21:48.681,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
15:21:48.681,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
15:21:48.687,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
15:21:48.687,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
15:21:48.688,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
15:21:48.689,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
15:21:48.690,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
15:21:48.698,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
15:21:48.700,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
15:21:48.701,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
15:21:48.709,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:21:48.710,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:21:50.507,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:21:50.510,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:21:50.511,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:21:50.512,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:21:50.514,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:21:50.515,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.517,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.519,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:21:50.519,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:21:50.521,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.522,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.523,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.525,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.526,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
15:21:50.529,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:21:50.530,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.531,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.534,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:21:50.535,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:21:50.536,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.537,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.539,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:21:50.541,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:21:50.542,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.544,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:21:50.545,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:21:50.546,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:21:50.915,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15:21:51.566,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1c0397: startup date [Thu Feb 01 15:21:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc
15:21:51.727,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:21:51.728,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:21:51.840,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:21:52.522,No URLs will be polled as dynamic configuration sources.
15:21:52.523,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:21:52.537,No URLs will be polled as dynamic configuration sources.
15:21:52.537,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:21:52.902,Registering beans for JMX exposure on startup
15:21:52.925,Bean with name 'environmentManager' has been autodetected for JMX exposure
15:21:52.930,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:21:52.931,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:21:52.933,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
15:21:52.936,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:21:52.937,Bean with name 'refreshScope' has been autodetected for JMX exposure
15:21:52.942,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:21:52.969,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
15:21:52.999,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:21:53.011,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:21:53.032,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b1c0397,type=ConfigurationPropertiesRebinder]
15:21:53.040,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:21:53.042,Registering beans for JMX exposure on startup
15:21:53.409,Starting beans in phase 0
15:21:53.425,Setting initial instance status as: STARTING
15:21:53.502,Initializing Eureka in region us-east-1
15:21:53.668,Using JSON encoding codec LegacyJacksonJson
15:21:53.668,Using JSON decoding codec LegacyJacksonJson
15:21:53.888,Using XML encoding codec XStreamXml
15:21:53.889,Using XML decoding codec XStreamXml
15:21:54.333,Resolving eureka endpoints via configuration
15:21:54.741,Disable delta property : false
15:21:54.742,Single vip registry refresh property : null
15:21:54.742,Force full registry fetch : false
15:21:54.742,Application is null : false
15:21:54.742,Registered Applications size is zero : true
15:21:54.742,Application version is -1: true
15:21:54.742,Getting all instance registry info from the eureka server
15:21:55.034,The response status is 200
15:21:55.037,Starting heartbeat executor: renew interval is: 30
15:21:55.044,InstanceInfoReplicator onDemand update allowed rate per min is 4
15:21:55.049,Discovery Client initialized at timestamp 1517469715049 with initial instances count: 4
15:21:55.114,Registering application nhb-nbiot with eureka with status UP
15:21:55.115,Saw local status change event StatusChangeEvent [timestamp=1517469715115, current=UP, previous=STARTING]
15:21:55.117,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
15:21:55.128,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:21:55.156,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:21:55.170,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:21:55.174,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:21:55.178,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:21:55.188,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:21:55.193,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:21:55.197,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:21:55.202,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
15:21:55.209,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:21:55.214,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:21:55.219,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:21:55.223,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:21:55.227,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:21:55.232,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:21:55.234,Starting beans in phase 2147483647
15:21:55.234,Context refreshed
15:21:55.263,Found 1 custom documentation plugin(s)
15:21:55.376,Scanning for api listing references
15:21:55.653,Generating unique operation named: addUsingPOST_1
15:21:55.662,Generating unique operation named: deleteUsingPOST_1
15:21:55.671,Generating unique operation named: findByIdUsingPOST_1
15:21:55.679,Generating unique operation named: listUsingPOST_1
15:21:55.687,Generating unique operation named: modifyUsingPOST_1
15:21:55.702,Generating unique operation named: deleteUsingPOST_2
15:21:55.713,Generating unique operation named: findByIdUsingPOST_2
15:21:55.808,Initializing ProtocolHandler ["https-jsse-nio-9091"]
15:21:55.828,Starting ProtocolHandler ["https-jsse-nio-9091"]
15:21:55.952,Using a shared selector for servlet write/read
15:21:56.037,Tomcat started on port(s): 9091 (https)
15:21:56.040,Updating port to 9091
15:21:56.052,Started NhbNbApplication in 20.064 seconds (JVM running for 20.922)
15:22:12.768,Initializing Spring FrameworkServlet 'dispatcherServlet'
15:22:12.768,FrameworkServlet 'dispatcherServlet': initialization started
15:22:12.802,FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
15:22:18.162,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@55129cc6: startup date [Thu Feb 01 15:22:18 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1c0397
15:22:18.330,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:22:18.766,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:19.140,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
15:22:19.148,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:22:19.163,Using serverListUpdater PollingServerListUpdater
15:22:19.193,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:19.196,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6d8f95e
15:22:20.169,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:25:51.715,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@600b90df: startup date [Thu Feb 01 15:25:51 CST 2018]; root of context hierarchy
15:25:52.322,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:25:52.401,HV000001: Hibernate Validator 5.3.6.Final
15:25:52.437,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc736ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:25:53.669,No active profile set, falling back to default profiles: default
15:25:53.697,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7bc9e6ab: startup date [Thu Feb 01 15:25:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@600b90df
15:25:55.784,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
15:25:55.829,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:25:55.917,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:25:56.016,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$25d9d9ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:25:56.053,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc736ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:25:57.083,Tomcat initialized with port(s): 9091 (https)
15:25:57.096,Starting service [Tomcat]
15:25:57.098,Starting Servlet Engine: Apache Tomcat/8.5.27
15:25:57.353,Initializing Spring embedded WebApplicationContext
15:25:57.354,Root WebApplicationContext: initialization completed in 3657 ms
15:25:57.844,Mapping servlet: 'dispatcherServlet' to [/]
15:25:57.852,Mapping filter: 'metricsFilter' to: [/*]
15:25:57.852,Mapping filter: 'characterEncodingFilter' to: [/*]
15:25:57.853,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:25:57.853,Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:25:57.853,Mapping filter: 'requestContextFilter' to: [/*]
15:25:57.853,Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:25:57.853,Mapping filter: 'applicationContextIdFilter' to: [/*]
15:25:59.831,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
15:25:59.832,Adding discovered server 192.168.1.90:17000 to client view of cluster
15:25:59.987,Opened connection [connectionId{localValue:1, serverValue:640}] to 192.168.1.90:17000
15:25:59.991,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1956558}
15:25:59.993,Discovered cluster type of STANDALONE
15:26:00.494,Opened connection [connectionId{localValue:2, serverValue:641}] to 192.168.1.90:17000
15:26:00.750,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5a48d186: startup date [Thu Feb 01 15:26:00 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7bc9e6ab
15:26:00.793,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:26:02.264,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
15:26:02.266,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
15:26:02.266,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
15:26:02.267,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
15:26:02.267,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
15:26:02.271,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
15:26:02.273,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
15:26:02.274,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
15:26:02.277,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
15:26:02.278,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
15:26:02.279,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
15:26:02.280,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
15:26:02.280,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
15:26:02.285,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
15:26:02.286,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
15:26:02.286,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
15:26:02.287,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
15:26:02.287,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
15:26:02.295,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
15:26:02.297,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
15:26:02.298,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
15:26:02.305,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:26:02.306,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:26:04.226,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:26:04.228,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.229,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.232,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:26:04.232,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.233,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:26:04.235,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.236,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:26:04.237,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:26:04.237,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:26:04.238,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.240,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:26:04.241,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.242,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.245,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:26:04.247,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:26:04.248,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
15:26:04.249,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.252,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:26:04.253,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:26:04.253,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.254,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:26:04.255,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.256,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.257,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:26:04.258,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:26:04.259,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:26:04.664,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15:26:05.335,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7bc9e6ab: startup date [Thu Feb 01 15:25:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@600b90df
15:26:05.472,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:26:05.472,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:26:05.576,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:26:06.284,No URLs will be polled as dynamic configuration sources.
15:26:06.284,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:26:06.296,No URLs will be polled as dynamic configuration sources.
15:26:06.297,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:26:06.661,Registering beans for JMX exposure on startup
15:26:06.680,Bean with name 'environmentManager' has been autodetected for JMX exposure
15:26:06.684,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:26:06.685,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:26:06.686,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
15:26:06.687,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:26:06.688,Bean with name 'refreshScope' has been autodetected for JMX exposure
15:26:06.694,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:26:06.719,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
15:26:06.752,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:26:06.764,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:26:06.791,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7bc9e6ab,type=ConfigurationPropertiesRebinder]
15:26:06.800,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:26:06.802,Registering beans for JMX exposure on startup
15:26:07.241,Starting beans in phase 0
15:26:07.258,Setting initial instance status as: STARTING
15:26:07.334,Initializing Eureka in region us-east-1
15:26:07.690,Using JSON encoding codec LegacyJacksonJson
15:26:07.691,Using JSON decoding codec LegacyJacksonJson
15:26:07.934,Using XML encoding codec XStreamXml
15:26:07.934,Using XML decoding codec XStreamXml
15:26:08.398,Resolving eureka endpoints via configuration
15:26:08.849,Disable delta property : false
15:26:08.850,Single vip registry refresh property : null
15:26:08.850,Force full registry fetch : false
15:26:08.850,Application is null : false
15:26:08.850,Registered Applications size is zero : true
15:26:08.850,Application version is -1: true
15:26:08.850,Getting all instance registry info from the eureka server
15:26:09.144,The response status is 200
15:26:09.147,Starting heartbeat executor: renew interval is: 30
15:26:09.155,InstanceInfoReplicator onDemand update allowed rate per min is 4
15:26:09.161,Discovery Client initialized at timestamp 1517469969161 with initial instances count: 4
15:26:09.227,Registering application nhb-nbiot with eureka with status UP
15:26:09.229,Saw local status change event StatusChangeEvent [timestamp=1517469969229, current=UP, previous=STARTING]
15:26:09.237,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:26:09.251,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:26:09.274,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:26:09.277,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
15:26:09.286,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:26:09.296,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:26:09.302,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:26:09.306,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:26:09.311,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:26:09.326,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:26:09.330,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:26:09.334,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:26:09.340,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:26:09.362,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:26:09.366,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:26:09.379,Starting beans in phase 2147483647
15:26:09.380,Context refreshed
15:26:09.392,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
15:26:09.447,Found 1 custom documentation plugin(s)
15:26:09.639,Scanning for api listing references
15:26:09.963,Generating unique operation named: addUsingPOST_1
15:26:09.971,Generating unique operation named: deleteUsingPOST_1
15:26:09.979,Generating unique operation named: findByIdUsingPOST_1
15:26:09.987,Generating unique operation named: listUsingPOST_1
15:26:09.997,Generating unique operation named: modifyUsingPOST_1
15:26:10.023,Generating unique operation named: deleteUsingPOST_2
15:26:10.034,Generating unique operation named: findByIdUsingPOST_2
15:26:10.121,Initializing ProtocolHandler ["https-jsse-nio-9091"]
15:26:10.154,Starting ProtocolHandler ["https-jsse-nio-9091"]
15:26:10.293,Using a shared selector for servlet write/read
15:26:10.358,Tomcat started on port(s): 9091 (https)
15:26:10.360,Updating port to 9091
15:26:10.369,Started NhbNbApplication in 20.256 seconds (JVM running for 21.161)
15:26:52.969,Initializing Spring FrameworkServlet 'dispatcherServlet'
15:26:52.969,FrameworkServlet 'dispatcherServlet': initialization started
15:26:53.009,FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
15:27:28.507,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@24f3708b: startup date [Thu Feb 01 15:27:28 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7bc9e6ab
15:27:28.620,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:27:29.297,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:27:29.335,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
15:27:29.345,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:27:29.359,Using serverListUpdater PollingServerListUpdater
15:27:29.393,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:27:29.397,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@569f7655
15:27:30.366,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:31:08.858,Resolving eureka endpoints via configuration
15:36:08.864,Resolving eureka endpoints via configuration
15:41:08.870,Resolving eureka endpoints via configuration
15:41:33.115,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c8c9a05: startup date [Thu Feb 01 15:41:33 CST 2018]; root of context hierarchy
15:41:33.734,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:41:33.832,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e80037f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:41:33.843,HV000001: Hibernate Validator 5.3.6.Final
15:41:35.202,No active profile set, falling back to default profiles: default
15:41:35.230,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7: startup date [Thu Feb 01 15:41:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c8c9a05
15:41:37.462,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
15:41:37.502,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:41:37.597,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:41:37.860,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fe12db3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:41:37.899,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e80037f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:41:39.025,Tomcat initialized with port(s): 9091 (https)
15:41:39.039,Starting service [Tomcat]
15:41:39.041,Starting Servlet Engine: Apache Tomcat/8.5.27
15:41:39.283,Initializing Spring embedded WebApplicationContext
15:41:39.284,Root WebApplicationContext: initialization completed in 4054 ms
15:41:39.800,Mapping servlet: 'dispatcherServlet' to [/]
15:41:39.814,Mapping filter: 'metricsFilter' to: [/*]
15:41:39.815,Mapping filter: 'characterEncodingFilter' to: [/*]
15:41:39.816,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:41:39.816,Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:41:39.816,Mapping filter: 'requestContextFilter' to: [/*]
15:41:39.816,Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:41:39.816,Mapping filter: 'applicationContextIdFilter' to: [/*]
15:41:41.882,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
15:41:41.882,Adding discovered server 192.168.1.90:17000 to client view of cluster
15:41:42.031,Opened connection [connectionId{localValue:1, serverValue:642}] to 192.168.1.90:17000
15:41:42.036,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2367641}
15:41:42.038,Discovered cluster type of STANDALONE
15:41:42.412,Opened connection [connectionId{localValue:2, serverValue:643}] to 192.168.1.90:17000
15:41:42.697,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2e8b24a1: startup date [Thu Feb 01 15:41:42 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7
15:41:42.734,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:41:44.169,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
15:41:44.172,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
15:41:44.173,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
15:41:44.173,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
15:41:44.174,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
15:41:44.176,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
15:41:44.176,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
15:41:44.177,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
15:41:44.179,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
15:41:44.179,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
15:41:44.180,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
15:41:44.180,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
15:41:44.181,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
15:41:44.185,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
15:41:44.185,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
15:41:44.186,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
15:41:44.186,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
15:41:44.186,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
15:41:44.193,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
15:41:44.195,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
15:41:44.197,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
15:41:44.205,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:41:44.207,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:41:46.179,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:41:46.182,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.183,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.185,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:41:46.186,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:41:46.187,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:41:46.190,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.191,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.193,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.194,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:41:46.194,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:41:46.195,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.196,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:41:46.197,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:41:46.198,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:41:46.199,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.200,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
15:41:46.201,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.202,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.204,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:41:46.207,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:41:46.216,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:41:46.218,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:41:46.219,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.220,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.223,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:41:46.223,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:41:46.505,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15:41:46.984,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7: startup date [Thu Feb 01 15:41:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c8c9a05
15:41:47.110,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:41:47.110,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:41:47.219,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:41:48.026,No URLs will be polled as dynamic configuration sources.
15:41:48.026,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:41:48.039,No URLs will be polled as dynamic configuration sources.
15:41:48.039,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:41:48.423,Registering beans for JMX exposure on startup
15:41:48.443,Bean with name 'environmentManager' has been autodetected for JMX exposure
15:41:48.446,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:41:48.447,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:41:48.448,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
15:41:48.449,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:41:48.450,Bean with name 'refreshScope' has been autodetected for JMX exposure
15:41:48.455,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:41:48.476,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
15:41:48.498,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:41:48.510,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:41:48.535,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3eba57a7,type=ConfigurationPropertiesRebinder]
15:41:48.544,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:41:48.546,Registering beans for JMX exposure on startup
15:41:48.827,Starting beans in phase 0
15:41:48.840,Setting initial instance status as: STARTING
15:41:48.906,Initializing Eureka in region us-east-1
15:41:49.067,Using JSON encoding codec LegacyJacksonJson
15:41:49.067,Using JSON decoding codec LegacyJacksonJson
15:41:49.275,Using XML encoding codec XStreamXml
15:41:49.275,Using XML decoding codec XStreamXml
15:41:49.703,Resolving eureka endpoints via configuration
15:41:50.116,Disable delta property : false
15:41:50.116,Single vip registry refresh property : null
15:41:50.116,Force full registry fetch : false
15:41:50.116,Application is null : false
15:41:50.116,Registered Applications size is zero : true
15:41:50.116,Application version is -1: true
15:41:50.118,Getting all instance registry info from the eureka server
15:41:50.389,The response status is 200
15:41:50.392,Starting heartbeat executor: renew interval is: 30
15:41:50.397,InstanceInfoReplicator onDemand update allowed rate per min is 4
15:41:50.404,Discovery Client initialized at timestamp 1517470910403 with initial instances count: 4
15:41:50.478,Registering application nhb-nbiot with eureka with status UP
15:41:50.479,Saw local status change event StatusChangeEvent [timestamp=1517470910479, current=UP, previous=STARTING]
15:41:50.486,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:41:50.498,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:41:50.527,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:41:50.531,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:41:50.537,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:41:50.541,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:41:50.545,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:41:50.549,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:41:50.556,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
15:41:50.623,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:41:50.629,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:41:50.638,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:41:50.638,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
15:41:50.643,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:41:50.647,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:41:50.650,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:41:50.652,Starting beans in phase 2147483647
15:41:50.652,Context refreshed
15:41:50.678,Found 1 custom documentation plugin(s)
15:41:50.801,Scanning for api listing references
15:41:51.096,Generating unique operation named: addUsingPOST_1
15:41:51.104,Generating unique operation named: deleteUsingPOST_1
15:41:51.115,Generating unique operation named: findByIdUsingPOST_1
15:41:51.124,Generating unique operation named: listUsingPOST_1
15:41:51.131,Generating unique operation named: modifyUsingPOST_1
15:41:51.148,Generating unique operation named: deleteUsingPOST_2
15:41:51.158,Generating unique operation named: findByIdUsingPOST_2
15:41:51.246,Initializing ProtocolHandler ["https-jsse-nio-9091"]
15:41:51.267,Starting ProtocolHandler ["https-jsse-nio-9091"]
15:41:51.391,Using a shared selector for servlet write/read
15:41:51.479,Tomcat started on port(s): 9091 (https)
15:41:51.485,Updating port to 9091
15:41:51.495,Started NhbNbApplication in 20.047 seconds (JVM running for 20.856)
15:43:07.682,Initializing Spring FrameworkServlet 'dispatcherServlet'
15:43:07.682,FrameworkServlet 'dispatcherServlet': initialization started
15:43:07.720,FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
15:43:15.379,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d12d87b: startup date [Thu Feb 01 15:43:15 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7
15:43:15.455,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:43:16.098,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:43:16.144,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
15:43:16.154,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:43:16.165,Using serverListUpdater PollingServerListUpdater
15:43:16.198,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:43:16.201,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@63b12712
15:43:17.173,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:46:50.125,Resolving eureka endpoints via configuration
15:51:50.131,Resolving eureka endpoints via configuration
15:56:50.136,Resolving eureka endpoints via configuration
16:28:16.185,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b: startup date [Thu Feb 01 16:28:16 CST 2018]; root of context hierarchy
16:28:16.765,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:28:16.874,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3621fe7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:28:16.982,HV000001: Hibernate Validator 5.3.6.Final
16:28:18.303,No active profile set, falling back to default profiles: default
16:28:18.329,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14bae047: startup date [Thu Feb 01 16:28:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b
16:28:20.849,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
16:28:20.904,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:28:21.026,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:28:21.211,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4c34a1c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:28:21.259,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3621fe7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:28:22.647,Tomcat initialized with port(s): 9091 (https)
16:28:22.665,Starting service [Tomcat]
16:28:22.667,Starting Servlet Engine: Apache Tomcat/8.5.27
16:28:22.902,Initializing Spring embedded WebApplicationContext
16:28:22.903,Root WebApplicationContext: initialization completed in 4574 ms
16:28:23.566,Mapping servlet: 'dispatcherServlet' to [/]
16:28:23.577,Mapping filter: 'metricsFilter' to: [/*]
16:28:23.580,Mapping filter: 'characterEncodingFilter' to: [/*]
16:28:23.580,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:28:23.581,Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:28:23.581,Mapping filter: 'requestContextFilter' to: [/*]
16:28:23.581,Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:28:23.581,Mapping filter: 'applicationContextIdFilter' to: [/*]
16:28:26.034,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
16:28:26.035,Adding discovered server 192.168.1.90:17000 to client view of cluster
16:28:26.222,Opened connection [connectionId{localValue:1, serverValue:646}] to 192.168.1.90:17000
16:28:26.226,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2314162}
16:28:26.228,Discovered cluster type of STANDALONE
16:28:26.650,Opened connection [connectionId{localValue:2, serverValue:647}] to 192.168.1.90:17000
16:28:27.024,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7757a37f: startup date [Thu Feb 01 16:28:27 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14bae047
16:28:27.083,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:28:29.763,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
16:28:29.764,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
16:28:29.765,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
16:28:29.765,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
16:28:29.765,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
16:28:29.766,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
16:28:29.767,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
16:28:29.767,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
16:28:29.769,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
16:28:29.769,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
16:28:29.769,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
16:28:29.770,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
16:28:29.770,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
16:28:29.775,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
16:28:29.777,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
16:28:29.777,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
16:28:29.784,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
16:28:29.785,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
16:28:29.815,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
16:28:29.818,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
16:28:29.821,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
16:28:29.831,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:28:29.832,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:28:33.591,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:28:33.592,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:28:33.593,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:28:33.593,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:28:33.594,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:28:33.596,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.596,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:28:33.597,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.599,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:28:33.600,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.600,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.602,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:28:33.603,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:28:33.604,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.606,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:28:33.608,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.609,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.611,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:28:33.615,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:28:33.616,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:28:33.616,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.617,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.618,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:28:33.618,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.619,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
16:28:33.620,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.621,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:28:33.928,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
16:28:34.372,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14bae047: startup date [Thu Feb 01 16:28:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b
16:28:34.478,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:28:34.478,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:28:34.568,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:28:35.490,No URLs will be polled as dynamic configuration sources.
16:28:35.491,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:28:35.506,No URLs will be polled as dynamic configuration sources.
16:28:35.507,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:28:36.460,Registering beans for JMX exposure on startup
16:28:36.490,Bean with name 'environmentManager' has been autodetected for JMX exposure
16:28:36.504,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:28:36.506,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:28:36.508,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
16:28:36.510,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:28:36.512,Bean with name 'refreshScope' has been autodetected for JMX exposure
16:28:36.523,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:28:36.555,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
16:28:37.102,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:28:37.277,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:28:37.319,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14bae047,type=ConfigurationPropertiesRebinder]
16:28:37.330,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:28:37.331,Registering beans for JMX exposure on startup
16:28:37.613,Starting beans in phase 0
16:28:37.626,Setting initial instance status as: STARTING
16:28:37.703,Initializing Eureka in region us-east-1
16:28:37.914,Using JSON encoding codec LegacyJacksonJson
16:28:37.915,Using JSON decoding codec LegacyJacksonJson
16:28:38.123,Using XML encoding codec XStreamXml
16:28:38.124,Using XML decoding codec XStreamXml
16:28:38.691,Resolving eureka endpoints via configuration
16:28:39.191,Disable delta property : false
16:28:39.191,Single vip registry refresh property : null
16:28:39.191,Force full registry fetch : false
16:28:39.191,Application is null : false
16:28:39.191,Registered Applications size is zero : true
16:28:39.191,Application version is -1: true
16:28:39.191,Getting all instance registry info from the eureka server
16:28:39.617,The response status is 200
16:28:39.620,Starting heartbeat executor: renew interval is: 30
16:28:39.625,InstanceInfoReplicator onDemand update allowed rate per min is 4
16:28:39.633,Discovery Client initialized at timestamp 1517473719632 with initial instances count: 3
16:28:39.748,Registering application nhb-nbiot with eureka with status UP
16:28:39.750,Saw local status change event StatusChangeEvent [timestamp=1517473719750, current=UP, previous=STARTING]
16:28:39.769,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:28:39.796,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:28:39.819,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:28:39.823,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:28:39.828,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:28:39.832,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:28:39.836,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:28:39.840,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:28:39.858,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:28:39.866,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:28:39.872,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:28:39.878,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:28:39.882,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
16:28:39.887,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:28:39.895,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:28:39.898,Starting beans in phase 2147483647
16:28:39.898,Context refreshed
16:28:39.943,Found 1 custom documentation plugin(s)
16:28:39.960,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
16:28:40.102,Scanning for api listing references
16:28:40.502,Generating unique operation named: addUsingPOST_1
16:28:40.513,Generating unique operation named: deleteUsingPOST_1
16:28:40.522,Generating unique operation named: findByIdUsingPOST_1
16:28:40.531,Generating unique operation named: listUsingPOST_1
16:28:40.539,Generating unique operation named: modifyUsingPOST_1
16:28:40.556,Generating unique operation named: deleteUsingPOST_2
16:28:40.565,Generating unique operation named: findByIdUsingPOST_2
16:28:40.689,Initializing ProtocolHandler ["https-jsse-nio-9091"]
16:28:40.717,Starting ProtocolHandler ["https-jsse-nio-9091"]
16:28:40.976,Using a shared selector for servlet write/read
16:28:41.046,Tomcat started on port(s): 9091 (https)
16:28:41.048,Updating port to 9091
16:28:41.063,Started NhbNbApplication in 26.525 seconds (JVM running for 27.442)
16:30:39.729,Initializing Spring FrameworkServlet 'dispatcherServlet'
16:30:39.729,FrameworkServlet 'dispatcherServlet': initialization started
16:30:39.784,FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
16:30:45.747,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a97fc11: startup date [Thu Feb 01 16:30:45 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14bae047
16:30:45.919,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:30:46.924,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:30:46.966,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
16:30:46.976,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:30:46.990,Using serverListUpdater PollingServerListUpdater
16:30:47.024,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:30:47.027,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5b2a6c61
16:30:47.995,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:33:39.205,Resolving eureka endpoints via configuration
16:38:39.210,Resolving eureka endpoints via configuration
16:43:39.215,Resolving eureka endpoints via configuration
16:48:39.221,Resolving eureka endpoints via configuration
16:53:39.226,Resolving eureka endpoints via configuration
16:58:39.231,Resolving eureka endpoints via configuration
17:04:12.327,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 17:04:12 CST 2018]; root of context hierarchy
17:04:12.889,HV000001: Hibernate Validator 5.3.6.Final
17:04:12.953,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:04:13.058,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$16c1f25e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:04:14.285,No active profile set, falling back to default profiles: default
17:04:14.310,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f6bcf87: startup date [Thu Feb 01 17:04:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:04:16.445,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:04:16.492,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:04:16.571,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:04:16.718,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2cd495a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:04:16.757,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$16c1f25e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:04:17.698,Tomcat initialized with port(s): 9091 (https)
17:04:17.712,Starting service [Tomcat]
17:04:17.714,Starting Servlet Engine: Apache Tomcat/8.5.27
17:04:17.940,Initializing Spring embedded WebApplicationContext
17:04:17.941,Root WebApplicationContext: initialization completed in 3631 ms
17:04:18.468,Mapping servlet: 'dispatcherServlet' to [/]
17:04:18.477,Mapping filter: 'metricsFilter' to: [/*]
17:04:18.478,Mapping filter: 'characterEncodingFilter' to: [/*]
17:04:18.478,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:04:18.479,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:04:18.479,Mapping filter: 'requestContextFilter' to: [/*]
17:04:18.479,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:04:18.479,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:04:20.360,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:04:20.360,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:04:20.653,Opened connection [connectionId{localValue:1, serverValue:650}] to 192.168.1.90:17000
17:04:20.657,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1549797}
17:04:20.660,Discovered cluster type of STANDALONE
17:04:20.901,Opened connection [connectionId{localValue:2, serverValue:651}] to 192.168.1.90:17000
17:04:21.183,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@72324965: startup date [Thu Feb 01 17:04:21 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f6bcf87
17:04:21.227,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:04:22.716,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:04:22.719,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:04:22.720,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:04:22.722,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:04:22.723,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:04:22.725,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:04:22.725,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:04:22.726,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:04:22.730,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:04:22.730,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:04:22.731,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:04:22.732,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:04:22.733,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:04:22.739,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:04:22.739,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:04:22.740,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:04:22.741,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:04:22.741,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:04:22.750,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:04:22.752,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:04:22.755,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:04:22.762,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:04:22.764,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:04:24.757,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.759,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:04:24.760,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.762,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.763,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.764,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:04:24.765,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:04:24.767,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.768,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.769,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:04:24.770,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:04:24.771,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.774,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:04:24.775,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:04:24.775,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.776,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:04:24.777,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.778,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:04:24.779,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.780,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:04:24.781,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:04:24.784,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:04:24.785,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.786,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:04:24.789,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:04:24.790,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:04:24.791,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:04:25.134,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:04:25.648,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f6bcf87: startup date [Thu Feb 01 17:04:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:04:25.781,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:04:25.782,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:04:25.887,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:04:26.664,No URLs will be polled as dynamic configuration sources.
17:04:26.665,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:04:26.677,No URLs will be polled as dynamic configuration sources.
17:04:26.677,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:04:27.362,Registering beans for JMX exposure on startup
17:04:27.384,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:04:27.388,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:04:27.390,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:04:27.391,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:04:27.393,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:04:27.394,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:04:27.399,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:04:27.421,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:04:27.446,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:04:27.457,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:04:27.477,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2f6bcf87,type=ConfigurationPropertiesRebinder]
17:04:27.485,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:04:27.488,Registering beans for JMX exposure on startup
17:04:27.802,Starting beans in phase 0
17:04:27.818,Setting initial instance status as: STARTING
17:04:27.897,Initializing Eureka in region us-east-1
17:04:28.052,Using JSON encoding codec LegacyJacksonJson
17:04:28.053,Using JSON decoding codec LegacyJacksonJson
17:04:28.291,Using XML encoding codec XStreamXml
17:04:28.291,Using XML decoding codec XStreamXml
17:04:28.714,Resolving eureka endpoints via configuration
17:04:29.121,Disable delta property : false
17:04:29.121,Single vip registry refresh property : null
17:04:29.121,Force full registry fetch : false
17:04:29.121,Application is null : false
17:04:29.121,Registered Applications size is zero : true
17:04:29.121,Application version is -1: true
17:04:29.121,Getting all instance registry info from the eureka server
17:04:29.421,The response status is 200
17:04:29.425,Starting heartbeat executor: renew interval is: 30
17:04:29.431,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:04:29.437,Discovery Client initialized at timestamp 1517475869437 with initial instances count: 4
17:04:29.486,Registering application nhb-nbiot with eureka with status UP
17:04:29.486,Saw local status change event StatusChangeEvent [timestamp=1517475869486, current=UP, previous=STARTING]
17:04:29.493,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:04:29.505,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:04:29.521,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:04:29.526,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:04:29.530,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:04:29.534,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:04:29.538,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:04:29.542,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:04:29.544,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:04:29.570,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:04:29.578,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:04:29.583,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:04:29.587,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:04:29.590,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:04:29.594,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:04:29.596,Starting beans in phase 2147483647
17:04:29.596,Context refreshed
17:04:29.620,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:04:29.630,Found 1 custom documentation plugin(s)
17:04:29.737,Scanning for api listing references
17:04:30.073,Generating unique operation named: addUsingPOST_1
17:04:30.081,Generating unique operation named: deleteUsingPOST_1
17:04:30.090,Generating unique operation named: findByIdUsingPOST_1
17:04:30.099,Generating unique operation named: listUsingPOST_1
17:04:30.108,Generating unique operation named: modifyUsingPOST_1
17:04:30.125,Generating unique operation named: deleteUsingPOST_2
17:04:30.135,Generating unique operation named: findByIdUsingPOST_2
17:04:30.218,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:04:30.238,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:04:30.359,Using a shared selector for servlet write/read
17:04:30.405,Tomcat started on port(s): 9091 (https)
17:04:30.407,Updating port to 9091
17:04:30.415,Started NhbNbApplication in 19.613 seconds (JVM running for 20.328)
17:04:53.939,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:04:53.939,FrameworkServlet 'dispatcherServlet': initialization started
17:04:53.986,FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
17:04:58.606,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69d5bffb: startup date [Thu Feb 01 17:04:58 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f6bcf87
17:04:58.725,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:04:59.373,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:04:59.413,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:04:59.421,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:04:59.433,Using serverListUpdater PollingServerListUpdater
17:04:59.476,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:04:59.479,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6fb8aec0
17:05:00.438,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:09:29.129,Resolving eureka endpoints via configuration
17:18:10.185,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b: startup date [Thu Feb 01 17:18:10 CST 2018]; root of context hierarchy
17:18:10.922,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:18:11.038,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cedca46c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:18:11.075,HV000001: Hibernate Validator 5.3.6.Final
17:18:12.452,No active profile set, falling back to default profiles: default
17:18:12.482,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f4037ed: startup date [Thu Feb 01 17:18:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b
17:18:15.435,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:18:15.495,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:18:15.861,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:18:15.982,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e4ef47b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:18:16.014,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cedca46c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:18:17.359,Tomcat initialized with port(s): 9091 (https)
17:18:17.376,Starting service [Tomcat]
17:18:17.379,Starting Servlet Engine: Apache Tomcat/8.5.27
17:18:17.691,Initializing Spring embedded WebApplicationContext
17:18:17.694,Root WebApplicationContext: initialization completed in 5212 ms
17:18:18.347,Mapping servlet: 'dispatcherServlet' to [/]
17:18:18.356,Mapping filter: 'metricsFilter' to: [/*]
17:18:18.357,Mapping filter: 'characterEncodingFilter' to: [/*]
17:18:18.357,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:18:18.358,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:18:18.358,Mapping filter: 'requestContextFilter' to: [/*]
17:18:18.358,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:18:18.358,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:18:20.754,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:18:20.754,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:18:20.911,Opened connection [connectionId{localValue:1, serverValue:654}] to 192.168.1.90:17000
17:18:20.915,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1779377}
17:18:20.918,Discovered cluster type of STANDALONE
17:18:21.433,Opened connection [connectionId{localValue:2, serverValue:655}] to 192.168.1.90:17000
17:18:21.792,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@655621fd: startup date [Thu Feb 01 17:18:21 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f4037ed
17:18:21.829,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:18:23.777,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:18:23.779,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:18:23.780,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:18:23.780,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:18:23.781,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:18:23.783,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:18:23.784,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:18:23.785,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:18:23.791,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:18:23.791,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:18:23.792,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:18:23.794,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:18:23.795,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:18:23.800,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:18:23.801,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:18:23.802,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:18:23.802,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:18:23.803,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:18:23.815,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:18:23.817,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:18:23.820,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:18:23.831,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:18:23.833,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:18:26.416,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:18:26.421,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:18:26.423,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.425,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:18:26.426,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.427,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.429,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.431,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:18:26.432,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.437,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:18:26.437,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:18:26.440,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:18:26.442,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.445,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:18:26.446,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:18:26.447,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.447,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:18:26.448,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.451,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:18:26.451,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.453,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:18:26.454,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.457,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:26.458,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:18:26.460,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:18:26.461,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:18:26.462,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:18:27.133,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:18:27.635,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f4037ed: startup date [Thu Feb 01 17:18:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d278d2b
17:18:27.906,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:18:27.906,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:18:28.044,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:18:28.825,No URLs will be polled as dynamic configuration sources.
17:18:28.826,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:18:28.841,No URLs will be polled as dynamic configuration sources.
17:18:28.842,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:18:29.359,Registering beans for JMX exposure on startup
17:18:29.380,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:18:29.385,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:18:29.386,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:18:29.388,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:18:29.390,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:18:29.392,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:18:29.398,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:18:29.422,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:18:29.451,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:18:29.464,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:18:29.992,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7f4037ed,type=ConfigurationPropertiesRebinder]
17:18:30.001,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:18:30.004,Registering beans for JMX exposure on startup
17:18:30.490,Starting beans in phase 0
17:18:30.504,Setting initial instance status as: STARTING
17:18:30.766,Initializing Eureka in region us-east-1
17:18:30.960,Using JSON encoding codec LegacyJacksonJson
17:18:30.960,Using JSON decoding codec LegacyJacksonJson
17:18:31.194,Using XML encoding codec XStreamXml
17:18:31.195,Using XML decoding codec XStreamXml
17:18:31.678,Resolving eureka endpoints via configuration
17:18:32.168,Disable delta property : false
17:18:32.168,Single vip registry refresh property : null
17:18:32.169,Force full registry fetch : false
17:18:32.169,Application is null : false
17:18:32.169,Registered Applications size is zero : true
17:18:32.169,Application version is -1: true
17:18:32.169,Getting all instance registry info from the eureka server
17:18:32.511,The response status is 200
17:18:32.513,Starting heartbeat executor: renew interval is: 30
17:18:32.519,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:18:32.528,Discovery Client initialized at timestamp 1517476712527 with initial instances count: 3
17:18:32.582,Registering application nhb-nbiot with eureka with status UP
17:18:32.584,Saw local status change event StatusChangeEvent [timestamp=1517476712584, current=UP, previous=STARTING]
17:18:32.591,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:18:32.607,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:18:32.626,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:18:32.630,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:18:32.635,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:18:32.640,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:18:32.645,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:18:32.650,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:18:32.680,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:18:32.685,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:18:32.689,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:18:32.697,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:18:32.702,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:18:32.709,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:18:32.711,Starting beans in phase 2147483647
17:18:32.712,Context refreshed
17:18:32.716,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:18:32.947,Found 1 custom documentation plugin(s)
17:18:32.970,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:18:33.077,Scanning for api listing references
17:18:33.402,Generating unique operation named: addUsingPOST_1
17:18:33.415,Generating unique operation named: deleteUsingPOST_1
17:18:33.424,Generating unique operation named: findByIdUsingPOST_1
17:18:33.433,Generating unique operation named: listUsingPOST_1
17:18:33.441,Generating unique operation named: modifyUsingPOST_1
17:18:33.458,Generating unique operation named: deleteUsingPOST_2
17:18:33.471,Generating unique operation named: findByIdUsingPOST_2
17:18:33.581,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:18:33.604,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:18:33.768,Using a shared selector for servlet write/read
17:18:33.838,Tomcat started on port(s): 9091 (https)
17:18:33.841,Updating port to 9091
17:18:33.851,Started NhbNbApplication in 25.435 seconds (JVM running for 27.437)
17:18:35.440,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:18:35.441,FrameworkServlet 'dispatcherServlet': initialization started
17:18:35.483,FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
17:19:30.051,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ff73682: startup date [Thu Feb 01 17:19:30 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f4037ed
17:19:30.175,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:19:30.469,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:19:30.522,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:19:30.531,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:19:30.544,Using serverListUpdater PollingServerListUpdater
17:19:30.590,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:19:30.608,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@244a1b9b
17:19:31.548,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:23:32.177,Resolving eureka endpoints via configuration
17:24:09.313,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 17:24:09 CST 2018]; root of context hierarchy
17:24:09.886,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:24:10.011,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e468f438] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:24:10.022,HV000001: Hibernate Validator 5.3.6.Final
17:24:11.258,No active profile set, falling back to default profiles: default
17:24:11.284,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2adddc06: startup date [Thu Feb 01 17:24:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:24:13.356,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:24:13.399,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:24:13.487,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:24:13.654,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fa7b977c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:24:13.706,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e468f438] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:24:14.825,Tomcat initialized with port(s): 9091 (https)
17:24:14.837,Starting service [Tomcat]
17:24:14.840,Starting Servlet Engine: Apache Tomcat/8.5.27
17:24:15.068,Initializing Spring embedded WebApplicationContext
17:24:15.069,Root WebApplicationContext: initialization completed in 3785 ms
17:24:15.576,Mapping servlet: 'dispatcherServlet' to [/]
17:24:15.589,Mapping filter: 'metricsFilter' to: [/*]
17:24:15.589,Mapping filter: 'characterEncodingFilter' to: [/*]
17:24:15.589,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:24:15.589,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:24:15.590,Mapping filter: 'requestContextFilter' to: [/*]
17:24:15.590,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:24:15.590,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:24:17.703,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:24:17.704,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:24:17.852,Opened connection [connectionId{localValue:1, serverValue:656}] to 192.168.1.90:17000
17:24:17.856,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1628664}
17:24:17.859,Discovered cluster type of STANDALONE
17:24:18.203,Opened connection [connectionId{localValue:2, serverValue:657}] to 192.168.1.90:17000
17:24:18.466,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4756e5cc: startup date [Thu Feb 01 17:24:18 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2adddc06
17:24:18.507,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:24:19.878,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:24:19.882,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:24:19.883,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:24:19.884,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:24:19.886,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:24:19.887,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:24:19.888,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:24:19.889,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:24:19.892,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:24:19.893,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:24:19.893,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:24:19.894,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:24:19.897,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:24:19.904,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:24:19.905,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:24:19.906,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:24:19.909,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:24:19.910,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:24:19.920,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:24:19.922,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:24:19.925,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:24:19.933,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:24:19.934,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:24:21.799,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:24:21.803,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:24:21.806,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:24:21.809,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:24:21.812,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:24:21.812,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.814,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:24:21.815,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:24:21.816,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:24:21.818,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:24:21.819,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:24:21.820,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.822,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:24:21.822,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.826,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:24:21.827,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:24:21.827,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.828,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.830,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.831,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.831,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:24:21.832,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.833,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:24:21.834,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.835,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.835,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:21.836,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:24:22.123,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:24:22.632,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2adddc06: startup date [Thu Feb 01 17:24:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:24:22.752,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:24:22.753,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:24:22.840,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:24:23.688,No URLs will be polled as dynamic configuration sources.
17:24:23.688,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:24:23.699,No URLs will be polled as dynamic configuration sources.
17:24:23.699,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:24:23.971,Registering beans for JMX exposure on startup
17:24:23.991,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:24:23.995,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:24:23.996,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:24:23.997,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:24:23.999,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:24:24.001,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:24:24.005,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:24:24.027,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:24:24.055,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:24:24.065,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:24:24.090,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2adddc06,type=ConfigurationPropertiesRebinder]
17:24:24.112,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:24:24.114,Registering beans for JMX exposure on startup
17:24:24.396,Starting beans in phase 0
17:24:24.412,Setting initial instance status as: STARTING
17:24:24.486,Initializing Eureka in region us-east-1
17:24:24.616,Using JSON encoding codec LegacyJacksonJson
17:24:24.617,Using JSON decoding codec LegacyJacksonJson
17:24:24.838,Using XML encoding codec XStreamXml
17:24:24.839,Using XML decoding codec XStreamXml
17:24:25.269,Resolving eureka endpoints via configuration
17:24:25.723,Disable delta property : false
17:24:25.724,Single vip registry refresh property : null
17:24:25.724,Force full registry fetch : false
17:24:25.724,Application is null : false
17:24:25.724,Registered Applications size is zero : true
17:24:25.724,Application version is -1: true
17:24:25.724,Getting all instance registry info from the eureka server
17:24:26.012,The response status is 200
17:24:26.016,Starting heartbeat executor: renew interval is: 30
17:24:26.021,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:24:26.026,Discovery Client initialized at timestamp 1517477066026 with initial instances count: 4
17:24:26.086,Registering application nhb-nbiot with eureka with status UP
17:24:26.087,Saw local status change event StatusChangeEvent [timestamp=1517477066086, current=UP, previous=STARTING]
17:24:26.092,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:24:26.095,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:24:26.116,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:24:26.130,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:24:26.134,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:24:26.142,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:24:26.146,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:24:26.149,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:24:26.155,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:24:26.179,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:24:26.189,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:24:26.191,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:24:26.193,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:24:26.196,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:24:26.200,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:24:26.204,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:24:26.206,Starting beans in phase 2147483647
17:24:26.207,Context refreshed
17:24:26.250,Found 1 custom documentation plugin(s)
17:24:26.352,Scanning for api listing references
17:24:26.631,Generating unique operation named: addUsingPOST_1
17:24:26.641,Generating unique operation named: deleteUsingPOST_1
17:24:26.650,Generating unique operation named: findByIdUsingPOST_1
17:24:26.659,Generating unique operation named: listUsingPOST_1
17:24:26.667,Generating unique operation named: modifyUsingPOST_1
17:24:26.682,Generating unique operation named: deleteUsingPOST_2
17:24:26.698,Generating unique operation named: findByIdUsingPOST_2
17:24:26.787,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:24:26.811,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:24:26.948,Using a shared selector for servlet write/read
17:24:27.021,Tomcat started on port(s): 9091 (https)
17:24:27.022,Updating port to 9091
17:24:27.030,Started NhbNbApplication in 19.33 seconds (JVM running for 20.246)
17:24:35.964,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:24:35.964,FrameworkServlet 'dispatcherServlet': initialization started
17:24:36.013,FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
17:24:40.139,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@48a26520: startup date [Thu Feb 01 17:24:40 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2adddc06
17:24:40.250,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:24:40.540,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:24:40.591,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:24:40.988,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:24:41.007,Using serverListUpdater PollingServerListUpdater
17:24:41.049,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:24:41.052,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5efff89d
17:24:42.012,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:24:50.098,parse json string error:{deviceId=5a72dcd946f64c171ce1511f, verifyCode=null, psk=null, timeout=null, endUserId=101, nodeId=frfr, name=null, longitude=null, latitude=null, gpsLng=null, gpsLat=null, description=null, manufactureId=null, manufacturerName=null, mac=null, location=null, deviceType=null, model=null, swVersion=null, fwVersion=null, hwVersion=null, protocolType=null, signalStrength=null, bridgeId=null, supportedSecurity=null, isSecurity=null, sigVersion=null, runningStatus=null, status=null, statusDetail=null, mute=null}
com.fasterxml.jackson.core.JsonParseException: Unexpected character ('=' (code 61)): was expecting a colon to separate field name and value
 at [Source: {deviceId=5a72dcd946f64c171ce1511f, verifyCode=null, psk=null, timeout=null, endUserId=101, nodeId=frfr, name=null, longitude=null, latitude=null, gpsLng=null, gpsLat=null, description=null, manufactureId=null, manufacturerName=null, mac=null, location=null, deviceType=null, model=null, swVersion=null, fwVersion=null, hwVersion=null, protocolType=null, signalStrength=null, bridgeId=null, supportedSecurity=null, isSecurity=null, sigVersion=null, runningStatus=null, status=null, statusDetail=null, mute=null}; line: 1, column: 11]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon2(ReaderBasedJsonParser.java:2212)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon(ReaderBasedJsonParser.java:2191)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)
	at com.nhb.utils.nhb_utils.json.JsonMapper.fromJson(JsonMapper.java:123)
	at com.nhb.nb.controller.device.DeviceController.add(DeviceController.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
17:26:42.967,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638: startup date [Thu Feb 01 17:26:42 CST 2018]; root of context hierarchy
17:26:43.515,HV000001: Hibernate Validator 5.3.6.Final
17:26:43.618,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:26:43.697,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42597d7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:26:44.854,No active profile set, falling back to default profiles: default
17:26:44.895,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@595f4da5: startup date [Thu Feb 01 17:26:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:26:46.952,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:26:47.002,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:26:47.090,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:26:47.208,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$586c20be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:26:47.241,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42597d7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:26:48.741,Tomcat initialized with port(s): 9091 (https)
17:26:48.759,Starting service [Tomcat]
17:26:48.761,Starting Servlet Engine: Apache Tomcat/8.5.27
17:26:49.069,Initializing Spring embedded WebApplicationContext
17:26:49.069,Root WebApplicationContext: initialization completed in 4174 ms
17:26:49.604,Mapping servlet: 'dispatcherServlet' to [/]
17:26:49.613,Mapping filter: 'metricsFilter' to: [/*]
17:26:49.614,Mapping filter: 'characterEncodingFilter' to: [/*]
17:26:49.614,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:26:49.614,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:26:49.615,Mapping filter: 'requestContextFilter' to: [/*]
17:26:49.615,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:26:49.615,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:26:51.561,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:26:51.562,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:26:51.723,Opened connection [connectionId{localValue:1, serverValue:658}] to 192.168.1.90:17000
17:26:51.728,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2489183}
17:26:51.732,Discovered cluster type of STANDALONE
17:26:52.060,Opened connection [connectionId{localValue:2, serverValue:659}] to 192.168.1.90:17000
17:26:52.297,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@55fb36de: startup date [Thu Feb 01 17:26:52 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@595f4da5
17:26:52.334,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:26:53.756,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:26:53.757,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:26:53.758,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:26:53.758,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:26:53.758,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:26:53.760,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:26:53.761,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:26:53.761,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:26:53.763,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:26:53.764,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:26:53.765,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:26:53.765,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:26:53.766,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:26:53.773,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:26:53.774,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:26:53.775,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:26:53.776,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:26:53.777,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:26:53.784,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:26:53.785,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:26:53.787,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:26:53.793,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:26:53.794,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:26:55.590,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:26:55.591,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:26:55.593,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.594,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.595,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.596,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.598,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.600,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:26:55.601,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:26:55.603,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:26:55.606,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:26:55.608,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:26:55.608,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.609,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.612,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:26:55.615,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:26:55.616,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.619,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:26:55.619,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:26:55.620,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.622,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:26:55.622,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.623,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.624,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:26:55.625,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:26:55.627,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:26:55.627,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:26:55.972,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:26:56.489,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@595f4da5: startup date [Thu Feb 01 17:26:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e44b638
17:26:56.658,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:26:56.658,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:26:56.761,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:26:57.404,No URLs will be polled as dynamic configuration sources.
17:26:57.404,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:26:57.416,No URLs will be polled as dynamic configuration sources.
17:26:57.417,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:26:57.771,Registering beans for JMX exposure on startup
17:26:57.790,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:26:57.795,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:26:57.796,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:26:57.797,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:26:57.798,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:26:57.800,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:26:57.805,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:26:57.826,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:26:57.849,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:26:57.859,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:26:57.882,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=595f4da5,type=ConfigurationPropertiesRebinder]
17:26:57.889,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:26:57.891,Registering beans for JMX exposure on startup
17:26:58.235,Starting beans in phase 0
17:26:58.253,Setting initial instance status as: STARTING
17:26:58.342,Initializing Eureka in region us-east-1
17:26:58.500,Using JSON encoding codec LegacyJacksonJson
17:26:58.500,Using JSON decoding codec LegacyJacksonJson
17:26:58.691,Using XML encoding codec XStreamXml
17:26:58.691,Using XML decoding codec XStreamXml
17:26:59.204,Resolving eureka endpoints via configuration
17:26:59.548,Disable delta property : false
17:26:59.548,Single vip registry refresh property : null
17:26:59.548,Force full registry fetch : false
17:26:59.548,Application is null : false
17:26:59.548,Registered Applications size is zero : true
17:26:59.548,Application version is -1: true
17:26:59.548,Getting all instance registry info from the eureka server
17:26:59.799,The response status is 200
17:26:59.803,Starting heartbeat executor: renew interval is: 30
17:26:59.809,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:26:59.816,Discovery Client initialized at timestamp 1517477219815 with initial instances count: 4
17:26:59.887,Registering application nhb-nbiot with eureka with status UP
17:26:59.888,Saw local status change event StatusChangeEvent [timestamp=1517477219888, current=UP, previous=STARTING]
17:26:59.891,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:26:59.906,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:26:59.926,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:26:59.941,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:26:59.946,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:26:59.950,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:26:59.957,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:26:59.966,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:26:59.970,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:26:59.980,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:26:59.984,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:26:59.989,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:26:59.995,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:26:59.999,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:27:00.003,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:27:00.009,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:27:00.011,Starting beans in phase 2147483647
17:27:00.011,Context refreshed
17:27:00.044,Found 1 custom documentation plugin(s)
17:27:00.159,Scanning for api listing references
17:27:00.430,Generating unique operation named: addUsingPOST_1
17:27:00.438,Generating unique operation named: deleteUsingPOST_1
17:27:00.446,Generating unique operation named: findByIdUsingPOST_1
17:27:00.453,Generating unique operation named: listUsingPOST_1
17:27:00.461,Generating unique operation named: modifyUsingPOST_1
17:27:00.476,Generating unique operation named: deleteUsingPOST_2
17:27:00.486,Generating unique operation named: findByIdUsingPOST_2
17:27:00.566,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:27:00.584,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:27:00.700,Using a shared selector for servlet write/read
17:27:00.766,Tomcat started on port(s): 9091 (https)
17:27:00.771,Updating port to 9091
17:27:00.780,Started NhbNbApplication in 19.34 seconds (JVM running for 20.057)
17:27:05.663,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:27:05.663,FrameworkServlet 'dispatcherServlet': initialization started
17:27:05.703,FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
17:27:09.805,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7bb9c95c: startup date [Thu Feb 01 17:27:09 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@595f4da5
17:27:10.025,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:27:10.341,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:27:10.803,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:27:10.811,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:27:10.820,Using serverListUpdater PollingServerListUpdater
17:27:10.850,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:27:10.858,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@25ee2058
17:27:11.828,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:27:13.813,parse json string error:{deviceId=ebaa6334-fffc-46f9-8418-fc61498c5b9b, verifyCode=nhb-device, psk=596d32aa83ec73e5167136b6600f7772, timeout=300, endUserId=101, nodeId=kkk, name=null, longitude=null, latitude=null, gpsLng=null, gpsLat=null, description=null, manufactureId=null, manufacturerName=null, mac=null, location=null, deviceType=null, model=null, swVersion=null, fwVersion=null, hwVersion=null, protocolType=null, signalStrength=null, bridgeId=null, supportedSecurity=null, isSecurity=null, sigVersion=null, runningStatus=null, status=null, statusDetail=null, mute=null}
com.fasterxml.jackson.core.JsonParseException: Unexpected character ('=' (code 61)): was expecting a colon to separate field name and value
 at [Source: {deviceId=ebaa6334-fffc-46f9-8418-fc61498c5b9b, verifyCode=nhb-device, psk=596d32aa83ec73e5167136b6600f7772, timeout=300, endUserId=101, nodeId=kkk, name=null, longitude=null, latitude=null, gpsLng=null, gpsLat=null, description=null, manufactureId=null, manufacturerName=null, mac=null, location=null, deviceType=null, model=null, swVersion=null, fwVersion=null, hwVersion=null, protocolType=null, signalStrength=null, bridgeId=null, supportedSecurity=null, isSecurity=null, sigVersion=null, runningStatus=null, status=null, statusDetail=null, mute=null}; line: 1, column: 11]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon2(ReaderBasedJsonParser.java:2212)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon(ReaderBasedJsonParser.java:2191)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(ReaderBasedJsonParser.java:924)
	at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(MapDeserializer.java:493)
	at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:362)
	at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)
	at com.nhb.utils.nhb_utils.json.JsonMapper.fromJson(JsonMapper.java:123)
	at com.nhb.nb.controller.device.DeviceController.add(DeviceController.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
17:29:24.954,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc: startup date [Thu Feb 01 17:29:24 CST 2018]; root of context hierarchy
17:29:25.501,HV000001: Hibernate Validator 5.3.6.Final
17:29:25.578,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:29:25.654,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e2270ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:29:26.860,No active profile set, falling back to default profiles: default
17:29:26.890,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ebadd3d: startup date [Thu Feb 01 17:29:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc
17:29:28.992,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:29:29.038,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:29:29.143,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:29:29.255,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$44351430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:29:29.287,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e2270ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:29:30.271,Tomcat initialized with port(s): 9091 (https)
17:29:30.286,Starting service [Tomcat]
17:29:30.287,Starting Servlet Engine: Apache Tomcat/8.5.27
17:29:30.540,Initializing Spring embedded WebApplicationContext
17:29:30.540,Root WebApplicationContext: initialization completed in 3651 ms
17:29:31.058,Mapping servlet: 'dispatcherServlet' to [/]
17:29:31.067,Mapping filter: 'metricsFilter' to: [/*]
17:29:31.068,Mapping filter: 'characterEncodingFilter' to: [/*]
17:29:31.068,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:29:31.068,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:29:31.068,Mapping filter: 'requestContextFilter' to: [/*]
17:29:31.068,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:29:31.068,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:29:32.906,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:29:32.907,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:29:33.105,Opened connection [connectionId{localValue:1, serverValue:660}] to 192.168.1.90:17000
17:29:33.110,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2279049}
17:29:33.112,Discovered cluster type of STANDALONE
17:29:33.375,Opened connection [connectionId{localValue:2, serverValue:661}] to 192.168.1.90:17000
17:29:33.613,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c92a549: startup date [Thu Feb 01 17:29:33 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ebadd3d
17:29:33.645,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:29:34.932,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:29:34.934,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:29:34.935,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:29:34.936,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:29:34.936,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:29:34.938,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:29:34.938,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:29:34.940,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:29:34.942,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:29:34.943,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:29:34.943,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:29:34.944,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:29:34.944,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:29:34.949,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:29:34.950,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:29:34.951,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:29:34.952,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:29:34.953,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:29:34.959,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:29:34.961,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:29:34.963,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:29:34.970,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:29:34.971,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:29:36.802,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:29:36.804,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:29:36.805,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:29:36.806,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:29:36.808,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.811,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:29:36.812,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:29:36.813,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.814,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.815,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:29:36.816,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.817,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.818,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.818,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:29:36.819,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:29:36.820,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.823,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:29:36.824,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:29:36.825,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.826,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.827,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:29:36.830,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:29:36.831,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.833,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:29:36.834,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:36.835,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:29:36.836,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:29:37.131,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:29:37.556,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ebadd3d: startup date [Thu Feb 01 17:29:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@132e0cc
17:29:37.665,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:29:37.666,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:29:37.753,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:29:38.391,No URLs will be polled as dynamic configuration sources.
17:29:38.392,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:29:38.402,No URLs will be polled as dynamic configuration sources.
17:29:38.404,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:29:38.744,Registering beans for JMX exposure on startup
17:29:38.760,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:29:38.765,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:29:38.767,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:29:38.768,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:29:38.770,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:29:38.772,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:29:38.777,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:29:38.795,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:29:38.820,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:29:38.830,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:29:38.856,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4ebadd3d,type=ConfigurationPropertiesRebinder]
17:29:38.881,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:29:38.889,Registering beans for JMX exposure on startup
17:29:39.302,Starting beans in phase 0
17:29:39.316,Setting initial instance status as: STARTING
17:29:39.391,Initializing Eureka in region us-east-1
17:29:39.543,Using JSON encoding codec LegacyJacksonJson
17:29:39.543,Using JSON decoding codec LegacyJacksonJson
17:29:39.747,Using XML encoding codec XStreamXml
17:29:39.748,Using XML decoding codec XStreamXml
17:29:40.209,Resolving eureka endpoints via configuration
17:29:40.618,Disable delta property : false
17:29:40.619,Single vip registry refresh property : null
17:29:40.619,Force full registry fetch : false
17:29:40.619,Application is null : false
17:29:40.619,Registered Applications size is zero : true
17:29:40.619,Application version is -1: true
17:29:40.619,Getting all instance registry info from the eureka server
17:29:40.873,The response status is 200
17:29:40.876,Starting heartbeat executor: renew interval is: 30
17:29:40.881,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:29:40.889,Discovery Client initialized at timestamp 1517477380888 with initial instances count: 4
17:29:40.953,Registering application nhb-nbiot with eureka with status UP
17:29:40.954,Saw local status change event StatusChangeEvent [timestamp=1517477380954, current=UP, previous=STARTING]
17:29:40.961,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:29:40.977,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:29:40.991,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:29:40.994,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:29:41.002,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:29:41.013,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:29:41.020,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:29:41.024,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:29:41.028,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:29:41.039,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:29:41.043,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:29:41.047,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:29:41.051,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:29:41.055,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:29:41.058,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:29:41.060,Starting beans in phase 2147483647
17:29:41.060,Context refreshed
17:29:41.075,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:29:41.097,Found 1 custom documentation plugin(s)
17:29:41.221,Scanning for api listing references
17:29:41.488,Generating unique operation named: addUsingPOST_1
17:29:41.496,Generating unique operation named: deleteUsingPOST_1
17:29:41.505,Generating unique operation named: findByIdUsingPOST_1
17:29:41.512,Generating unique operation named: listUsingPOST_1
17:29:41.520,Generating unique operation named: modifyUsingPOST_1
17:29:41.536,Generating unique operation named: deleteUsingPOST_2
17:29:41.545,Generating unique operation named: findByIdUsingPOST_2
17:29:41.617,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:29:41.636,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:29:41.765,Using a shared selector for servlet write/read
17:29:41.836,Tomcat started on port(s): 9091 (https)
17:29:41.841,Updating port to 9091
17:29:41.849,Started NhbNbApplication in 18.367 seconds (JVM running for 19.205)
17:29:47.815,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:29:47.816,FrameworkServlet 'dispatcherServlet': initialization started
17:29:47.857,FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
17:29:53.690,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c9ccb70: startup date [Thu Feb 01 17:29:53 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4ebadd3d
17:29:53.816,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:29:54.511,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:29:54.555,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:29:54.563,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:29:54.578,Using serverListUpdater PollingServerListUpdater
17:29:54.612,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:29:54.617,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@78202763
17:29:55.584,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:34:40.628,Resolving eureka endpoints via configuration
17:37:00.797,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3688eb5b: startup date [Thu Feb 01 17:37:00 CST 2018]; root of context hierarchy
17:37:01.325,HV000001: Hibernate Validator 5.3.6.Final
17:37:01.462,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:37:01.535,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5073a4c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:37:02.829,No active profile set, falling back to default profiles: default
17:37:02.854,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f574cc2: startup date [Thu Feb 01 17:37:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3688eb5b
17:37:05.005,BeanFactory id=561935aa-321c-390d-a9b5-af85a74f3251
17:37:05.071,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:37:05.203,Bean 'com.nhb.nb.feign.DeviceManageFeign' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:37:05.322,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$66864808] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:37:05.352,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5073a4c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:37:06.398,Tomcat initialized with port(s): 9091 (https)
17:37:06.411,Starting service [Tomcat]
17:37:06.413,Starting Servlet Engine: Apache Tomcat/8.5.27
17:37:06.696,Initializing Spring embedded WebApplicationContext
17:37:06.697,Root WebApplicationContext: initialization completed in 3843 ms
17:37:07.186,Mapping servlet: 'dispatcherServlet' to [/]
17:37:07.192,Mapping filter: 'metricsFilter' to: [/*]
17:37:07.193,Mapping filter: 'characterEncodingFilter' to: [/*]
17:37:07.193,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:37:07.193,Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:37:07.193,Mapping filter: 'requestContextFilter' to: [/*]
17:37:07.194,Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:37:07.194,Mapping filter: 'applicationContextIdFilter' to: [/*]
17:37:09.305,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
17:37:09.306,Adding discovered server 192.168.1.90:17000 to client view of cluster
17:37:09.489,Opened connection [connectionId{localValue:1, serverValue:666}] to 192.168.1.90:17000
17:37:09.494,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=2249339}
17:37:09.497,Discovered cluster type of STANDALONE
17:37:09.820,Opened connection [connectionId{localValue:2, serverValue:667}] to 192.168.1.90:17000
17:37:10.068,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c0798bd: startup date [Thu Feb 01 17:37:10 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f574cc2
17:37:10.100,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:37:11.535,Mapped "{[/nbiot/v1/area/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.add(com.nhb.nb.request.area.AreaRequest)
17:37:11.537,Mapped "{[/nbiot/v1/area/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.delete(com.nhb.nb.request.area.AreaRequest)
17:37:11.537,Mapped "{[/nbiot/v1/area/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.list(com.nhb.nb.request.area.AreaRequest)
17:37:11.538,Mapped "{[/nbiot/v1/area/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.findById(com.nhb.nb.request.area.AreaRequest)
17:37:11.538,Mapped "{[/nbiot/v1/area/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.area.SysAreaController.modify(com.nhb.nb.request.area.AreaRequest)
17:37:11.540,Mapped "{[/nbiot/v1/data/test],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.test()
17:37:11.542,Mapped "{[/nbiot/v1/data/history],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findHistoryData(com.nhb.nb.request.data.DataHistoryRequest)
17:37:11.543,Mapped "{[/nbiot/v1/data/realtime],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.data.DataController.findRealtimeData(com.nhb.nb.request.data.DataRealtimeRequest)
17:37:11.547,Mapped "{[/nbiot/v1/device/add],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.add(com.nhb.nb.request.device.DeviceRequest)
17:37:11.547,Mapped "{[/nbiot/v1/device/delete],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.delete(com.nhb.nb.request.device.DeviceRequest)
17:37:11.548,Mapped "{[/nbiot/v1/device/list],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.list(com.nhb.nb.request.device.DeviceRequest)
17:37:11.548,Mapped "{[/nbiot/v1/device/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.findById(com.nhb.nb.request.device.DeviceRequest)
17:37:11.549,Mapped "{[/nbiot/v1/device/modify],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.device.DeviceController.modify(com.nhb.nb.request.device.DeviceRequest)
17:37:11.552,Mapped "{[/nbiot/v1/user],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.delete(com.nhb.nb.request.user.UserRequest)
17:37:11.553,Mapped "{[/nbiot/v1/user/findById],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findById(com.nhb.nb.request.user.LoginRequest)
17:37:11.553,Mapped "{[/nbiot/v1/user/findList],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.findList(com.nhb.nb.request.user.UserRequest)
17:37:11.554,Mapped "{[/nbiot/v1/user/modifyUser],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.modifyUser(com.nhb.nb.request.user.UserRequest)
17:37:11.556,Mapped "{[/nbiot/v1/user/login],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.nb.controller.user.SysUserController.login(com.nhb.nb.request.user.LoginRequest)
17:37:11.563,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
17:37:11.565,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
17:37:11.567,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
17:37:11.574,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:37:11.575,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:37:13.333,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.336,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:37:13.337,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
17:37:13.338,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.341,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:37:13.343,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.344,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:37:13.344,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:37:13.346,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.347,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.350,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:37:13.351,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:37:13.352,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.354,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.356,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:37:13.356,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.358,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:37:13.358,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.360,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.361,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.362,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:37:13.365,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:37:13.366,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:37:13.366,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:37:13.368,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:37:13.369,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:37:13.370,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:37:13.679,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
17:37:14.210,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f574cc2: startup date [Thu Feb 01 17:37:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3688eb5b
17:37:14.340,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:37:14.340,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:37:14.449,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:37:15.133,No URLs will be polled as dynamic configuration sources.
17:37:15.134,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:37:15.147,No URLs will be polled as dynamic configuration sources.
17:37:15.147,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:37:15.489,Registering beans for JMX exposure on startup
17:37:15.505,Bean with name 'environmentManager' has been autodetected for JMX exposure
17:37:15.510,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:37:15.511,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:37:15.512,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
17:37:15.514,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:37:15.515,Bean with name 'refreshScope' has been autodetected for JMX exposure
17:37:15.520,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:37:15.539,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
17:37:15.566,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:37:15.576,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:37:15.601,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5f574cc2,type=ConfigurationPropertiesRebinder]
17:37:15.610,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:37:15.612,Registering beans for JMX exposure on startup
17:37:15.964,Starting beans in phase 0
17:37:15.979,Setting initial instance status as: STARTING
17:37:16.152,Initializing Eureka in region us-east-1
17:37:16.351,Using JSON encoding codec LegacyJacksonJson
17:37:16.351,Using JSON decoding codec LegacyJacksonJson
17:37:16.609,Using XML encoding codec XStreamXml
17:37:16.610,Using XML decoding codec XStreamXml
17:37:17.026,Resolving eureka endpoints via configuration
17:37:17.533,Disable delta property : false
17:37:17.534,Single vip registry refresh property : null
17:37:17.534,Force full registry fetch : false
17:37:17.534,Application is null : false
17:37:17.534,Registered Applications size is zero : true
17:37:17.534,Application version is -1: true
17:37:17.534,Getting all instance registry info from the eureka server
17:37:17.845,The response status is 200
17:37:17.849,Starting heartbeat executor: renew interval is: 30
17:37:17.855,InstanceInfoReplicator onDemand update allowed rate per min is 4
17:37:17.861,Discovery Client initialized at timestamp 1517477837861 with initial instances count: 4
17:37:17.925,Registering application nhb-nbiot with eureka with status UP
17:37:17.926,Saw local status change event StatusChangeEvent [timestamp=1517477837926, current=UP, previous=STARTING]
17:37:17.935,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:37:17.949,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:37:17.971,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091: registering service...
17:37:17.976,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:37:17.980,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:37:17.985,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:37:17.990,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:37:17.993,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:37:17.997,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:37:18.010,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:37:18.022,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:37:18.044,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:37:18.048,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:37:18.053,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:37:18.057,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:37:18.059,Starting beans in phase 2147483647
17:37:18.059,Context refreshed
17:37:18.059,DiscoveryClient_NHB-NBIOT/xuyahui:nhb-nbiot:9091 - registration status: 204
17:37:18.092,Found 1 custom documentation plugin(s)
17:37:18.203,Scanning for api listing references
17:37:18.561,Generating unique operation named: addUsingPOST_1
17:37:18.569,Generating unique operation named: deleteUsingPOST_1
17:37:18.580,Generating unique operation named: findByIdUsingPOST_1
17:37:18.598,Generating unique operation named: listUsingPOST_1
17:37:18.612,Generating unique operation named: modifyUsingPOST_1
17:37:18.630,Generating unique operation named: deleteUsingPOST_2
17:37:18.641,Generating unique operation named: findByIdUsingPOST_2
17:37:18.728,Initializing ProtocolHandler ["https-jsse-nio-9091"]
17:37:18.746,Starting ProtocolHandler ["https-jsse-nio-9091"]
17:37:18.871,Using a shared selector for servlet write/read
17:37:18.926,Tomcat started on port(s): 9091 (https)
17:37:18.928,Updating port to 9091
17:37:18.934,Started NhbNbApplication in 19.665 seconds (JVM running for 20.358)
17:37:23.916,Initializing Spring FrameworkServlet 'dispatcherServlet'
17:37:23.916,FrameworkServlet 'dispatcherServlet': initialization started
17:37:23.960,FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
17:37:32.263,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5afc5fa0: startup date [Thu Feb 01 17:37:32 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f574cc2
17:37:32.376,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:37:32.990,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:37:33.029,Shutdown hook installed for: NFLoadBalancer-PingTimer-nbiot-app
17:37:33.037,Client: nbiot-app instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:37:33.048,Using serverListUpdater PollingServerListUpdater
17:37:33.083,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:37:33.086,DynamicServerListLoadBalancer for client nbiot-app initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=nbiot-app,current list of Servers=[xuyahui:8000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:xuyahui:8000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1de1fe4b
17:37:34.082,Flipping property: nbiot-app.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
